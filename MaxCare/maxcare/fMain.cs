using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Linq;
using System.Net;
using System.Text.RegularExpressions;
using System.Threading;
using System.Windows.Forms;
using AE.Net.Mail;
using Bunifu.Framework.UI;
using Common;
using DeviceId;
using License.RNCryptor;
using maxcare.Enum;
using maxcare.Helper;
using maxcare.KichBan;
using maxcare.Properties;
using MaxCare.maxcare.Properties;
using MCommon;
using MetroFramework;
using MetroFramework.Controls;
using Newtonsoft.Json.Linq;
using OpenQA.Selenium;
using WindowsFormsControlLibrary1;
using xNet;

namespace maxcare
{


	public class fmain : Form
	{
		private Random rd = new Random();

		private bool isStop;

		public const int softIndex = 11;

		public const string nameSoft = "maxcare";

		public static fmain remote;

		private string contentUpdate = "";

		private JSON_Settings setting_general;

		private JSON_Settings setting_Interact;

		private JSON_Settings setting_InteractGeneral;

		private JSON_Settings setting_ShowDtgv;

		private JSON_Settings setting_MoTrinhDuyet;

		private bool kiukiu = false;

		private List<Thread> lstThread = null;

		private List<string> lstIdGroup = new List<string>();

		private List<string> lstIdFr = new List<string>();

		private List<TinsoftProxy> listTinsoft = null;

		private List<XproxyProxy> listxProxy = null;

		private List<TMProxy> listTMProxy = null;

		private List<ProxyWeb> listProxyWeb = null;

		private List<ShopLike> listShopLike = null;

		private List<MinProxy> listMinProxy = null;

		private List<string> listApiTinsoft = null;

		private List<string> listProxyXproxy = null;

		private List<string> listProxyTMProxy = null;

		private List<string> listProxyProxyv6 = null;

		private List<string> listProxyShopLike = null;

		private List<string> listProxyMinProxy = null;

		private Dictionary<string, List<string>> dicUidNhom = null;

		private Dictionary<string, List<string>> dicUidNhom2 = null;

		private Dictionary<string, List<string>> dicUidCaNhan = null;

		private Dictionary<string, List<string>> dicUidCaNhan2 = null;

		private Dictionary<string, List<string>> dicUidBaivietProfile = null;

		private Dictionary<string, List<string>> dicUidSpamBaiViet = null;

		private Dictionary<string, List<string>> dicCommentSpamBaiViet = null;

		private Dictionary<string, List<string>> dicUidTinNhanProfile = null;

		private Dictionary<string, List<string>> dicKetBanUidNew = null;

		private Dictionary<string, List<string>> dicBuffLikeComment_Comment = null;

		private Dictionary<string, List<string>> dicBuffLikeComment_CommentGoc = null;

		private Dictionary<string, List<string>> dicDangStatus_NoiDung = null;

		private Dictionary<string, List<string>> dicDangStatus_NoiDungGoc = null;

		private Dictionary<string, List<string>> dicDangStatusV2_NoiDung = null;

		private Dictionary<string, List<string>> dicDangStatusV2_NoiDungGoc = null;

		private Dictionary<string, List<string>> dicDangBai_NoiDung = null;

		private Dictionary<string, List<string>> dicDangBai_NoiDungGoc = null;

		private Dictionary<string, List<string>> dicUidPhanHoiComment = null;

		private Dictionary<string, List<string>> dicIdBaiViet = null;

		private Dictionary<string, List<string>> dicIdBaiVietClone = null;

		private string ipx = "";

		private object lock_StartProxy = new object();

		private object lock_FinishProxy = new object();

		private int checkDelayChrome = 0;

		private object lock_checkDelayChrome = new object();

		private List<string> lstImage = new List<string>();

		private List<string> lstGroupShared = new List<string>();

		private object lock_fileig = new object();

		private object _lockbackup = new object();

		private List<string> lstPathPostTemp = new List<string>();

		private object lock_baivietprofile = new object();

		private object lock_BuffTinNhanProfile = new object();

		private object lock_db2 = new object();

		private object lock_db3 = new object();

		private object z = new object();

		private object lockStatus = new object();

		private int indexCbbThuMucOld = -1;

		private bool isExcute_CbbThuMuc_SelectedIndexChanged = true;

		private object objLock = new object();

		private object _lock = new object();

		private object _lock2 = new object();

		private object _lock3 = new object();

		private object _lock4 = new object();

		private int i1 = 0;

		private int indexCbbTinhTrangOld = -1;

		private bool isExcute_CbbTinhTrang_SelectedIndexChanged = true;

		private int namee = 1;

		private bool isCountCheckAccountWhenChayTuongTac = false;

		private object i = new object();

		private object p = new object();

		private List<string> lstPathImage = new List<string>();

		private IContainer components = null;

		public static string c1 = "";

		public DataGridView dtgvAcc;

		private BunifuCards bunifuCards1;

		private Panel pnlHeader;

		private PictureBox pictureBox1;

		private Button button2;

		private Button button1;

		private Button btnMinimize;

		private BunifuCustomLabel bunifuCustomLabel1;

		private GroupBox grQuanLyThuMuc;

		private Label label1;

		private MetroComboBox cbbThuMuc;

		private Button btnInteract;

		private Button btnPause;

		private GroupBox grTimKiem;

		private BunifuCustomTextbox txbSearch;

		private Button btnShare;

		private Button btnPost;

		private Button btnViewLivestream;

		private Panel plChucNang;

		private Button button4;

		private Button button6;

		private Button button7;

		private ComboBox cbbSearch;

		private Button button8;

		private MetroComboBox cbbTinhTrang;

		private Label label2;

		private Button button9;

		private Panel plTrangThai;

		private Label lblTrangThai;

		private Panel panel1;

		private DataGridViewCheckBoxColumn cChose;

		private DataGridViewTextBoxColumn cStt;

		private DataGridViewTextBoxColumn cId;

		private DataGridViewTextBoxColumn cUid;

		private DataGridViewTextBoxColumn cToken;

		private DataGridViewTextBoxColumn cCookies;

		private DataGridViewTextBoxColumn cEmail;

		private DataGridViewTextBoxColumn cPhone;

		private DataGridViewTextBoxColumn cName;

		private DataGridViewTextBoxColumn cFollow;

		private DataGridViewTextBoxColumn cFriend;

		private DataGridViewTextBoxColumn cGroup;

		private DataGridViewTextBoxColumn cBirthday;

		private DataGridViewTextBoxColumn cGender;

		private DataGridViewTextBoxColumn cPassword;

		private DataGridViewTextBoxColumn cMailRecovery;

		private DataGridViewTextBoxColumn cPassMail;

		private DataGridViewTextBoxColumn cBackup;

		private DataGridViewTextBoxColumn cFa2;

		private DataGridViewTextBoxColumn cUseragent;

		private DataGridViewTextBoxColumn cProxy;

		private DataGridViewTextBoxColumn cDateCreateAcc;

		private DataGridViewTextBoxColumn cAvatar;

		private DataGridViewTextBoxColumn cProfile;

		private DataGridViewTextBoxColumn cThuMuc;

		private DataGridViewTextBoxColumn cInteractEnd;

		private DataGridViewTextBoxColumn cInfo;

		private DataGridViewTextBoxColumn cGhiChu;

		private DataGridViewTextBoxColumn cStatus;

		private LinkLabel lblNotify;

		public fmain(string log)
		{
			InitializeComponent();
			ChangeLanguage();
			string[] array = log.Split('|');
			lblDateExpried.Text = "20/05/2030";
			lblKey.Text = "****";
			lblUser.Text = "Vĩnh Viễn";
			remote = this;
		}

		private void ChangeLanguage()
		{
			//Discarded unreachable code: IL_0282, IL_029c
			Language.GetValue(bunifuCustomLabel1);
			Language.GetValue(hệThốngToolStripMenuItem);
			Language.GetValue(càiĐặtToolStripMenuItem);
			Language.GetValue(thoátToolStripMenuItem);
			Language.GetValue(taiKhoanĐaXoaToolStripMenuItem);
			Language.GetValue(tiệnÍchToolStripMenuItem);
			Language.GetValue(checkLiveUidToolStripMenuItem);
			Language.GetValue(checkProxyToolStripMenuItem1);
			Language.GetValue(checkHotmailToolStripMenuItem);
			Language.GetValue(lọcTrùngDữLiệuToolStripMenuItem);
			Language.GetValue(xửLýChuỗiOnlineToolStripMenuItem);
			Language.GetValue(liênHệToolStripMenuItem);
			Language.GetValue(btnInteract);
			Language.GetValue(btnPause);
			Language.GetValue(grTimKiem);
			Language.GetValue(grQuanLyThuMuc);
			Language.GetValue(label1);
			Language.GetValue(label2);
			Language.GetValue(button9);
			Language.GetValue(btnPost);
			Language.GetValue(btnShare);
			Language.GetValue(btnViewLivestream);
			Language.GetValue(button4);
			Language.GetValue(button6);
			Language.GetValue(button7);
			Language.GetValue(btnRandomIndexRow);

			Language.GetValue(toolStripStatusLabel1);
			Language.GetValue(lblStatus);
			Language.GetValue(toolStripStatusLabel3);
			Language.GetValue(toolStripStatusLabel9);
			Language.GetValue(toolStripStatusLabel10);
			Language.GetValue(toolStripStatusLabel5);
			Language.GetValue(toolStripStatusLabel7);
			foreach (DataGridViewColumn column in dtgvAcc.Columns)
			{
				Language.GetValue(column);
			}
			Language.GetValue(chọnLiveToolStripMenuItem);
			Language.GetValue(tấtCảToolStripMenuItem);
			Language.GetValue(liveToolStripMenuItem);
			Language.GetValue(tinhTrangToolStripMenuItem);
			Language.GetValue(trạngTháiToolStripMenuItem);
			Language.GetValue(bỏChọnTấtCảToolStripMenuItem);
			Language.GetValue(maBaoMât6SôToolStripMenuItem);
			Language.GetValue(mởTrìnhDuyệtToolStripMenuItem);
			Language.GetValue(mởLuônToolStripMenuItem);
			Language.GetValue(càiĐặtCấuHìnhMởToolStripMenuItem);
			Language.GetValue(xóaTàiKhoảnToolStripMenuItem);
			Language.GetValue(checkCookieToolStripMenuItem);
			Language.GetValue(câpNhâtThôngTinCaNhânToolStripMenuItem);
			Language.GetValue(sưDungTokenTrungGianToolStripMenuItem);
			Language.GetValue(sửDụngCookieTrungGianToolStripMenuItem);
			Language.GetValue(cậpNhậtDữLiệuToolStripMenuItem);
			Language.GetValue(cậpToolStripMenuItem);
			Language.GetValue(ghiChuToolStripMenuItem);
			Language.GetValue(ngàySinhToolStripMenuItem);
			Language.GetValue(chuyểnThưMụcToolStripMenuItem);
			Language.GetValue(chứcNăngToolStripMenuItem1);
			Language.GetValue(locTrungToolStripMenuItem);
			Language.GetValue(taoShortcutChromeToolStripMenuItem);
			Language.GetValue(tảiXuốngAvatarToolStripMenuItem);
			Language.GetValue(lToolStripMenuItem);
			Language.GetValue(tạoProfileToolStripMenuItem);
			Language.GetValue(xóaProfileToolStripMenuItem);
			Language.GetValue(donDepProfileToolStripMenuItem);
			Language.GetValue(xóaCacheToolStripMenuItem);
			Language.GetValue(backupToolStripMenuItem);
			Language.GetValue(backupCookieToolStripMenuItem);
			Language.GetValue(taoFileHTMLToolStripMenuItem);
			Language.GetValue(mởThưMụcBackupToolStripMenuItem);
			Language.GetValue(backupToolStripMenuItem1);
			Language.GetValue(xóaDữLiệuBackupToolStripMenuItem);
			Language.GetValue(dọnDẹpBackupToolStripMenuItem);
			Language.GetValue(giaiCheckpointToolStripMenuItem);
			Language.GetValue(giảiCheckpintNgàySinhToolStripMenuItem);
			Language.GetValue(gửiOTPVềMailGiaoDiệnMớiToolStripMenuItem);
			Language.GetValue(tảiLạiDanhSáchToolStripMenuItem);
		}

		protected override void OnLoad(EventArgs args)
		{
			Application.Idle += OnLoaded;
		}

		private void OnLoaded(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_051a, IL_0565
			Application.Idle -= OnLoaded;
			
			lblStatus.Text = Language.GetValue("Đã kích hoạt");
			lblNotify.Visible = contentUpdate == "";
			Base.useragentDefault = CommonChrome.GetUserAgentDefault();
			SetupFolder.StartApplication();
			LoadcbbSearch();
			LoadSetting();
			LoadConfigManHinh();
			LoadCbbThuMuc();
			LoadCbbTinhTrang();
			Base.width = base.Width;
			Base.heigh = base.Height;
			menuStrip1.Cursor = Cursors.Hand;
		}

		private void LoadcbbSearch()
		{
			Dictionary<string, string> dataSource = new Dictionary<string, string>
		{
			{ "cUid", "UID" },
			{
				"cPassword",
				Language.GetValue("Mật khẩu")
			},
			{
				"cName",
				Language.GetValue("Tên")
			},
			{
				"cBirthday",
				Language.GetValue("Ngày sinh")
			},
			{
				"cGender",
				Language.GetValue("Giới tính")
			},
			{ "cToken", "Token" },
			{ "cCookies", "Cookie" },
			{ "cEmail", "Email" },
			{ "cPassMail", "Pass email" },
			{ "cFa2", "2FA" },
			{
				"cGhiChu",
				Language.GetValue("Ghi chu\u0301")
			},
			{
				"cInteractEnd",
				Language.GetValue("Tương ta\u0301c cuô\u0301i")
			}
		};
			cbbSearch.DataSource = new BindingSource(dataSource, null);
			cbbSearch.ValueMember = "Key";
			cbbSearch.DisplayMember = "Value";
		}

		private void LoadCbbThuMuc()
		{
			isExcute_CbbThuMuc_SelectedIndexChanged = false;
			DataTable allFilesFromDatabase = CommonSQL.GetAllFilesFromDatabase(isShowAll: true);
			cbbThuMuc.DataSource = allFilesFromDatabase;
			cbbThuMuc.ValueMember = "id";
			cbbThuMuc.DisplayMember = "name";
			isExcute_CbbThuMuc_SelectedIndexChanged = true;
		}

		private void LoadCbbTinhTrang(List<string> lstIdFile = null)
		{
			//Discarded unreachable code: IL_0077, IL_0084
			try
			{
				DataTable allInfoFromAccount = CommonSQL.GetAllInfoFromAccount(lstIdFile);
				cbbTinhTrang.DataSource = allInfoFromAccount;
				cbbTinhTrang.ValueMember = "id";
				cbbTinhTrang.DisplayMember = "name";
			}
			catch
			{
			}
		}

		private void BtnMinimize_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_0024, IL_0031, IL_0062, IL_007b
			try
			{
				try
				{
					File.Delete("settings\\language.txt");
				}
				catch
				{
				}
				MCommon.Common.KillProcess("chromedriver");
				Environment.Exit(0);
			}
			catch
			{
				Close();
			}
		}

		private void Button1_Click(object sender, EventArgs e)
		{
			if (base.Width == Screen.PrimaryScreen.WorkingArea.Width && base.Height == Screen.PrimaryScreen.WorkingArea.Height)
			{
				base.Width = Base.width;
				base.Height = Base.heigh;
				base.Top = Base.top;
				base.Left = Base.left;
			}
			else
			{
				Base.top = base.Top;
				Base.left = base.Left;
				base.Top = 0;
				base.Left = 0;
				base.Width = Screen.PrimaryScreen.WorkingArea.Width;
				base.Height = Screen.PrimaryScreen.WorkingArea.Height;
			}
		}

		private void Button2_Click(object sender, EventArgs e)
		{
			base.WindowState = FormWindowState.Minimized;
		}

		public void BtnLoadAcc_Click(object sender, EventArgs e)
		{
			string text = "";
			if (cbbThuMuc.SelectedValue != null)
			{
				text = cbbThuMuc.SelectedValue.ToString();
			}
			LoadCbbThuMuc();
			if (text != "999999" && text != "-1")
			{
				indexCbbThuMucOld = -1;
				cbbThuMuc.SelectedValue = text;
				return;
			}
			isExcute_CbbThuMuc_SelectedIndexChanged = false;
			cbbThuMuc.SelectedValue = text;
			isExcute_CbbThuMuc_SelectedIndexChanged = true;
			LoadCbbTinhTrang(fChonThuMuc.lstChooseIdFiles);
		}

		private List<string> GetIdFile()
		{
			//Discarded unreachable code: IL_00a3, IL_00b0
			List<string> result = null;
			try
			{
				string text = cbbThuMuc.SelectedValue.ToString();
				string text2 = text;
				if (!(text2 == "-1"))
				{
					result = ((!(text2 == "999999")) ? new List<string> { cbbThuMuc.SelectedValue.ToString() } : CollectionHelper.CloneList(fChonThuMuc.lstChooseIdFiles));
				}
			}
			catch
			{
			}
			return result;
		}

		private void LoadAccountFromFile(List<string> lstIdFile = null, string info = "")
		{
			//Discarded unreachable code: IL_00b8, IL_00c5
			try
			{
				dtgvAcc.Rows.Clear();
				if (info == "[Tất cả tình trạng]" || info == Language.GetValue("[Tất cả tình trạng]"))
				{
					info = "";
				}
				DataTable accFromFile = CommonSQL.GetAccFromFile(lstIdFile, info);
				LoadDtgvAccFromDatatable(accFromFile);
			}
			catch (Exception)
			{
			}
		}

		private void LoadDtgvAccFromDatatable(DataTable tableAccount)
		{
			for (int i = 0; i < tableAccount.Rows.Count; i++)
			{
				DataRow dataRow = tableAccount.Rows[i];
				dtgvAcc.Rows.Add(false, dtgvAcc.RowCount + 1, dataRow["id"], dataRow["uid"], dataRow["token"], dataRow["cookie1"], dataRow["email"], dataRow["phone"], dataRow["name"], dataRow["follow"], dataRow["friends"], dataRow["groups"], dataRow["birthday"], dataRow["gender"], dataRow["pass"], "", dataRow["passmail"], dataRow["backup"], dataRow["fa2"], dataRow["useragent"], dataRow["proxy"], dataRow["dateCreateAcc"], dataRow["avatar"], dataRow["profile"], dataRow["nameFile"], dataRow["interactEnd"], dataRow["info"], dataRow["ghiChu"], "");
			}
			CountCheckedAccount(0);
			SetRowColor();
			CountTotalAccount();

		}

		private void Button3_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_00d6, IL_00e3
			try
			{
				string text = "";
				if (cbbThuMuc.SelectedValue != null)
				{
					text = cbbThuMuc.SelectedValue.ToString();
				}
				MCommon.Common.ShowForm(new fImportAccount(text));
				if (fImportAccount.isAddAccount || fImportAccount.isAddFile)
				{
					LoadCbbThuMuc();
					indexCbbThuMucOld = -1;
					if (fImportAccount.isAddAccount)
					{
						cbbThuMuc.SelectedValue = fImportAccount.idFileAdded;
					}
					else
					{
						cbbThuMuc.SelectedValue = text;
					}
				}
			}
			catch
			{
			}
		}

		private int GetIndexRowFromCondition(string id)
		{
			int result = -1;
			for (int i = 0; i < dtgvAcc.RowCount; i++)
			{
				if (dtgvAcc.Rows[i].Cells["cId"].Value.ToString().Equals(id))
				{
					result = i;
					break;
				}
			}
			return result;
		}

		private void ChoseRowInDatagrid(string modeChose)
		{
			switch (modeChose)
			{
				case "All":
					{
						for (int k = 0; k < dtgvAcc.RowCount; k++)
						{
							SetCellAccount(k, "cChose", true);
						}
						CountCheckedAccount(dtgvAcc.RowCount);
						break;
					}
				case "UnAll":
					{
						for (int j = 0; j < dtgvAcc.RowCount; j++)
						{
							SetCellAccount(j, "cChose", false);
						}
						CountCheckedAccount(0);
						break;
					}
				case "SelectHighline":
					{
						DataGridViewSelectedRowCollection selectedRows = dtgvAcc.SelectedRows;
						for (int l = 0; l < selectedRows.Count; l++)
						{
							SetCellAccount(selectedRows[l].Index, "cChose", true);
						}
						CountCheckedAccount();
						break;
					}
				case "ToggleCheck":
					{
						for (int i = 0; i < dtgvAcc.SelectedRows.Count; i++)
						{
							int index = dtgvAcc.SelectedRows[i].Index;
							SetCellAccount(index, "cChose", !Convert.ToBoolean(GetCellAccount(index, "cChose")));
						}
						CountCheckedAccount();
						break;
					}
			}
		}

		private void CopyRowDatagrid(string modeCopy)
		{
			//Discarded unreachable code: IL_17c0, IL_17cd
			try
			{
				string text = "";
				List<string> list = new List<string>();
				for (int i = 0; i < dtgvAcc.Rows.Count; i++)
				{
					if (Convert.ToBoolean(GetCellAccount(i, "cChose")))
					{
						list.Add(GetCellAccount(i, "cId"));
						break;
					}
				}
				if (list.Count == 0)
				{
					MessageBoxHelper.ShowMessageBox("Vui lòng chọn danh sách tài khoản muốn copy thông tin!", 3);
					return;
				}
				switch (modeCopy)
				{
					case "token":
						{
							for (int k = 0; k < dtgvAcc.RowCount; k++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[k].Cells["cChose"].Value))
								{
									text = text + GetCellAccount(k, "cToken") + "\r\n";
								}
							}
							break;
						}
					case "useragent":
						{
							for (int num5 = 0; num5 < dtgvAcc.RowCount; num5++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num5].Cells["cChose"].Value))
								{
									text = text + GetCellAccount(num5, "cUseragent") + "\r\n";
								}
							}
							break;
						}
					case "proxy":
						{
							for (int num9 = 0; num9 < dtgvAcc.RowCount; num9++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num9].Cells["cChose"].Value))
								{
									text = text + GetCellAccount(num9, "cProxy").Split('*')[0] + "\r\n";
								}
							}
							break;
						}
					case "cookie":
						{
							for (int num = 0; num < dtgvAcc.RowCount; num++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
								{
									string cellAccount = GetCellAccount(num, "cCookies");
									text = text + cellAccount + "\r\n";
								}
							}
							break;
						}
					case "uid|pass":
						{
							for (int num11 = 0; num11 < dtgvAcc.RowCount; num11++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num11].Cells["cChose"].Value))
								{
									text = text + GetCellAccount(num11, "cUid") + "|" + GetCellAccount(num11, "cPassword") + "\r\n";
								}
							}
							break;
						}
					case "uid|pass|2fa":
						{
							for (int num7 = 0; num7 < dtgvAcc.RowCount; num7++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num7].Cells["cChose"].Value))
								{
									text = text + GetCellAccount(num7, "cUid") + "|" + GetCellAccount(num7, "cPassword") + "|" + GetCellAccount(num7, "cFa2") + "\r\n";
								}
							}
							break;
						}
					case "uid":
						{
							for (int num3 = 0; num3 < dtgvAcc.RowCount; num3++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num3].Cells["cChose"].Value))
								{
									text = text + GetCellAccount(num3, "cUid") + "\r\n";
								}
							}
							break;
						}
					case "pass":
						{
							for (int m = 0; m < dtgvAcc.RowCount; m++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[m].Cells["cChose"].Value))
								{
									text = text + GetCellAccount(m, "cPassword") + "\r\n";
								}
							}
							break;
						}
					case "mail":
						{
							for (int num12 = 0; num12 < dtgvAcc.RowCount; num12++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num12].Cells["cChose"].Value))
								{
									text = text + GetCellAccount(num12, "cEmail") + "\r\n";
								}
							}
							break;
						}
					case "2fa":
						{
							for (int num10 = 0; num10 < dtgvAcc.RowCount; num10++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num10].Cells["cChose"].Value))
								{
									text = text + GetCellAccount(num10, "cFa2") + "\r\n";
								}
							}
							break;
						}
					case "ma2fa":
						{
							for (int num8 = 0; num8 < dtgvAcc.RowCount; num8++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num8].Cells["cChose"].Value))
								{
									text = text + MCommon.Common.GetTotp(GetCellAccount(num8, "cFa2")) + "\r\n";
								}
							}
							break;
						}
					case "uid|pass|token|cookie":
						{
							for (int num6 = 0; num6 < dtgvAcc.RowCount; num6++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num6].Cells["cChose"].Value))
								{
									text = text + GetCellAccount(num6, "cUid") + "|" + GetCellAccount(num6, "cPassword") + "|" + GetCellAccount(num6, "cToken") + "|" + GetCellAccount(num6, "cCookies") + "\r\n";
								}
							}
							break;
						}
					case "mail|passmail":
						{
							for (int num4 = 0; num4 < dtgvAcc.RowCount; num4++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num4].Cells["cChose"].Value))
								{
									text = text + GetCellAccount(num4, "cEmail") + "|" + GetCellAccount(num4, "cPassMail") + "\r\n";
								}
							}
							break;
						}
					case "uid|pass|token|cookie|mail|passmail":
						{
							for (int num2 = 0; num2 < dtgvAcc.RowCount; num2++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num2].Cells["cChose"].Value))
								{
									text = text + GetCellAccount(num2, "cUid") + "|" + GetCellAccount(num2, "cPassword") + "|" + GetCellAccount(num2, "cToken") + "|" + GetCellAccount(num2, "cCookies") + "|" + GetCellAccount(num2, "cEmail") + "|" + GetCellAccount(num2, "cPassMail") + "\r\n";
								}
							}
							break;
						}
					case "uid|pass|token|cookie|mail|passmail|fa2":
						{
							for (int n = 0; n < dtgvAcc.RowCount; n++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[n].Cells["cChose"].Value))
								{
									text = text + GetCellAccount(n, "cUid") + "|" + GetCellAccount(n, "cPassword") + "|" + GetCellAccount(n, "cToken") + "|" + GetCellAccount(n, "cCookies") + "|" + GetCellAccount(n, "cEmail") + "|" + GetCellAccount(n, "cPassMail") + "|" + GetCellAccount(n, "cFa2") + "\r\n";
								}
							}
							break;
						}
					case "name":
						{
							for (int l = 0; l < dtgvAcc.RowCount; l++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[l].Cells["cChose"].Value))
								{
									text = text + GetCellAccount(l, "cName") + "\r\n";
								}
							}
							break;
						}
					case "birthday":
						{
							for (int j = 0; j < dtgvAcc.RowCount; j++)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[j].Cells["cChose"].Value))
								{
									text = text + GetCellAccount(j, "cBirthday") + "\r\n";
								}
							}
							break;
						}
				}
				Clipboard.SetText(text.TrimEnd('\r', '\n'));
			}
			catch
			{
			}
		}

		private string ConvertCookie(string cookie)
		{
			string text = "";
			string value = Regex.Match(cookie + ";", "sb=(.*?);").Groups[1].Value;
			if (value != "")
			{
				text = text + "sb=" + value + ";";
			}
			string value2 = Regex.Match(cookie + ";", "wd=(.*?);").Groups[1].Value;
			if (value2 != "")
			{
				text = text + "wd=" + value2 + ";";
			}
			string value3 = Regex.Match(cookie + ";", "datr=(.*?);").Groups[1].Value;
			if (value3 != "")
			{
				text = text + "datr=" + value3 + ";";
			}
			string value4 = Regex.Match(cookie + ";", "locale=(.*?);").Groups[1].Value;
			if (value4 != "")
			{
				text = text + "locale=" + value4 + ";";
			}
			string value5 = Regex.Match(cookie + ";", "c_user=(.*?);").Groups[1].Value;
			if (value5 != "")
			{
				text = text + "c_user=" + value5 + ";";
			}
			string value6 = Regex.Match(cookie + ";", "xs=(.*?);").Groups[1].Value;
			if (value6 != "")
			{
				text = text + "xs=" + value6 + ";";
			}
			string value7 = Regex.Match(cookie + ";", "fr=(.*?);").Groups[1].Value;
			if (value7 != "")
			{
				text = text + "fr=" + value7 + ";";
			}
			string value8 = Regex.Match(cookie + ";", "spin=(.*?);").Groups[1].Value;
			if (value8 != "")
			{
				text = text + "spin=" + value8 + ";";
			}
			return text;
		}

		private void TấtCảToolStripMenuItem_Click(object sender, EventArgs e)
		{
			ChoseRowInDatagrid("All");
		}

		private void LiveToolStripMenuItem_Click(object sender, EventArgs e)
		{
			ChoseRowInDatagrid("SelectHighline");
		}

		private void BỏChọnTấtCảToolStripMenuItem_Click(object sender, EventArgs e)
		{
			ChoseRowInDatagrid("UnAll");
		}

		private void TokenToolStripMenuItem_Click(object sender, EventArgs e)
		{
			CopyRowDatagrid("token");
		}

		private void CookieToolStripMenuItem_Click(object sender, EventArgs e)
		{
			CopyRowDatagrid("cookie");
		}

		private void UidToolStripMenuItem_Click(object sender, EventArgs e)
		{
			CopyRowDatagrid("uid");
		}

		private void PassToolStripMenuItem_Click(object sender, EventArgs e)
		{
			CopyRowDatagrid("pass");
		}

		private void UidPassToolStripMenuItem_Click(object sender, EventArgs e)
		{
			CopyRowDatagrid("uid|pass");
		}

		private void UidPassTokenCookieToolStripMenuItem_Click(object sender, EventArgs e)
		{
			CopyRowDatagrid("uid|pass|token|cookie");
		}

		private void AddFileAccount_Click_1(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fAddFile());
			if (fAddFile.isAdd)
			{
				LoadCbbThuMuc();
				cbbThuMuc.SelectedIndex = cbbThuMuc.Items.Count - 2;
			}
		}

		private void DeleteAccountDatagridFromId()
		{
			for (int i = 0; i < dtgvAcc.SelectedRows.Count; i++)
			{
				dtgvAcc.Rows.RemoveAt(dtgvAcc.SelectedRows[i].Index);
			}
		}

		private void FMain_Load(object sender, EventArgs e)
		{
		}

		private void CtmsAcc_Opening(object sender, CancelEventArgs e)
		{
			if (!kiukiu)
			{
				kiukiu = true;
				string text = lblUser.Text.Trim().ToLower();
				int num;
				switch (text)
				{
					default:
						num = ((text == "pro") ? 1 : 0);
						break;
					case "":
					case "lip":
					case "bee":
						num = 1;
						break;
				}
	
			}
			chuyểnThưMụcToolStripMenuItem.DropDownItems.Clear();
			DataTable allFilesFromDatabase = CommonSQL.GetAllFilesFromDatabase();
			int num2 = 0;
			for (int i = 0; i < allFilesFromDatabase.Rows.Count; i++)
			{
				DataRow dataRow = allFilesFromDatabase.Rows[i];
				if (dataRow["id"].ToString() != ((cbbThuMuc.SelectedValue == null) ? "" : cbbThuMuc.SelectedValue.ToString()))
				{
					chuyểnThưMụcToolStripMenuItem.DropDownItems.Add(dataRow["name"].ToString());
					chuyểnThưMụcToolStripMenuItem.DropDownItems[i - num2].Tag = dataRow["id"];
					chuyểnThưMụcToolStripMenuItem.DropDownItems[i - num2].Click += TransfomerAccount;
				}
				else
				{
					num2++;
				}
			}
			trạngTháiToolStripMenuItem.DropDownItems.Clear();
			List<string> list = new List<string>();
			string text2 = "";
			string text3 = "";
			for (int j = 0; j < dtgvAcc.RowCount; j++)
			{
				text2 = GetCellAccount(j, "cStatus");
				if (text2 != "")
				{
					text3 = Regex.Match(text2, "\\(IP: (.*?)\\)").Value;
					if (text3 != "")
					{
						text2 = text2.Replace(text3, "").Trim();
					}
					text3 = Regex.Match(text2, "\\[(.*?)\\]").Value;
					if (text3 != "")
					{
						text2 = text2.Replace(text3, "").Trim();
					}
					if (text2 != "" && !list.Contains(text2))
					{
						list.Add(text2);
					}
				}
			}
			for (int k = 0; k < list.Count; k++)
			{
				trạngTháiToolStripMenuItem.DropDownItems.Add(list[k]);
				trạngTháiToolStripMenuItem.DropDownItems[k].Click += SelectGridByStatus;
			}
			tinhTrangToolStripMenuItem.DropDownItems.Clear();
			list = new List<string>();
			string text4 = "";
			for (int l = 0; l < dtgvAcc.RowCount; l++)
			{
				text4 = GetCellAccount(l, "cInfo");
				if (!text4.Equals("") && !list.Contains(text4))
				{
					list.Add(text4);
				}
			}
			for (int m = 0; m < list.Count; m++)
			{
				tinhTrangToolStripMenuItem.DropDownItems.Add(list[m]);
				tinhTrangToolStripMenuItem.DropDownItems[m].Click += SelectGridByInfo;
			}
		}

		private void SelectGridByInfo(object sender, EventArgs e)
		{
			ChooseAccountByValue("cInfo", (sender as ToolStripMenuItem).Text);
		}

		private void SelectGridByStatus(object sender, EventArgs e)
		{
			ChooseAccountByValue("cStatus", (sender as ToolStripMenuItem).Text);
		}

		private void ChooseAccountByValue(string column, string value)
		{
			for (int i = 0; i < dtgvAcc.RowCount; i++)
			{
				dtgvAcc.Rows[i].Cells["cChose"].Value = GetCellAccount(i, column).Contains(value);
			}
			CountCheckedAccount();
		}

		private void TransfomerAccount(object sender, EventArgs e)
		{
			if (Convert.ToInt32(lblCountSelect.Text) == 0)
			{
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng chọn tài khoản muốn chuyển!"), 3);
				return;
			}
			ToolStripMenuItem toolStripMenuItem = sender as ToolStripMenuItem;
			if (MessageBoxHelper.ShowMessageBoxWithQuestion(string.Format(Language.GetValue("Bạn có thực sự muốn chuyển {0} tài khoản sang thư mục [{1}]?"), lblCountSelect.Text, toolStripMenuItem.Text)) == DialogResult.Yes)
			{
				TransfomAccountToOrtherFile(toolStripMenuItem.Tag.ToString());
			}
		}

		private void TransfomAccountToOrtherFile(string idFileTo)
		{
			//Discarded unreachable code: IL_022f, IL_023c
			try
			{
				List<string> list = new List<string>();
				for (int i = 0; i < dtgvAcc.RowCount; i++)
				{
					if (Convert.ToBoolean(dtgvAcc.Rows[i].Cells["cChose"].Value))
					{
						list.Add(dtgvAcc.Rows[i].Cells["cId"].Value.ToString());
					}
				}
				if (CommonSQL.UpdateFieldToAccount(list, "idfile", idFileTo))
				{
					for (int j = 0; j < dtgvAcc.RowCount; j++)
					{
						if (Convert.ToBoolean(dtgvAcc.Rows[j].Cells["cChose"].Value))
						{
							dtgvAcc.Rows.RemoveAt(j--);
						}
					}
					SetRowColor();
					UpdateSttOnDatatable();
					CountCheckedAccount(0);
					CountTotalAccount();
					MessageBoxHelper.ShowMessageBox(string.Format(Language.GetValue("Chuyển thành công {0} tài khoản!"), list.Count));
				}
				else
				{
					MessageBoxHelper.ShowMessageBox(Language.GetValue("Chuyển thất bại, vui lòng thử lại sau!"), 2);
				}
			}
			catch
			{
			}
		}

		private void DeleteAccount(bool isDeleteProfile)
		{
			List<string> list = new List<string>();
			for (int i = 0; i < dtgvAcc.RowCount; i++)
			{
				if (Convert.ToBoolean(dtgvAcc.Rows[i].Cells["cChose"].Value))
				{
					list.Add(dtgvAcc.Rows[i].Cells["cId"].Value.ToString());
				}
			}
			if (list.Count == 0)
			{
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng chọn tài khoản cần xóa!"));
			}
			else
			{
				if (MessageBoxHelper.ShowMessageBoxWithQuestion(string.Format(Language.GetValue("Bạn có muốn xóa {0} tài khoản đã chọn?"), CountChooseRowInDatagridview()) + "\r\n\r\n" + Language.GetValue("(Ta\u0300i khoa\u0309n sau khi xo\u0301a se\u0303 đươ\u0323c lưu ta\u0323i mu\u0323c [Ta\u0300i khoa\u0309n đa\u0303 xo\u0301a])")) != DialogResult.Yes)
				{
					return;
				}
				if (isDeleteProfile)
				{
					int iThread = 0;
					int num = 0;
					while (num < dtgvAcc.Rows.Count)
					{
						if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
						{
							if (iThread < 10)
							{
								Interlocked.Increment(ref iThread);
								int row = num++;
								new Thread((ThreadStart)delegate
								{
									SetStatusAccount(row, Language.GetValue("Đang xo\u0301a profile..."));
									DeleteProfile(row);
									Interlocked.Decrement(ref iThread);
								}).Start();
							}
							else
							{
								Application.DoEvents();
								Thread.Sleep(200);
							}
						}
						else
						{
							num++;
						}
					}
					while (iThread > 0)
					{
						MCommon.Common.DelayTime(1.0);
					}
				}
				if (CommonSQL.DeleteAccountToDatabase(list))
				{
					for (int j = 0; j < dtgvAcc.RowCount; j++)
					{
						if (Convert.ToBoolean(dtgvAcc.Rows[j].Cells["cChose"].Value))
						{
							dtgvAcc.Rows.RemoveAt(j--);
						}
					}
					UpdateSttOnDatatable();
					CountTotalAccount();
					CountCheckedAccount(0);
				}
				else
				{
					MessageBoxHelper.ShowMessageBox(Language.GetValue("Xóa thất bại, vui lòng thử lại sau!"), 2);
				}
			}
		}

		public List<string> GetListKeyTinsoft()
		{
			//Discarded unreachable code: IL_018a, IL_019f, IL_0217, IL_022b, IL_0233, IL_0240
			List<string> list = new List<string>();
			try
			{
				if (setting_general.GetValueInt("typeApiTinsoft") == 0)
				{
					RequestXNet requestXNet = new RequestXNet("", "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR 1.0.3705;)", "", 0);
					string json = requestXNet.RequestGet("http://proxy.tinsoftsv.com/api/getUserKeys.php?key=" + setting_general.GetValue("txtApiUser"));
					JObject jObject = JObject.Parse(json);
					foreach (JToken item in (IEnumerable<JToken>)jObject["data"])
					{
						if (Convert.ToBoolean(item["success"].ToString()))
						{
							list.Add(item["key"].ToString());
						}
					}
				}
				else
				{
					List<string> valueList = setting_general.GetValueList("txtApiProxy");
					foreach (string item2 in valueList)
					{
						if (TinsoftProxy.CheckApiProxy(item2))
						{
							list.Add(item2);
						}
					}
				}
			}
			catch
			{
			}
			return list;
		}

		private bool CheckIsUidFacebook(string uid)
		{
			return MCommon.Common.IsNumber(uid) && !uid.StartsWith("0");
		}

		private Dictionary<string, List<string>> GetDictionaryIntoHanhDong(string idKichBan, string tenTuongTac, string field = "txtUid")
		{
			//Discarded unreachable code: IL_00fd, IL_010a
			Dictionary<string, List<string>> dictionary = new Dictionary<string, List<string>>();
			try
			{
				List<string> idHanhDongByIdKichBanAndTenTuongTac = InteractSQL.GetIdHanhDongByIdKichBanAndTenTuongTac(idKichBan, tenTuongTac);
				if (idHanhDongByIdKichBanAndTenTuongTac.Count > 0)
				{
					for (int i = 0; i < idHanhDongByIdKichBanAndTenTuongTac.Count; i++)
					{
						string text = idHanhDongByIdKichBanAndTenTuongTac[i];
						JSON_Settings jSON_Settings = new JSON_Settings(InteractSQL.GetCauHinhFromHanhDong(text), isJsonString: true);
						List<string> list = new List<string>();
						list = ((!(field == "txtUid")) ? jSON_Settings.GetValueList(field, jSON_Settings.GetValueInt("typeNganCach")) : jSON_Settings.GetValueList(field));
						dictionary.Add(text, list);
					}
				}
			}
			catch
			{
			}
			return dictionary;
		}

		private void SaveDictionaryIntoHanhDong(Dictionary<string, List<string>> dic, string field = "txtUid")
		{
			//Discarded unreachable code: IL_009e, IL_00b2
			if (dic.Count <= 0)
			{
				return;
			}
			foreach (KeyValuePair<string, List<string>> item in dic)
			{
				string key = item.Key;
				List<string> value = item.Value;
				JSON_Settings jSON_Settings = new JSON_Settings(InteractSQL.GetCauHinhFromHanhDong(key), isJsonString: true);
				jSON_Settings.Update(field, value);
				InteractSQL.UpdateHanhDong(key, "", jSON_Settings.GetFullString());
			}
		}

		private void SaveDictionaryIntoHanhDong(Dictionary<string, List<string>> dic, bool isCheckDeleteComment, string field = "txtUid")
		{
			//Discarded unreachable code: IL_00df, IL_00f3
			if (dic.Count <= 0)
			{
				return;
			}
			foreach (KeyValuePair<string, List<string>> item in dic)
			{
				string key = item.Key;
				List<string> value = item.Value;
				JSON_Settings jSON_Settings = new JSON_Settings(InteractSQL.GetCauHinhFromHanhDong(key), isJsonString: true);
				if (isCheckDeleteComment && jSON_Settings.GetValueBool("ckbAutoDeleteComment"))
				{
					jSON_Settings.Update(field, value);
					InteractSQL.UpdateHanhDong(key, "", jSON_Settings.GetFullString());
				}
			}
		}

		private bool ComparePortXproxy(string proxy1, string proxy2)
		{
			//Discarded unreachable code: IL_0085, IL_0092
			try
			{
				string text = proxy1.Split(':')[1];
				string text2 = proxy2.Split(':')[1];
				if (text.Substring(1) == text2.Substring(1))
				{
					return true;
				}
			}
			catch
			{
			}
			return false;
		}

		private void OpenFormViewChrome()
		{
			//Discarded unreachable code: IL_006d, IL_008a
			bool flag = false;
			FormCollection openForms = Application.OpenForms;
			foreach (Form item in openForms)
			{
				if (item.Name == "fInterfaceChrome")
				{
					flag = true;
					break;
				}
			}
			if (!flag)
			{
				new fViewChrome().Show();
			}
		}

		private void CloseFormViewChrome()
		{
			//Discarded unreachable code: IL_0087, IL_00a4
			FormCollection openForms = Application.OpenForms;
			foreach (Form frm in openForms)
			{
				if (frm.Name == "fInterfaceChrome")
				{
					frm.Invoke((MethodInvoker)delegate
					{
						frm.Close();
					});
					break;
				}
			}
		}

		private void BtnInteract_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_0d68, IL_0d75, IL_0e92, IL_0eef
			try
			{
				if (CountChooseRowInDatagridview() == 0)
				{
					MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng chọn tài khoản muốn chạy!"), 3);
					return;
				}
				string profilePath = ConfigHelper.GetPathProfile();
				if (!Directory.Exists(profilePath))
				{
					MessageBoxHelper.ShowMessageBox(Language.GetValue("Đường dẫn profile không hợp lệ!"), 3);
					return;
				}
				if (Base.useragentDefault == "")
				{
					Base.useragentDefault = CommonChrome.GetUserAgentDefault();
					if (Base.useragentDefault == "")
					{
						MessageBoxHelper.ShowMessageBox(Language.GetValue("Phiên bản Chromedriver hiện tại không khả dụng, vui lòng cập nhật!"), 3);
						return;
					}
				}
				LoadSetting();
				int maxThread = setting_general.GetValueInt("nudInteractThread", 3);
				switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
				{
					case 7:
						{
							listApiTinsoft = GetListKeyTinsoft();
							if (listApiTinsoft.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy Tinsoft không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listTinsoft = new List<TinsoftProxy>();
							for (int m = 0; m < listApiTinsoft.Count; m++)
							{
								TinsoftProxy item5 = new TinsoftProxy(listApiTinsoft[m], setting_general.GetValueInt("nudLuongPerIPTinsoft"), setting_general.GetValueInt("cbbLocationTinsoft"));
								listTinsoft.Add(item5);
							}
							if (listApiTinsoft.Count * setting_general.GetValueInt("nudLuongPerIPTinsoft") < maxThread)
							{
								maxThread = listApiTinsoft.Count * setting_general.GetValueInt("nudLuongPerIPTinsoft");
							}
							break;
						}
					case 8:
						{
							listProxyXproxy = setting_general.GetValueList("txtListProxy");
							if (listProxyXproxy.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy không đủ, vui lòng cấu hình lại!"), 2);
								return;
							}
							listxProxy = new List<XproxyProxy>();
							for (int n = 0; n < listProxyXproxy.Count; n++)
							{
								if (0 == 0)
								{
									XproxyProxy item6 = new XproxyProxy(setting_general.GetValue("txtServiceURLXProxy"), listProxyXproxy[n], setting_general.GetValueInt("typeProxy"), setting_general.GetValueInt("nudLuongPerIPXProxy"));
									listxProxy.Add(item6);
								}
							}
							if (listProxyXproxy.Count * setting_general.GetValueInt("nudLuongPerIPXProxy") < maxThread)
							{
								maxThread = listProxyXproxy.Count * setting_general.GetValueInt("nudLuongPerIPXProxy");
							}
							break;
						}
					case 10:
						{
							listProxyTMProxy = setting_general.GetValueList("txtApiKeyTMProxy");
							if (listProxyTMProxy.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("TMProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listTMProxy = new List<TMProxy>();
							for (int k = 0; k < listProxyTMProxy.Count; k++)
							{
								TMProxy item3 = new TMProxy(listProxyTMProxy[k], 0, setting_general.GetValueInt("nudLuongPerIPTMProxy"));
								listTMProxy.Add(item3);
							}
							if (listProxyTMProxy.Count * setting_general.GetValueInt("nudLuongPerIPTMProxy") < maxThread)
							{
								maxThread = listProxyTMProxy.Count * setting_general.GetValueInt("nudLuongPerIPTMProxy");
							}
							break;
						}
					case 11:
						{
							listProxyProxyv6 = setting_general.GetValueList("txtListProxyv6");
							if (listProxyProxyv6.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy không đủ, vui lòng cấu hình lại!"), 2);
								return;
							}
							listProxyWeb = new List<ProxyWeb>();
							for (int l = 0; l < listProxyProxyv6.Count; l++)
							{
								if (0 == 0)
								{
									ProxyWeb item4 = new ProxyWeb(setting_general.GetValue("txtApiProxyv6"), listProxyProxyv6[l], 0, setting_general.GetValueInt("nudLuongPerIPProxyv6"));
									listProxyWeb.Add(item4);
								}
							}
							if (listProxyProxyv6.Count * setting_general.GetValueInt("nudLuongPerIPProxyv6") < maxThread)
							{
								maxThread = listProxyProxyv6.Count * setting_general.GetValueInt("nudLuongPerIPProxyv6");
							}
							break;
						}
					case 12:
						{
							listProxyShopLike = setting_general.GetValueList("txtApiShopLike");
							if (listProxyShopLike.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("TMProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listShopLike = new List<ShopLike>();
							for (int j = 0; j < listProxyShopLike.Count; j++)
							{
								ShopLike item2 = new ShopLike(listProxyShopLike[j], 0, setting_general.GetValueInt("nudLuongPerIPShopLike"));
								listShopLike.Add(item2);
							}
							if (listProxyShopLike.Count * setting_general.GetValueInt("nudLuongPerIPShopLike") < maxThread)
							{
								maxThread = listProxyShopLike.Count * setting_general.GetValueInt("nudLuongPerIPShopLike");
							}
							break;
						}
					case 13:
						{
							listProxyMinProxy = setting_general.GetValueList("txtApiKeyMinProxy");
							if (listProxyMinProxy.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("MinProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listMinProxy = new List<MinProxy>();
							for (int i = 0; i < listProxyMinProxy.Count; i++)
							{
								MinProxy item = new MinProxy(listProxyMinProxy[i], 0, setting_general.GetValueInt("nudLuongPerIPMinProxy"));
								listMinProxy.Add(item);
							}
							if (listProxyMinProxy.Count * setting_general.GetValueInt("nudLuongPerIPMinProxy") < maxThread)
							{
								maxThread = listProxyMinProxy.Count * setting_general.GetValueInt("nudLuongPerIPMinProxy");
							}
							break;
						}
				}
				try
				{
					lstIdGroup = File.ReadAllLines("reactions\\idGroup.txt").ToList();
					lstIdGroup = MCommon.Common.RemoveEmptyItems(lstIdGroup);
					lstIdFr = File.ReadAllLines("reactions\\idFriend.txt").ToList();
					lstIdFr = MCommon.Common.RemoveEmptyItems(lstIdFr);
				}
				catch
				{
				}
				List<int> lstPossition = new List<int>();
				for (int num = 0; num < maxThread; num++)
				{
					lstPossition.Add(0);
				}
				cControl("start");
				if (setting_general.GetValueBool("ckbAddChromeIntoForm"))
				{
					OpenFormViewChrome();
				}
				isCountCheckAccountWhenChayTuongTac = true;
				isStop = false;
				int curChangeIp = 0;
				bool isChangeIPSuccess = false;
				checkDelayChrome = 0;
				lstThread = new List<Thread>();
				new Thread((ThreadStart)delegate
				{
					try
					{
						List<string> list = new List<string>();
						string idKichBan = "";
						string text = "";
						int num3 = setting_InteractGeneral.GetValueInt("nudSoLuotChay", 1);
						if (num3 == 0)
						{
							num3 = 1;
						}
						int num4 = 0;
						while (num4 < num3)
						{
							list = new List<string>();
							if (setting_InteractGeneral.GetValueBool("ckbRepeatAll"))
							{
								text = ((num3 > 1) ? string.Format(Language.GetValue("Lượt {0}/{1}. "), num4 + 1, num3) : "");
								if (setting_InteractGeneral.GetValueBool("RepeatAllVIP"))
								{
									list = setting_InteractGeneral.GetValueList("lstIdKichBan");
									if (setting_InteractGeneral.GetValueBool("ckbRandomKichBan"))
									{
										list = MCommon.Common.ShuffleList(list);
										list = MCommon.Common.ShuffleList(list);
										list = MCommon.Common.ShuffleList(list);
									}
								}
								else
								{
									list.Add(setting_InteractGeneral.GetValue("cbbKichBan"));
								}
							}
							else
							{
								list.Add(setting_InteractGeneral.GetValue("cbbKichBan"));
							}
							int num5 = 0;
							while (true)
							{
								if (num5 < list.Count && !isStop)
								{
									idKichBan = list[num5];
									if (text != "")
									{
										ShowTrangThai(text + string.Format(Language.GetValue("Kịch bản") + ": {0}...", InteractSQL.GetTenKichBanById(idKichBan)));
									}
									if (setting_InteractGeneral.GetValueBool("ckbRepeatAll") && setting_InteractGeneral.GetValueBool("RepeatAllVIP") && setting_InteractGeneral.GetValueBool("ckbRandomThuTuTaiKhoan"))
									{
										dtgvAcc.Invoke((MethodInvoker)delegate
										{
											RandomThuTuTaiKhoan();
										});
									}
									if (setting_InteractGeneral.GetValueInt("typeInteract") == 1)
									{
										dicUidNhom = GetDictionaryIntoHanhDong(idKichBan, "HDThamGiaNhomUid");
										dicUidNhom2 = GetDictionaryIntoHanhDong(idKichBan, "HDThamGiaNhomUidv2");
										dicUidCaNhan = GetDictionaryIntoHanhDong(idKichBan, "HDKetBanTepUid");
										dicUidCaNhan2 = GetDictionaryIntoHanhDong(idKichBan, "HDKetBanTepUidv2");
										dicUidBaivietProfile = GetDictionaryIntoHanhDong(idKichBan, "HDBaiVietProfile");
										dicUidSpamBaiViet = GetDictionaryIntoHanhDong(idKichBan, "HDSpamBaiViet");
										dicCommentSpamBaiViet = GetDictionaryIntoHanhDong(idKichBan, "HDSpamBaiViet", "txtComment");
										dicUidTinNhanProfile = GetDictionaryIntoHanhDong(idKichBan, "HDBuffTinNhanProfile");
										dicKetBanUidNew = GetDictionaryIntoHanhDong(idKichBan, "HDKetBanTepUidNew", "txtLink");
										dicBuffLikeComment_Comment = GetDictionaryIntoHanhDong(idKichBan, "HDBuffLikeComment", "txtComment");
										dicBuffLikeComment_CommentGoc = GetDictionaryIntoHanhDong(idKichBan, "HDBuffLikeComment", "txtComment");
										dicDangStatus_NoiDung = GetDictionaryIntoHanhDong(idKichBan, "HDDangStatus", "txtNoiDung");
										dicDangStatus_NoiDungGoc = GetDictionaryIntoHanhDong(idKichBan, "HDDangStatus", "txtNoiDung");
										dicDangStatusV2_NoiDung = GetDictionaryIntoHanhDong(idKichBan, "HDDangStatusV2", "txtNoiDung");
										dicDangStatusV2_NoiDungGoc = GetDictionaryIntoHanhDong(idKichBan, "HDDangStatusV2", "txtNoiDung");
										dicDangBai_NoiDung = GetDictionaryIntoHanhDong(idKichBan, "HDDangBai", "txtNoiDung");
										dicDangBai_NoiDungGoc = GetDictionaryIntoHanhDong(idKichBan, "HDDangBai", "txtNoiDung");
										dicUidPhanHoiComment = GetDictionaryIntoHanhDong(idKichBan, "HDPhanHoiBinhLuan");
										dicIdBaiViet = GetDictionaryIntoHanhDong(idKichBan, "HDTuongTacBaiVietTheoID", "txtIdPost");
										dicIdBaiVietClone = GetDictionaryIntoHanhDong(idKichBan, "HDDangBaiTheoID", "txtIdPost");
									}
									int num6 = 0;
									while (num6 < dtgvAcc.Rows.Count && !isStop)
									{
										if (!Convert.ToBoolean(dtgvAcc.Rows[num6].Cells["cChose"].Value))
										{
											num6++;
											goto IL_0c65;
										}
										if (isStop)
										{
											break;
										}
										if (lstThread.Count < maxThread)
										{
											if (isStop)
											{
												break;
											}
											int row = num6++;
											Thread thread = new Thread((ThreadStart)delegate
											{
												try
												{
													int indexOfPossitionApp = MCommon.Common.GetIndexOfPossitionApp(ref lstPossition);
													ExcuteOneThread(row, indexOfPossitionApp, idKichBan, profilePath);
													MCommon.Common.FillIndexPossition(ref lstPossition, indexOfPossitionApp);
													if (!setting_InteractGeneral.GetValueBool("ckbRepeatAll"))
													{
														SetCellAccount(row, "cChose", false);
													}
												}
												catch (Exception ex3)
												{
													MCommon.Common.ExportError(null, ex3);
												}
											})
											{
												Name = row.ToString()
											};
											lstThread.Add(thread);
											MCommon.Common.DelayTime(1.0);
											thread.Start();
											goto IL_0c65;
										}
										if (isStop)
										{
											break;
										}
										if ((setting_general.GetValueInt("ip_iTypeChangeIp") == 7 && setting_general.GetValueBool("ckbWaitDoneAllTinsoft")) || (setting_general.GetValueInt("ip_iTypeChangeIp") == 8 && setting_general.GetValueBool("ckbWaitDoneAllXproxy")) || (setting_general.GetValueInt("ip_iTypeChangeIp") == 10 && setting_general.GetValueBool("ckbWaitDoneAllTMProxy")))
										{
											for (int num7 = 0; num7 < lstThread.Count; num7++)
											{
												lstThread[num7].Join();
												lstThread.RemoveAt(num7--);
											}
											goto IL_0c65;
										}
										if (setting_general.GetValueInt("ip_iTypeChangeIp") == 0 || setting_general.GetValueInt("ip_iTypeChangeIp") == 7 || setting_general.GetValueInt("ip_iTypeChangeIp") == 8 || setting_general.GetValueInt("ip_iTypeChangeIp") == 9 || setting_general.GetValueInt("ip_iTypeChangeIp") == 10 || setting_general.GetValueInt("ip_iTypeChangeIp") == 11 || setting_general.GetValueInt("ip_iTypeChangeIp") == 12 || setting_general.GetValueInt("ip_iTypeChangeIp") == 13)
										{
											for (int num8 = 0; num8 < lstThread.Count; num8++)
											{
												if (!lstThread[num8].IsAlive)
												{
													lstThread.RemoveAt(num8--);
												}
											}
											goto IL_0c65;
										}
										for (int num9 = 0; num9 < lstThread.Count; num9++)
										{
											lstThread[num9].Join();
											lstThread.RemoveAt(num9--);
										}
										if (isStop)
										{
											break;
										}
										Interlocked.Increment(ref curChangeIp);
										if (curChangeIp < setting_general.GetValueInt("ip_nudChangeIpCount", 1))
										{
											goto IL_0c65;
										}
										for (int num10 = 0; num10 < 3; num10++)
										{
											isChangeIPSuccess = MCommon.Common.ChangeIP(setting_general.GetValueInt("ip_iTypeChangeIp"), setting_general.GetValueInt("typeDcom"), setting_general.GetValue("ip_txtProfileNameDcom"), setting_general.GetValue("txtUrlHilink"), setting_general.GetValueInt("ip_cbbHostpot"), setting_general.GetValue("ip_txtNordVPN"));
											if (isChangeIPSuccess)
											{
												break;
											}
										}
										if (isChangeIPSuccess)
										{
											curChangeIp = 0;
											goto IL_0c65;
										}
										MessageBoxHelper.ShowMessageBox(Language.GetValue("Không thê\u0309 đô\u0309i ip!"), 2);
										goto end_IL_0001;
									IL_0c65:
										if (isStop)
										{
											break;
										}
									}
									for (int num11 = 0; num11 < lstThread.Count; num11++)
									{
										lstThread[num11].Join();
									}
									if (setting_InteractGeneral.GetValueInt("typeInteract") == 1)
									{
										SaveDictionaryIntoHanhDong(dicUidNhom);
										SaveDictionaryIntoHanhDong(dicUidNhom2);
										SaveDictionaryIntoHanhDong(dicUidCaNhan);
										SaveDictionaryIntoHanhDong(dicUidCaNhan2);
										SaveDictionaryIntoHanhDong(dicUidBaivietProfile);
										SaveDictionaryIntoHanhDong(dicUidSpamBaiViet);
										SaveDictionaryIntoHanhDong(dicBuffLikeComment_Comment, isCheckDeleteComment: true, "txtComment");
										SaveDictionaryIntoHanhDong(dicCommentSpamBaiViet, "txtComment");
										SaveDictionaryIntoHanhDong(dicUidTinNhanProfile);
										SaveDictionaryIntoHanhDong(dicKetBanUidNew, "txtLink");
										SaveDictionaryIntoHanhDong(dicUidPhanHoiComment);
										SaveDictionaryIntoHanhDong(dicIdBaiViet, "txtIdPost");
										SaveDictionaryIntoHanhDong(dicIdBaiVietClone, "txtIdPost");
									}
									if (!isStop)
									{
										if (num5 + 1 < list.Count)
										{
											int num12 = Base.rd.Next(setting_InteractGeneral.GetValueInt("nudDelayKichBanFrom"), setting_InteractGeneral.GetValueInt("nudDelayKichBanTo") + 1);
											int tickCount = Environment.TickCount;
											while ((Environment.TickCount - tickCount) / 1000 - num12 < 0)
											{
												ShowTrangThai(text + string.Format(Language.GetValue("Chạy kịch bản tiếp theo sau {time} giây...").Replace("{time}", (num12 - (Environment.TickCount - tickCount) / 1000).ToString())));
												MCommon.Common.DelayTime(0.5);
												if (isStop)
												{
													break;
												}
											}
										}
										num5++;
										continue;
									}
								}
								if (!setting_InteractGeneral.GetValueBool("ckbRepeatAll") || isStop)
								{
									break;
								}
								if (num4 + 1 < num3)
								{
									int num13 = Base.rd.Next(setting_InteractGeneral.GetValueInt("nudDelayTurnFrom"), setting_InteractGeneral.GetValueInt("nudDelayTurnTo") + 1) * 60;
									int tickCount2 = Environment.TickCount;
									while ((Environment.TickCount - tickCount2) / 1000 - num13 < 0)
									{
										ShowTrangThai(text + string.Format(Language.GetValue("Chạy lượt tiếp theo sau {time} giây...").Replace("{time}", (num13 - (Environment.TickCount - tickCount2) / 1000).ToString())));
										MCommon.Common.DelayTime(0.5);
										if (isStop)
										{
											break;
										}
									}
								}
								if (isStop)
								{
									break;
								}
								num4++;
								goto IL_118c;
							}
							break;
						IL_118c:;
						}
					end_IL_0001:;
					}
					catch (Exception ex2)
					{
						MCommon.Common.ExportError(null, ex2);
					}
					HideTrangThai();
					CloseFormViewChrome();
					cControl("stop");
					try
					{
						File.WriteAllLines("reactions\\idGroup.txt", lstIdGroup);
						File.WriteAllLines("reactions\\idFriend.txt", lstIdFr);
					}
					catch
					{
					}
					isCountCheckAccountWhenChayTuongTac = false;
				}).Start();
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(null, ex);
				cControl("stop");
				isCountCheckAccountWhenChayTuongTac = false;
			}
			int x = ((File.Exists("settings\\language.txt") && File.ReadAllText("settings\\language.txt").StartsWith("1")) ? 1 : 0);

		}

		private bool ReviewTag(Chrome chrome)
		{
			//Discarded unreachable code: IL_0179, IL_018c
			bool result = true;
			try
			{
				CommonChrome.GoToSetting_TimelineAndTagging(chrome);
				string cssSelector = chrome.GetCssSelector("a", "href", "/privacy/touch/tags/review/");
				if (cssSelector != "" && chrome.Click(4, cssSelector) == 1)
				{
					chrome.DelayThaoTacNho();
					if (!Convert.ToBoolean(chrome.ExecuteScript("return document.querySelector('input[type=\"checkbox\"]').checked+''").ToString()))
					{
						chrome.Click(4, "form div[role=\"button\"]");
					}
					return true;
				}
			}
			catch
			{
				result = false;
			}
			return result;
		}

		private int HDTimKiemGoogle(int indexRow, string statusProxy, Chrome chrome, List<string> lstTuKhoa, int countTurnFrom, int countTurnTo, int countPageFrom, int countPageTo, int countLinkClickFrom, int countLinkClickTo, int countTimeScrollFrom, int countTimeScrollTo, string tenHanhDong)
		{
			//Discarded unreachable code: IL_0aba, IL_0af1
			int result = 0;
			try
			{
				int num = Base.rd.Next(countTurnFrom, countTurnTo + 1);
				for (int i = 0; i < num; i++)
				{
					SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({i}/{num})...");
					if (lstTuKhoa.Count == 0)
					{
						break;
					}
					string text = lstTuKhoa[Base.rd.Next(0, lstTuKhoa.Count)];
					lstTuKhoa.Remove(text);
					string content = text.Split('|')[0];
					string text2 = text.Split('|')[1];
					if (chrome.CheckChromeClosed())
					{
						return -2;
					}
					chrome.GotoURL("https://www.google.com.vn/");
					chrome.DelayRandom(2, 3);
					if (chrome.CheckExistElement("input[role =\"combobox\"]", 3.0) != 1)
					{
						continue;
					}
					chrome.DelayRandom(1, 2);
					if (chrome.ScrollSmoothIfNotExistOnScreen("document.querySelector('input[role =\"combobox\"]')") == 1)
					{
						chrome.DelayRandom(1, 2);
					}
					switch (setting_general.GetValueInt("tocDoGoVanBan"))
					{
						case 0:
							chrome.SendKeys(rd, 4, "input[role=\"combobox\"]", content, 0.08);
							break;
						case 1:
							chrome.SendKeys(4, "input[role=\"combobox\"]", content, 0.08);
							break;
						case 2:
							chrome.SendKeys(4, "input[role=\"combobox\"]", content);
							break;
					}
					chrome.DelayRandom(2, 3);
					chrome.SendEnter(4, "input[role=\"combobox\"]");
					chrome.DelayRandom(2, 3);
					string cssSelector = chrome.GetCssSelector("a", "href", text2);
					if (cssSelector == "")
					{
						int num2 = Base.rd.Next(countPageFrom, countPageTo + 1);
						for (int j = 0; j < num2 - 1 && chrome.CheckExistElement("[aria-label=\"Page " + (j + 2) + "\"]") == 1; j++)
						{
							chrome.ScrollSmooth("document.querySelector('[aria-label=\"Page " + (j + 2) + "\"]')");
							chrome.DelayRandom(2, 3);
							chrome.Click(4, "[aria-label=\"Page " + (j + 2) + "\"]");
							chrome.DelayRandom(2, 3);
							cssSelector = chrome.GetCssSelector("a", "href", text2);
							if (cssSelector != "")
							{
								break;
							}
						}
					}
					if (cssSelector != "")
					{
						for (int k = 0; k < 10; k++)
						{
							if (Base.rd.Next(0, 100) % 5 == 1)
							{
								chrome.ScrollSmooth(-Base.rd.Next(100, 300));
							}
							else
							{
								chrome.ScrollSmooth(Base.rd.Next(100, 300));
							}
							chrome.DelayRandom(1, 2);
						}
						if (chrome.CheckExistElementOnScreen("document.querySelector('" + cssSelector + "')") != 0)
						{
							chrome.ScrollSmooth("document.querySelector('" + cssSelector + "')");
						}
						chrome.DelayRandom(2, 3);
						chrome.Click(4, cssSelector);
					}
					else
					{
						chrome.GotoURL(text2);
					}
					int num3 = Base.rd.Next(countLinkClickFrom, countLinkClickTo + 1);
					int num4 = Convert.ToInt32(chrome.ExecuteScript("var count=0; document.querySelectorAll('a').forEach(e=>{if(e.getAttribute('href')!=null && e.getAttribute('href')!='') count++}); return count+''").ToString());
					for (int l = 0; l < num3; l++)
					{
						if (num4 == 0)
						{
							break;
						}
						int index = Base.rd.Next(1, num4 + 1);
						chrome.ScrollSmoothIfNotExistOnScreen("document.querySelectorAll('a')[" + index + "]");
						chrome.DelayRandom(2, 3);
						chrome.Click(4, "a", index);
						chrome.DelayTime(3.0);
						int num5 = rd.Next(1, 3);
						for (int m = 0; m < num5; m++)
						{
							chrome.ScrollSmooth(rd.Next(100, 300));
							chrome.DelayRandom(2, 3);
						}
						if (chrome.GetURL() != text2)
						{
							chrome.GotoBackPage();
							chrome.DelayRandom(2, 3);
						}
					}
					int num6 = Base.rd.Next(countTimeScrollFrom, countTimeScrollTo + 1);
					int tickCount = Environment.TickCount;
					int num7 = 1;
					do
					{
						num7 = ((Base.rd.Next(1, 1000) % 5 != 0) ? 1 : (-1));
						chrome.ScrollSmooth(num7 * Base.rd.Next(100, 300));
						chrome.DelayRandom(2, 3);
					}
					while (Environment.TickCount - tickCount < num6 * 1000);
				}
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(chrome, ex, "HDSearchGoogle");
				result = -1;
			}
			return result;
		}

		private int HDTruyCapWebsite(int indexRow, string statusProxy, Chrome chrome, List<string> lstLinkWeb, int countTurnFrom, int countTurnTo, int countLinkClickFrom, int countLinkClickTo, int countTimeScrollFrom, int countTimeScrollTo, bool ckbLuot, string tenHanhDong)
		{
			//Discarded unreachable code: IL_0430, IL_0467
			int result = 0;
			try
			{
				int num = Base.rd.Next(countTurnFrom, countTurnTo + 1);
				for (int i = 0; i < num; i++)
				{
					SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({i}/{num})...");
					if (lstLinkWeb.Count == 0)
					{
						break;
					}
					string text = lstLinkWeb[Base.rd.Next(0, lstLinkWeb.Count)];
					lstLinkWeb.Remove(text);
					if (chrome.CheckChromeClosed())
					{
						return -2;
					}
					chrome.GotoURL(text);
					int num2 = Base.rd.Next(countLinkClickFrom, countLinkClickTo + 1);
					int num3 = Convert.ToInt32(chrome.ExecuteScript("var count=0; document.querySelectorAll('a').forEach(e=>{if(e.getAttribute('href')!=null && e.getAttribute('href')!='') count++}); return count+''").ToString());
					for (int j = 0; j < num2; j++)
					{
						if (num3 == 0)
						{
							break;
						}
						int index = Base.rd.Next(1, num3 + 1);
						chrome.ScrollSmoothIfNotExistOnScreen("document.querySelectorAll('a')[" + index + "]");
						chrome.DelayRandom(2, 3);
						chrome.Click(4, "a", index);
						chrome.DelayTime(3.0);
						int num4 = rd.Next(1, 3);
						for (int k = 0; k < num4; k++)
						{
							chrome.ScrollSmooth(rd.Next(100, 300));
							chrome.DelayRandom(2, 3);
						}
						if (chrome.GetURL() != text)
						{
							chrome.GotoBackPage();
							chrome.DelayRandom(2, 3);
						}
					}
					int num5 = Base.rd.Next(countTimeScrollFrom, countTimeScrollTo + 1);
					if (ckbLuot)
					{
						int tickCount = Environment.TickCount;
						int num6 = 1;
						do
						{
							num6 = ((Base.rd.Next(1, 1000) % 6 != 0) ? 1 : (-1));
							chrome.ScrollSmooth(num6 * Base.rd.Next(100, 300));
							chrome.DelayRandom(2, 3);
						}
						while (Environment.TickCount - tickCount < num5 * 1000);
					}
					else
					{
						chrome.DelayTime(num5);
					}
				}
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(chrome, ex, "HDSearchGoogle");
				result = -1;
			}
			return result;
		}

		private void ExcuteOneThread(int indexRow, int indexPos, string idKichBan, string profilePath)
		{
			//Discarded unreachable code: IL_04a4, IL_04b8, IL_07d8, IL_07ed, IL_08ed, IL_0901, IL_0cda, IL_0cef, IL_0ea2, IL_0eb6, IL_11d6, IL_11eb, IL_12d5, IL_12e9, IL_169e, IL_16b3, IL_179d, IL_17b1, IL_1ad1, IL_1ae6, IL_1bd0, IL_1be4, IL_1f04, IL_1f19, IL_2543, IL_2558, IL_6f42, IL_6f75, IL_7041, IL_7074, IL_71e4, IL_7217, IL_7387, IL_73ba, IL_73ed, IL_7420, IL_7453, IL_7486, IL_7733, IL_7766, IL_79a4, IL_79d7, IL_7b19, IL_7b4c, IL_7c18, IL_7c4b, IL_7d61, IL_7d94, IL_7e85, IL_7eb8, IL_80b7, IL_80ea, IL_82e9, IL_831c, IL_8571, IL_85a4, IL_87f4, IL_8827, IL_8ac1, IL_8af4, IL_8df6, IL_8e29, IL_8f1a, IL_8f4d, IL_903e, IL_9071, IL_91ac, IL_91df, IL_931a, IL_934d, IL_9463, IL_9496, IL_95ac, IL_95df, IL_9816, IL_9849, IL_9a80, IL_9ab3, IL_9b7f, IL_9bb2, IL_9ca3, IL_9cd6, IL_9da2, IL_9dd5, IL_9ecb, IL_9efe, IL_9fca, IL_9ffd, IL_a0c9, IL_a0fc, IL_a23e, IL_a271, IL_a3b3, IL_a3e6, IL_a4f1, IL_a524, IL_a62f, IL_a662, IL_a7bb, IL_a7ee, IL_a947, IL_a97a, IL_aab5, IL_aae8, IL_ac23, IL_ac56, IL_ae4f, IL_ae82, IL_af88, IL_afbb, IL_b0d6, IL_b109, IL_b32d, IL_b360, IL_b584, IL_b5b7, IL_b894, IL_b8c7, IL_bbee, IL_bc21, IL_bd7d, IL_bdb0, IL_c117, IL_c14a, IL_c1f1, IL_c224, IL_c3a4, IL_c3d7, IL_c47e, IL_c4b1, IL_c5a2, IL_c5d5, IL_c8f4, IL_c927, IL_cb72, IL_cba5, IL_ce88, IL_cebb, IL_d1fd, IL_d230, IL_d538, IL_d56b, IL_d5e2, IL_d615, IL_d78f, IL_d7c2, IL_d917, IL_d94a, IL_d9c0, IL_d9f3, IL_da2c, IL_da5f, IL_da98, IL_dacb, IL_dafe, IL_db31, IL_db6a, IL_db9d, IL_dbd0, IL_dc03, IL_dc36, IL_dc69, IL_dc9c, IL_dccf, IL_dd02, IL_dd35, IL_dd68, IL_dd9b, IL_ddb0, IL_dde3, IL_e170, IL_e194, IL_e5e6, IL_e659, IL_eab1, IL_eabe, IL_ead2, IL_eadf, IL_eaeb, IL_eaf8, IL_f03c, IL_f059
			int num = 0;
			string text = "";
			Chrome chrome = null;
			int num2 = 0;
			string text2 = "";
			int typeProxy = 0;
			string text3 = "";
			TinsoftProxy tinsoftProxy = null;
			XproxyProxy xproxyProxy = null;
			TMProxy tMProxy = null;
			ProxyWeb proxyWeb = null;
			ShopLike shopLike = null;
			MinProxy minProxy = null;
			bool flag = false;
			string text4 = "";
			int checkPostSuccess = 0;
			int num3 = 0;
			bool flag2 = false;
			string text5 = GetCellAccount(indexRow, "cUid");
			string cellAccount = GetCellAccount(indexRow, "cId");
			string cellAccount2 = GetCellAccount(indexRow, "cEmail");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			string cellAccount4 = GetCellAccount(indexRow, "cPassword");
			string text6 = GetCellAccount(indexRow, "cCookies");
			string cellAccount5 = GetCellAccount(indexRow, "cToken");
			string text7 = GetCellAccount(indexRow, "cUseragent");
			if (text5 == "")
			{
				text5 = Regex.Match(text6, "c_user=(.*?);").Groups[1].Value;
			}
			if (setting_InteractGeneral.GetValueBool("ckbCheckLiveUid", valueDefault: true) && CheckIsUidFacebook(text5) && CommonRequest.CheckLiveWall(text5).StartsWith("0|"))
			{
				SetStatusAccount(indexRow, Language.GetValue("Tài khoản Die!"));
				SetInfoAccount(cellAccount, indexRow, "Die");
				num3 = 1;
			}
			else if (isStop)
			{
				SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
				num3 = 1;
			}
			else
			{
				while (true)
				{
					switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
					{
						case 7:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy proxy Tinsoft..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									tinsoftProxy = null;
									while (!isStop)
									{
										foreach (TinsoftProxy item in listTinsoft)
										{
											if (tinsoftProxy == null || item.daSuDung < tinsoftProxy.daSuDung)
											{
												tinsoftProxy = item;
											}
										}
										if (tinsoftProxy.daSuDung != tinsoftProxy.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (tinsoftProxy.daSuDung > 0 || tinsoftProxy.ChangeProxy())
									{
										text = tinsoftProxy.proxy;
										if (text == "")
										{
											text = tinsoftProxy.GetProxy();
										}
										TinsoftProxy tinsoftProxy2 = tinsoftProxy;
										tinsoftProxy2.dangSuDung++;
										tinsoftProxy2 = tinsoftProxy;
										tinsoftProxy2.daSuDung++;
										break;
									}
									bool flag15 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									num3 = 1;
									break;
								}
								bool flag16 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									text3 = MCommon.Common.CheckProxy(text, 0);
									if (text3 == "")
									{
										flag16 = false;
									}
								}
								if (!flag16)
								{
									TinsoftProxy tinsoftProxy2 = tinsoftProxy;
									tinsoftProxy2.dangSuDung--;
									tinsoftProxy2 = tinsoftProxy;
									tinsoftProxy2.daSuDung--;
									continue;
								}
								goto default;
							}
						case 8:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy Proxy..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									xproxyProxy = null;
									while (!isStop)
									{
										foreach (XproxyProxy item2 in listxProxy)
										{
											if (xproxyProxy == null || (item2.isProxyLive && item2.daSuDung < xproxyProxy.daSuDung))
											{
												xproxyProxy = item2;
											}
										}
										if (xproxyProxy.daSuDung != xproxyProxy.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (xproxyProxy.isProxyLive && (xproxyProxy.daSuDung > 0 || xproxyProxy.ChangeProxy()))
									{
										text = xproxyProxy.proxy;
										typeProxy = xproxyProxy.typeProxy;
										XproxyProxy xproxyProxy2 = xproxyProxy;
										xproxyProxy2.dangSuDung++;
										xproxyProxy2 = xproxyProxy;
										xproxyProxy2.daSuDung++;
										break;
									}
									xproxyProxy.isProxyLive = false;
									bool flag11 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									num3 = 1;
									break;
								}
								bool flag12 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									int num5 = 0;
									while (true)
									{
										if (num5 >= 30)
										{
											goto IL_0c57;
										}
										MCommon.Common.DelayTime(1.0);
										text3 = MCommon.Common.CheckProxy(text, typeProxy);
										if (text3 != "")
										{
											goto IL_0c57;
										}
										if (isStop)
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
											num3 = 1;
											goto end_IL_039a;
										}
										num5++;
										continue;
									IL_0c57:
										if (text3 == "")
										{
											flag12 = false;
										}
										break;
									}
								}
								if (!flag12)
								{
									XproxyProxy xproxyProxy2 = xproxyProxy;
									xproxyProxy2.dangSuDung--;
									xproxyProxy2 = xproxyProxy;
									xproxyProxy2.daSuDung--;
									continue;
								}
								goto default;
							}
						case 9:
							text = GetCellAccount(indexRow, "cProxy");
							typeProxy = (text.EndsWith("*1") ? 1 : 0);
							if (text.EndsWith("*0") || text.EndsWith("*1"))
							{
								text = text.Substring(0, text.Length - 2);
							}
							goto default;
						case 10:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy TMProxy..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									tMProxy = null;
									while (!isStop)
									{
										foreach (TMProxy item3 in listTMProxy)
										{
											if (tMProxy == null || item3.daSuDung < tMProxy.daSuDung)
											{
												tMProxy = item3;
											}
										}
										if (tMProxy.daSuDung != tMProxy.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (tMProxy.daSuDung > 0 || tMProxy.ChangeProxy())
									{
										text = tMProxy.proxy;
										if (text == "")
										{
											text = tMProxy.GetProxy();
										}
										TMProxy tMProxy2 = tMProxy;
										tMProxy2.dangSuDung++;
										tMProxy2 = tMProxy;
										tMProxy2.daSuDung++;
										break;
									}
									bool flag9 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									num3 = 1;
									break;
								}
								bool flag10 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									text3 = MCommon.Common.CheckProxy(text, 0);
									if (text3 == "")
									{
										flag10 = false;
									}
								}
								if (!flag10)
								{
									TMProxy tMProxy2 = tMProxy;
									tMProxy2.dangSuDung--;
									tMProxy2 = tMProxy;
									tMProxy2.daSuDung--;
									continue;
								}
								goto default;
							}
						case 11:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy Proxyv6..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									proxyWeb = null;
									while (!isStop)
									{
										foreach (ProxyWeb item4 in listProxyWeb)
										{
											if (proxyWeb == null || item4.daSuDung < proxyWeb.daSuDung)
											{
												proxyWeb = item4;
											}
										}
										if (proxyWeb.daSuDung != proxyWeb.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (proxyWeb.daSuDung > 0 || proxyWeb.ChangeProxy())
									{
										text = proxyWeb.proxy;
										typeProxy = proxyWeb.typeProxy;
										ProxyWeb proxyWeb2 = proxyWeb;
										proxyWeb2.dangSuDung++;
										proxyWeb2 = proxyWeb;
										proxyWeb2.daSuDung++;
										break;
									}
									bool flag7 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									num3 = 1;
									break;
								}
								bool flag8 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									int num4 = 0;
									while (true)
									{
										if (num4 >= 30)
										{
											goto IL_161b;
										}
										MCommon.Common.DelayTime(1.0);
										text3 = MCommon.Common.CheckProxy(text, typeProxy);
										if (text3 != "")
										{
											goto IL_161b;
										}
										if (isStop)
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
											num3 = 1;
											goto end_IL_039a;
										}
										num4++;
										continue;
									IL_161b:
										if (text3 == "")
										{
											flag8 = false;
										}
										break;
									}
								}
								if (!flag8)
								{
									ProxyWeb proxyWeb2 = proxyWeb;
									proxyWeb2.dangSuDung--;
									proxyWeb2 = proxyWeb;
									proxyWeb2.daSuDung--;
									continue;
								}
								goto default;
							}
						case 12:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy Proxy ShopLike ..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									shopLike = null;
									while (!isStop)
									{
										foreach (ShopLike item5 in listShopLike)
										{
											if (shopLike == null || item5.daSuDung < shopLike.daSuDung)
											{
												shopLike = item5;
											}
										}
										if (shopLike.daSuDung != shopLike.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (shopLike.daSuDung > 0 || shopLike.ChangeProxy())
									{
										text = shopLike.proxy;
										if (text == "")
										{
											text = shopLike.GetProxy();
										}
										ShopLike shopLike2 = shopLike;
										shopLike2.dangSuDung++;
										shopLike2 = shopLike;
										shopLike2.daSuDung++;
										break;
									}
									bool flag5 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									num3 = 1;
									break;
								}
								bool flag6 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									text3 = MCommon.Common.CheckProxy(text, 0);
									if (text3 == "")
									{
										flag6 = false;
									}
								}
								if (!flag6)
								{
									ShopLike shopLike2 = shopLike;
									shopLike2.dangSuDung--;
									shopLike2 = shopLike;
									shopLike2.daSuDung--;
									continue;
								}
								goto default;
							}
						case 13:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy MinProxy..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									minProxy = null;
									while (!isStop)
									{
										foreach (MinProxy item6 in listMinProxy)
										{
											if (minProxy == null || item6.daSuDung < minProxy.daSuDung)
											{
												minProxy = item6;
											}
										}
										if (minProxy.daSuDung != minProxy.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (minProxy.daSuDung > 0 || minProxy.ChangeProxy())
									{
										text = minProxy.proxy;
										if (text == "")
										{
											text = minProxy.GetProxy();
										}
										MinProxy minProxy2 = minProxy;
										minProxy2.dangSuDung++;
										minProxy2 = minProxy;
										minProxy2.daSuDung++;
										break;
									}
									bool flag3 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									num3 = 1;
									break;
								}
								bool flag4 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									text3 = MCommon.Common.CheckProxy(text, 0);
									if (text3 == "")
									{
										flag4 = false;
									}
								}
								if (!flag4)
								{
									MinProxy minProxy2 = minProxy;
									minProxy2.dangSuDung--;
									minProxy2 = minProxy;
									minProxy2.daSuDung--;
									continue;
								}
								goto default;
							}
						default:
							{
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									num3 = 1;
									break;
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									if (setting_general.GetValueInt("ip_iTypeChangeIp") != 7 && setting_general.GetValueInt("ip_iTypeChangeIp") != 8 && setting_general.GetValueInt("ip_iTypeChangeIp") != 10)
									{
										if (text != "")
										{
											text2 = "(IP: " + text.Split(':')[0] + ") ";
										}
										SetStatusAccount(indexRow, text2 + "Check IP...");
										bool flag13 = false;
										int num6 = 0;
										while (num6 < 30)
										{
											MCommon.Common.DelayTime(1.0);
											text3 = MCommon.Common.CheckProxy(text, typeProxy);
											if (text3 != "")
											{
												flag13 = true;
												break;
											}
											if (!isStop)
											{
												num6++;
												continue;
											}
											goto IL_217a;
										}
										if (!flag13)
										{
											if (text != "")
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Không thể kết nối proxy!"));
											}
											else
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Không có kết nối Internet!"));
											}
											num3 = 1;
											break;
										}
									}
									text2 = "(IP: " + text3 + ") ";
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									num3 = 1;
									break;
								}
								num = Environment.TickCount;
								try
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Chờ đến lượt..."));
									lock (lock_checkDelayChrome)
									{
										if (checkDelayChrome > 0)
										{
											int num7 = rd.Next(setting_general.GetValueInt("nudDelayOpenChromeFrom", 1), setting_general.GetValueInt("nudDelayOpenChromeTo", 1) + 1);
											if (num7 > 0)
											{
												int tickCount = Environment.TickCount;
												while ((Environment.TickCount - tickCount) / 1000 - num7 < 0)
												{
													SetStatusAccount(indexRow, text2 + Language.GetValue("Mở tri\u0300nh duyê\u0323t sau") + " {time}s...".Replace("{time}", (num7 - (Environment.TickCount - tickCount) / 1000).ToString()));
													MCommon.Common.DelayTime(0.5);
													if (isStop)
													{
														SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
														num3 = 1;
														goto end_IL_039a;
													}
												}
											}
										}
										else
										{
											checkDelayChrome++;
										}
									}
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đang mơ\u0309 tri\u0300nh duyê\u0323t..."));
									string text8 = "data:,";
									Point position;
									Point size;
									if (setting_general.GetValueBool("ckbAddChromeIntoForm"))
									{
										if (text8 == "")
										{
											position = new Point(-1000, 0);
											size = new Point(setting_general.GetValueInt("nudWidthChrome") + 16, setting_general.GetValueInt("nudHeighChrome") + 132);
										}
										else
										{
											position = new Point(-1000, 0);
											size = new Point(setting_general.GetValueInt("nudWidthChrome") + 33, setting_general.GetValueInt("nudHeighChrome") + 39);
										}
									}
									else
									{
										position = MCommon.Common.GetPointFromIndexPosition(indexPos, setting_general.GetValueInt("cbbColumnChrome", 3), setting_general.GetValueInt("cbbRowChrome", 2));
										size = MCommon.Common.GetSizeChrome(setting_general.GetValueInt("cbbColumnChrome", 3), setting_general.GetValueInt("cbbRowChrome", 2));
									}
									if (text7 == "")
									{
										text7 = Base.useragentDefault;
									}
									string text9 = "";
									if (text5 != "")
									{
										text9 = profilePath + "\\" + text5;
										if (!setting_InteractGeneral.GetValueBool("ckbCreateProfile") && !Directory.Exists(text9))
										{
											text9 = "";
										}
									}
									Chrome chrome2 = new Chrome();
									chrome2.IndexChrome = indexRow;
									chrome2.DisableImage = !Convert.ToBoolean((setting_general.GetValue("ckbShowImageInteract") == "") ? "false" : setting_general.GetValue("ckbShowImageInteract"));
									chrome2.UserAgent = text7;
									chrome2.ProfilePath = text9;
									chrome2.Size = size;
									chrome2.Position = position;
									chrome2.TimeWaitForSearchingElement = 3;
									chrome2.TimeWaitForLoadingPage = 120;
									chrome2.Proxy = text;
									chrome2.TypeProxy = typeProxy;
									chrome2.DisableSound = true;
									chrome2.App = text8;
									chrome2.IsUsePortable = setting_general.GetValueBool("ckbUsePortable");
									chrome2.PathToPortableZip = setting_general.GetValue("txtPathToPortableZip");
									chrome = chrome2;
									if (setting_general.GetValue("sizeChrome").Contains("x"))
									{
										chrome.IsUseEmulator = true;
										string text10 = setting_general.GetValue("sizeChrome").Substring(0, setting_general.GetValue("sizeChrome").LastIndexOf('x'));
										int pixelRatio = Convert.ToInt32(setting_general.GetValue("sizeChrome").Split('x')[2]);
										chrome.Size_Emulator = new Point(Convert.ToInt32(text10.Split('x')[0]), Convert.ToInt32(text10.Split('x')[1]));
										if (text7 == "")
										{
											chrome.UserAgent = Base.useragentDefault;
										}
										chrome.PixelRatio = pixelRatio;
									}
									if (isStop)
									{
										SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
										num3 = 1;
										break;
									}
									if (setting_general.GetValueInt("typeBrowser") != 0)
									{
										chrome.LinkToOtherBrowser = setting_general.GetValue("txtLinkToOtherBrowser");
									}
									int num8 = 0;
									while (true)
									{
										if (!chrome.Open())
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Lỗi mở trình duyệt!"));
											num3 = 1;
											break;
										}
										chrome.ExecuteScript("document.title=\"proxyauth=" + text + "\"");
										chrome.DelayTime(2.0);
										if (!setting_general.GetValueBool("ckbKhongCheckIP") && text.Split(':').Length > 1)
										{
											chrome.GotoURL("https://api.myip.com/");
											chrome.DelayTime(1.0);
											string pageSource = chrome.GetPageSource();
											if (!pageSource.Contains("ip"))
											{
												chrome.Close();
												num8++;
												if (num8 < 3)
												{
													continue;
												}
												SetStatusAccount(indexRow, text2 + Language.GetValue("Lỗi kết nối proxy!"));
												num3 = 1;
												break;
											}
										}
										if (!chrome.GetProcess())
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Không check đươ\u0323c chrome!"));
											num3 = 1;
											break;
										}
										if (setting_general.GetValueBool("ckbAddChromeIntoForm"))
										{
											if (text8 != "")
											{
												fViewChrome.remote.AddPanelDevice(chrome.IndexChrome, chrome.Size.X - 33, chrome.Size.Y - 39);
												fViewChrome.remote.AddChromeIntoPanel(chrome.process.MainWindowHandle, chrome.IndexChrome, chrome.Size.X, chrome.Size.Y);
											}
											else
											{
												fViewChrome.remote.AddPanelDevice(chrome.IndexChrome, chrome.Size.X - 16, chrome.Size.Y - 132);
												fViewChrome.remote.AddChromeIntoPanel(chrome.process.MainWindowHandle, chrome.IndexChrome, chrome.Size.X + 17, chrome.Size.Y, -10, -125);
											}
										}
										SetStatusAccount(indexRow, text2 + Language.GetValue("Đang đăng nhâ\u0323p..."));
										bool flag14 = false;
										string text11 = "https://www.facebook.com/";
										if (setting_InteractGeneral.GetValueInt("typeBrowserLogin") == 0)
										{
											text11 = "https://m.facebook.com/";
										}
										if (text9.Trim() != "")
										{
											if (chrome.CheckExistElement("[data-cookiebanner=\"accept_button\"]") == 1)
											{
												chrome.ExecuteScript("document.querySelector('[data-cookiebanner=\"accept_button\"]').click()");
											}
											if (chrome.GetURL().StartsWith("https://m.facebook.com/si/actor_experience/actor_gateway") && chrome.CheckExistElement("[data-nt=\"NT:IMAGE\"]", 15.0) == 1)
											{
												chrome.ExecuteScript("document.querySelector('[data-nt=\"NT:IMAGE\"]').click()");
												chrome.DelayTime(2.0);
											}
											num2 = CommonChrome.CheckLiveCookie(chrome, text11);
											switch (num2)
											{
												case 1:
													flag14 = true;
													break;
												case -2:
													chrome.Status = StatusChromeAccount.ChromeClosed;
													goto end_IL_2318;
												case -3:
													chrome.Status = StatusChromeAccount.NoInternet;
													goto end_IL_2318;
												case 2:
													chrome.Status = StatusChromeAccount.Checkpoint;
													SetInfoAccount(cellAccount, indexRow, Language.GetValue("Checkpoint"));
													if (setting_InteractGeneral.GetValueBool("ckbCheckCp"))
													{
														string text12 = "";
														chrome.GotoURL("https://mbasic.facebook.com/");
														switch (chrome.CheckExistElements(5.0, "[name=\"email\"]", "#checkpoint_title"))
														{
															case 1:
																text12 = "723";
																break;
															case 2:
																text12 = "cpxp";
																break;
														}
														string uRL = chrome.GetURL();
														if (uRL.Contains("1501092823525282"))
														{
															int num9 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('.y.bb.bc').length").ToString());
															string value = Regex.Matches(chrome.ExecuteScript("return document.querySelectorAll('.y.bb.bc')[" + (num9 - 1) + "].innerText").ToString(), "\\d+")[1].Value;
															text12 = "282-" + value;
														}
														else if (uRL.Contains("828281030927956"))
														{
															text12 = ((chrome.CheckExistElement("[href=\"/help/203305893040179\"]") != 1) ? "956-Bắt đầu" : "956-Tìm hiểu thêm");
														}
														DatagridviewHelper.SetStatusDataGridView(dtgvAcc, indexRow, "cGhiChu", text12);
														CommonSQL.UpdateFieldToAccount(cellAccount, "ghiChu", text12);
													}
													num3 = 1;
													goto end_IL_2318;
											}
										}
										if (!flag14)
										{
											int valueInt = setting_InteractGeneral.GetValueInt("typeLogin");
											switch (valueInt)
											{
												case 0:
													SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng nhâ\u0323p bă\u0300ng uid|pass..."));
													break;
												case 1:
													SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng nhâ\u0323p bă\u0300ng email|pass..."));
													break;
												case 2:
													SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng nhâ\u0323p bă\u0300ng cookie..."));
													break;
											}
											string text13 = LoginFacebook(chrome, valueInt, text11, text5, cellAccount2, cellAccount4, cellAccount3, text6, setting_general.GetValueInt("tocDoGoVanBan"), setting_InteractGeneral.GetValueBool("ckbDontSaveBrowser"));
											switch (text13)
											{
												case "-3":
													chrome.Status = StatusChromeAccount.NoInternet;
													goto end_IL_2318;
												case "-2":
													chrome.Status = StatusChromeAccount.ChromeClosed;
													goto IL_3b71;
												case "0":
													SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng nhập thất bại!"));
													goto IL_3b71;
												case "1":
													flag14 = true;
													goto IL_3b71;
												case "2":
													chrome.Status = StatusChromeAccount.Checkpoint;
													SetInfoAccount(cellAccount, indexRow, Language.GetValue("Checkpoint"));
													goto IL_3b71;
												case "3":
													SetStatusAccount(indexRow, text2 + Language.GetValue("Không có 2fa!"));
													goto IL_3b71;
												case "4":
													SetStatusAccount(indexRow, text2 + Language.GetValue("Tài khoản không đúng!"));
													goto IL_3b71;
												case "5":
													SetStatusAccount(indexRow, text2 + Language.GetValue("Mật khẩu không đúng!"));
													SetInfoAccount(cellAccount, indexRow, "Changed pass");
													goto IL_3b71;
												case "6":
													SetStatusAccount(indexRow, text2 + Language.GetValue("Mã 2fa không đúng!"));
													goto IL_3b71;
												default:
													{
														SetStatusAccount(indexRow, text2 + text13);
														goto IL_3b71;
													}
												IL_3b71:
													if (flag14)
													{
														break;
													}
													SetRowColor(indexRow, 1);
													ScreenCaptureError(chrome, text5, 1);
													if (setting_InteractGeneral.GetValueBool("ckbCheckCp"))
													{
														string text14 = "";
														chrome.GotoURL("https://mbasic.facebook.com/");
														switch (chrome.CheckExistElements(5.0, "[name=\"email\"]", "#checkpoint_title"))
														{
															case 1:
																text14 = "723";
																break;
															case 2:
																text14 = "cpxp";
																break;
														}
														string uRL2 = chrome.GetURL();
														if (uRL2.Contains("1501092823525282"))
														{
															int num10 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('.y.bb.bc').length").ToString());
															string value2 = Regex.Matches(chrome.ExecuteScript("return document.querySelectorAll('.y.bb.bc')[" + (num10 - 1) + "].innerText").ToString(), "\\d+")[1].Value;
															text14 = "282-" + value2;
														}
														else if (uRL2.Contains("828281030927956"))
														{
															text14 = ((chrome.CheckExistElement("[href=\"/help/203305893040179\"]") != 1) ? "956-Bắt đầu" : "956-Tìm hiểu thêm");
														}
														DatagridviewHelper.SetStatusDataGridView(dtgvAcc, indexRow, "cGhiChu", text14);
														CommonSQL.UpdateFieldToAccount(cellAccount, "ghiChu", text14);
													}
													num3 = 1;
													goto end_IL_2318;
											}
										}
										SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng nhâ\u0323p tha\u0300nh công!"));
										SetRowColor(indexRow, 2);
										if (chrome.GetURL().StartsWith("https://m.facebook.com/si/actor_experience/actor_gateway") && chrome.CheckExistElement("[data-nt=\"NT:IMAGE\"]", 15.0) == 1)
										{
											chrome.ExecuteScript("document.querySelector('[data-nt=\"NT:IMAGE\"]').click()");
											chrome.DelayTime(2.0);
										}
										if (chrome.CheckExistElement("[data-cookiebanner=\"accept_button\"]") == 1)
										{
											chrome.ExecuteScript("document.querySelector('[data-cookiebanner=\"accept_button\"]').click()");
										}
										flag = !CheckIsUidFacebook(text5);
										if (flag)
										{
											text4 = text5;
											text5 = Regex.Match(chrome.GetCookieFromChrome() + ";", "c_user=(.*?);").Groups[1].Value;
											CommonSQL.UpdateFieldToAccount(cellAccount, "uid", text5);
											SetCellAccount(indexRow, "cUid", text5);
										}
										if (setting_InteractGeneral.GetValueBool("ckbGetCookie"))
										{
											text6 = chrome.GetCookieFromChrome();
											CommonSQL.UpdateFieldToAccount(cellAccount, "uid", text5);
											CommonSQL.UpdateFieldToAccount(cellAccount, "cookie1", text6);
											SetCellAccount(indexRow, "cCookies", text6);
										}
										SetStatusAccount(indexRow, text2 + Language.GetValue("Cha\u0323y tương ta\u0301c..."));
										if (setting_InteractGeneral.GetValueInt("typeInteract") == 0)
										{
											if (setting_Interact.GetValueBool("ckbKetBanTuKhoa"))
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Đang kết bạn theo từ khóa") + "...");
												num2 = HDKetBanTheoTuKhoa(indexRow, text2, chrome, setting_Interact.GetValue("txtKetBanTuKhoaTuKhoa").Split('|').ToList(), setting_Interact.GetValueInt("nudKetBanTuKhoaSoLuongFrom"), setting_Interact.GetValueInt("nudKetBanTuKhoaSoLuongTo"), setting_Interact.GetValueInt("nudKetBanTuKhoaDelayFrom"), setting_Interact.GetValueInt("nudKetBanTuKhoaDelayTo"), rd);
												if (num2 == -4)
												{
													flag2 = true;
													goto IL_df25;
												}
												switch (CheckFacebookLogout(chrome, text5, cellAccount4, cellAccount3, isSendRequest: true))
												{
													case -3:
														chrome.Status = StatusChromeAccount.NoInternet;
														num3 = 1;
														goto end_IL_2318;
													case -2:
														chrome.Status = StatusChromeAccount.ChromeClosed;
														num3 = 1;
														goto end_IL_2318;
													case -1:
														chrome.Status = StatusChromeAccount.Checkpoint;
														num3 = 1;
														SetInfoAccount(cellAccount, indexRow, Language.GetValue("Checkpoint"));
														goto end_IL_2318;
													case 2:
														num3 = 0;
														goto end_IL_2318;
												}
											}
											if (setting_Interact.GetValueBool("ckbKetBanGoiY"))
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Đang kết bạn gợi ý") + "...");
												num2 = HDKetBanGoiY(indexRow, text2, chrome, setting_Interact.GetValueInt("nudKetBanGoiYSoLuongFrom"), setting_Interact.GetValueInt("nudKetBanGoiYSoLuongTo"), setting_Interact.GetValueInt("nudKetBanGoiYDelayFrom"), setting_Interact.GetValueInt("nudKetBanGoiYDelayTo"), ckbChiKetBanTenCoDau: false, ckbOnlyAddFriendWithMutualFriends: false, setting_Interact.GetValueInt("nudTimesWarning", 3), rd);
												if (num2 == -4)
												{
													flag2 = true;
													goto IL_df25;
												}
												switch (CheckFacebookLogout(chrome, text5, cellAccount4, cellAccount3, isSendRequest: true))
												{
													case -3:
														chrome.Status = StatusChromeAccount.NoInternet;
														num3 = 1;
														goto end_IL_2318;
													case -2:
														chrome.Status = StatusChromeAccount.ChromeClosed;
														num3 = 1;
														goto end_IL_2318;
													case -1:
														chrome.Status = StatusChromeAccount.Checkpoint;
														num3 = 1;
														SetInfoAccount(cellAccount, indexRow, Language.GetValue("Checkpoint"));
														goto end_IL_2318;
													case 2:
														num3 = 0;
														goto end_IL_2318;
												}
											}
											if (setting_Interact.GetValueBool("ckbKetBanTepUid"))
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Đang kết bạn theo tệp uid") + "...");
												num2 = HDKetBanTepUid(indexRow, text2, chrome, ref lstIdFr, setting_Interact.GetValueInt("nudKetBanTepUidSoLuongFrom"), setting_Interact.GetValueInt("nudKetBanTepUidSoLuongTo"), setting_Interact.GetValueInt("nudKetBanTepUidDelayFrom"), setting_Interact.GetValueInt("nudKetBanTepUidDelayTo"), setting_Interact.GetValueBool("ckbKetBanTepUidTrungNhau"), rd);
												if (num2 == -4)
												{
													flag2 = true;
													goto IL_df25;
												}
												switch (CheckFacebookLogout(chrome, text5, cellAccount4, cellAccount3, isSendRequest: true))
												{
													case -3:
														chrome.Status = StatusChromeAccount.NoInternet;
														num3 = 1;
														goto end_IL_2318;
													case -2:
														chrome.Status = StatusChromeAccount.ChromeClosed;
														num3 = 1;
														goto end_IL_2318;
													case -1:
														chrome.Status = StatusChromeAccount.Checkpoint;
														num3 = 1;
														SetInfoAccount(cellAccount, indexRow, Language.GetValue("Checkpoint"));
														goto end_IL_2318;
													case 2:
														num3 = 0;
														goto end_IL_2318;
												}
											}
											if (setting_Interact.GetValueBool("ckbXacNhanKetBan"))
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Đang xác nhận kết bạn") + "...");
												num2 = HDXacNhanKetBan(indexRow, text2, chrome, setting_Interact.GetValueInt("nudXacNhanKetBanSoLuongFrom"), setting_Interact.GetValueInt("nudXacNhanKetBanSoLuongTo"), setting_Interact.GetValueInt("nudXacNhanKetBanDelayFrom"), setting_Interact.GetValueInt("nudXacNhanKetBanDelayTo"), rd);
												if (num2 == -4)
												{
													flag2 = true;
													goto IL_df25;
												}
												switch (CheckFacebookLogout(chrome, text5, cellAccount4, cellAccount3, isSendRequest: true))
												{
													case -3:
														chrome.Status = StatusChromeAccount.NoInternet;
														num3 = 1;
														goto end_IL_2318;
													case -2:
														chrome.Status = StatusChromeAccount.ChromeClosed;
														num3 = 1;
														goto end_IL_2318;
													case -1:
														chrome.Status = StatusChromeAccount.Checkpoint;
														num3 = 1;
														SetInfoAccount(cellAccount, indexRow, Language.GetValue("Checkpoint"));
														goto end_IL_2318;
													case 2:
														num3 = 0;
														goto end_IL_2318;
												}
											}
											if (setting_Interact.GetValueBool("ckbTuongTacNhanTin"))
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Đang nhắn tin bạn bè") + "...");
												List<string> lst = File.ReadAllLines("reactions\\message.txt").ToList();
												lst = MCommon.Common.RemoveEmptyItems(lst);
												num2 = HDNhanTinBanBe(indexRow, text2, chrome, cellAccount5, text6, setting_Interact.GetValueInt("nudTuongTacNhanTinSoLuongFrom"), setting_Interact.GetValueInt("nudTuongTacNhanTinSoLuongTo"), lst, setting_Interact.GetValueInt("nudTuongTacNhanTinDelayFrom"), setting_Interact.GetValueInt("nudTuongTacNhanTinDelayTo"), text, typeProxy, rd);
												if (num2 == -4)
												{
													flag2 = true;
													goto IL_df25;
												}
												switch (CheckFacebookLogout(chrome, text5, cellAccount4, cellAccount3, isSendRequest: true))
												{
													case -3:
														chrome.Status = StatusChromeAccount.NoInternet;
														num3 = 1;
														goto end_IL_2318;
													case -2:
														chrome.Status = StatusChromeAccount.ChromeClosed;
														num3 = 1;
														goto end_IL_2318;
													case -1:
														chrome.Status = StatusChromeAccount.Checkpoint;
														num3 = 1;
														SetInfoAccount(cellAccount, indexRow, Language.GetValue("Checkpoint"));
														goto end_IL_2318;
													case 2:
														num3 = 0;
														goto end_IL_2318;
												}
											}
											if (setting_Interact.GetValueBool("ckbTuongTacChoc"))
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Đang chọc bạn bè") + "...");
												num2 = HDChocBanBe(indexRow, text2, chrome, setting_Interact.GetValueInt("nudTuongTacChocSoLuongFrom"), setting_Interact.GetValueInt("nudTuongTacChocSoLuongTo"), setting_Interact.GetValueInt("nudTuongTacChocSoLuongDelayFrom"), setting_Interact.GetValueInt("nudTuongTacChocSoLuongDelayTo"), rd);
												if (num2 == -4)
												{
													flag2 = true;
													goto IL_df25;
												}
												switch (CheckFacebookLogout(chrome, text5, cellAccount4, cellAccount3, isSendRequest: true))
												{
													case -3:
														chrome.Status = StatusChromeAccount.NoInternet;
														num3 = 1;
														goto end_IL_2318;
													case -2:
														chrome.Status = StatusChromeAccount.ChromeClosed;
														num3 = 1;
														goto end_IL_2318;
													case -1:
														chrome.Status = StatusChromeAccount.Checkpoint;
														num3 = 1;
														SetInfoAccount(cellAccount, indexRow, Language.GetValue("Checkpoint"));
														goto end_IL_2318;
													case 2:
														num3 = 0;
														goto end_IL_2318;
												}
											}
											if (setting_Interact.GetValueBool("ckbTuongTacCMSN"))
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Đang chúc mừng sinh nhật") + "...");
												List<string> lst2 = File.ReadAllLines("reactions\\birthdaycontent.txt").ToList();
												lst2 = MCommon.Common.RemoveEmptyItems(lst2);
												num2 = HDChucMungSinhNhat(indexRow, text2, chrome, setting_Interact.GetValueInt("nudTuongTacCMSNSoLuongFrom"), setting_Interact.GetValueInt("nudTuongTacCMSNSoLuongTo"), setting_Interact.GetValueInt("nudTuongTacCMSNDelayFrom"), setting_Interact.GetValueInt("nudTuongTacCMSNDelayTo"), setting_Interact.GetValueInt("TuongTacCMSNTypeAction"), lst2, rd);
												if (num2 == -4)
												{
													flag2 = true;
													goto IL_df25;
												}
												switch (CheckFacebookLogout(chrome, text5, cellAccount4, cellAccount3, isSendRequest: true))
												{
													case -3:
														chrome.Status = StatusChromeAccount.NoInternet;
														num3 = 1;
														goto end_IL_2318;
													case -2:
														chrome.Status = StatusChromeAccount.ChromeClosed;
														num3 = 1;
														goto end_IL_2318;
													case -1:
														chrome.Status = StatusChromeAccount.Checkpoint;
														num3 = 1;
														SetInfoAccount(cellAccount, indexRow, Language.GetValue("Checkpoint"));
														goto end_IL_2318;
													case 2:
														num3 = 0;
														goto end_IL_2318;
												}
											}
											if (setting_Interact.GetValueBool("ckbThamGiaNhom"))
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Đang tham gia nhóm") + "...");
												List<string> lst3 = File.ReadAllLines("reactions\\answer.txt").ToList();
												lst3 = MCommon.Common.RemoveEmptyItems(lst3);
												num2 = HDThamGiaNhomUid(indexRow, text2, chrome, ref lstIdGroup, setting_Interact.GetValueInt("nudThamGiaNhomSoLuongFrom"), setting_Interact.GetValueInt("nudThamGiaNhomSoLuongTo"), setting_Interact.GetValueInt("nudThamGiaNhomDelayFrom"), setting_Interact.GetValueInt("nudThamGiaNhomDelayTo"), setting_Interact.GetValueBool("ckbThamGiaNhomTrungNhau"), setting_Interact.GetValueBool("ckbThamGiaNhomTraLoiCauHoi"), lst3, rd);
												if (num2 == -4)
												{
													flag2 = true;
												}
												else
												{
													switch (CheckFacebookLogout(chrome, text5, cellAccount4, cellAccount3, isSendRequest: true))
													{
														case -3:
															chrome.Status = StatusChromeAccount.NoInternet;
															num3 = 1;
															goto end_IL_2318;
														case -2:
															chrome.Status = StatusChromeAccount.ChromeClosed;
															num3 = 1;
															goto end_IL_2318;
														case -1:
															chrome.Status = StatusChromeAccount.Checkpoint;
															num3 = 1;
															SetInfoAccount(cellAccount, indexRow, Language.GetValue("Checkpoint"));
															goto end_IL_2318;
														case 2:
															num3 = 0;
															goto end_IL_2318;
													}
												}
											}
										}
										else
										{
											DataTable dataTable = InteractSQL.GetAllHanhDongByKichBan(idKichBan);
											if (setting_InteractGeneral.GetValueBool("ckbRandomHanhDong"))
											{
												dataTable = MCommon.Common.ShuffleDataTable(dataTable);
												dataTable = MCommon.Common.ShuffleDataTable(dataTable);
												dataTable = MCommon.Common.ShuffleDataTable(dataTable);
											}
											string text15 = "";
											string text16 = "";
											DataTable dataTable2 = new DataTable();
											string cauHinhFromKichBan = InteractSQL.GetCauHinhFromKichBan(idKichBan);
											JSON_Settings jSON_Settings = new JSON_Settings(cauHinhFromKichBan, isJsonString: true);
											int valueInt2 = jSON_Settings.GetValueInt("typeSoLuongHanhDong");
											int valueInt3 = jSON_Settings.GetValueInt("nudHanhDongFrom");
											int valueInt4 = jSON_Settings.GetValueInt("nudHanhDongTo");
											int num11 = dataTable.Rows.Count;
											if (valueInt2 == 1 && valueInt3 <= valueInt4)
											{
												num11 = Base.rd.Next(valueInt3, valueInt4 + 1);
												if (num11 > dataTable.Rows.Count)
												{
													num11 = dataTable.Rows.Count;
												}
											}
											int num12 = 0;
											while (num12 < num11)
											{
												if (isStop)
												{
													SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
													num3 = 1;
													goto end_IL_039a;
												}
												try
												{
													text16 = dataTable.Rows[num12]["TenHanhDong"].ToString();
													text15 = dataTable.Rows[num12]["Id_HanhDong"].ToString();
													SetStatusAccount(indexRow, text2 + Language.GetValue("Đang") + " " + text16 + "...");
													dataTable2 = InteractSQL.GetHanhDongById(text15);
													JSON_Settings jSON_Settings2 = new JSON_Settings(dataTable2.Rows[0]["CauHinh"].ToString(), isJsonString: true);
													switch (dataTable2.Rows[0]["TenTuongTac"].ToString())
													{
														case "HDDocThongBao":
															try
															{
																num2 = HDDocThongBao(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("typeDocThongBao"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), rd, text16);
															}
															catch (Exception ex71)
															{
																MCommon.Common.ExportError(ex71, "HDDocThongBao");
															}
															break;
														case "HDDocThongBaov2":
															try
															{
																num2 = HDDocThongBaov2(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), rd, text16);
															}
															catch (Exception ex70)
															{
																MCommon.Common.ExportError(ex70, "HDDocThongBao");
															}
															break;
														case "HDXemStory":
															try
															{
																num2 = HDXemStory(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValue("typeReaction"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueList("txtComment"), rd, text16);
															}
															catch (Exception ex69)
															{
																MCommon.Common.ExportError(ex69, "HDXemStory");
															}
															break;
														case "HDXemStoryv2":
															try
															{
																num2 = HDXemStoryv2(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValue("typeReaction"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueList("txtComment"), rd, text16);
															}
															catch (Exception ex68)
															{
																MCommon.Common.ExportError(ex68, "HDXemStory");
															}
															break;
														case "HDXemStoryChiDinh":
															try
															{
																num2 = HDXemStoryChiDinh(indexRow, text2, chrome, jSON_Settings2, text16);
															}
															catch (Exception ex67)
															{
																MCommon.Common.ExportError(ex67, "HDXemStoryChiDinh");
															}
															break;
														case "HDDangStory":
															try
															{
																num2 = HDDangStory(indexRow, text2, chrome, jSON_Settings2, text16);
															}
															catch (Exception ex66)
															{
																MCommon.Common.ExportError(ex66, "HDXemStoryChiDinh");
															}
															break;
														case "HDXemWatch":
															try
															{
																num2 = HDXemWatch(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudTimeWatchFrom"), jSON_Settings2.GetValueInt("nudTimeWatchTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValueInt("nudCountLikeFrom"), jSON_Settings2.GetValueInt("nudCountLikeTo"), jSON_Settings2.GetValueBool("ckbShareWall"), jSON_Settings2.GetValueInt("nudCountShareFrom"), jSON_Settings2.GetValueInt("nudCountShareTo"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueList("txtComment"), jSON_Settings2.GetValueInt("nudCountCommentFrom"), jSON_Settings2.GetValueInt("nudCountCommentTo"), jSON_Settings2.GetValueBool("ckbFollow"), jSON_Settings2.GetValueInt("nudFollowFrom"), jSON_Settings2.GetValueInt("nudFollowTo"), rd, text16);
															}
															catch (Exception ex65)
															{
																MCommon.Common.ExportError(ex65, "HDXemWatch");
															}
															break;
														case "HDXemWatchv2":
															try
															{
																num2 = HDXemWatchv2(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudTimeWatchFrom"), jSON_Settings2.GetValueInt("nudTimeWatchTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValueInt("nudCountLikeFrom"), jSON_Settings2.GetValueInt("nudCountLikeTo"), jSON_Settings2.GetValueBool("ckbShareWall"), jSON_Settings2.GetValueInt("nudCountShareFrom"), jSON_Settings2.GetValueInt("nudCountShareTo"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueList("txtComment"), jSON_Settings2.GetValueInt("nudCountCommentFrom"), jSON_Settings2.GetValueInt("nudCountCommentTo"), rd, text16);
															}
															catch (Exception ex64)
															{
																MCommon.Common.ExportError(ex64, "HDXemWatch");
															}
															break;
														case "HDNhanTinBanBe":
															try
															{
																num2 = HDNhanTinBanBe(indexRow, text2, chrome, cellAccount5, text6, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueList("txtTinNhan"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), text, typeProxy, rd, text16, jSON_Settings2.GetValueInt("typeDoiTuong"), jSON_Settings2.GetValueList("txtUidChiDinh"));
															}
															catch (Exception ex63)
															{
																MCommon.Common.ExportError(ex63, "HDNhanTinBanBe");
															}
															break;
														case "HDChocBanBe":
															try
															{
																num2 = HDChocBanBe(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), rd, text16);
															}
															catch (Exception ex62)
															{
																MCommon.Common.ExportError(ex62, "HDChocBanBe");
															}
															break;
														case "HDChucMungSinhNhat":
															try
															{
																num2 = HDChucMungSinhNhat(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueInt("typeAction"), jSON_Settings2.GetValueList("txtContent"), rd, text16);
															}
															catch (Exception ex61)
															{
																MCommon.Common.ExportError(ex61, "HDChucMungSinhNhat");
															}
															break;
														case "HDPhanHoiTinNhan":
															try
															{
																num2 = HDPhanHoiTinNhan(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueList("txtTinNhan"), rd, text16);
															}
															catch (Exception ex60)
															{
																MCommon.Common.ExportError(ex60, "HDPhanHoiTinNhan");
															}
															break;
														case "HDBaiVietNewsfeed":
															try
															{
																num2 = HDBaiVietNewsfeed(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueBool("ckbCommentText"), jSON_Settings2.GetValueList("txtComment", jSON_Settings2.GetValueInt("typeNganCach")), jSON_Settings2.GetValueBool("ckbSendAnh"), jSON_Settings2.GetValue("txtAnh"), rd, text16, jSON_Settings2.GetValueBool("ckbShareWall"));
															}
															catch (Exception ex59)
															{
																MCommon.Common.ExportError(ex59, "HDBaiVietNewsfeed");
															}
															break;
														case "HDBaiVietTrenTuong":
															try
															{
																num2 = HDBaiVietTrenTuong(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueBool("ckbCommentText"), jSON_Settings2.GetValueList("txtComment", jSON_Settings2.GetValueInt("typeNganCach")), jSON_Settings2.GetValueBool("ckbSendAnh"), jSON_Settings2.GetValue("txtAnh"), rd, text16, jSON_Settings2.GetValueBool("ckbShareWall"));
															}
															catch (Exception ex58)
															{
																MCommon.Common.ExportError(ex58, "HDBaiVietTrenTuong");
															}
															break;
														case "HDBaiVietBanBe":
															try
															{
																num2 = HDBaiVietBanBe(indexRow, text2, chrome, cellAccount5, text6, jSON_Settings2.GetValueInt("nudSoLuongBanBeFrom"), jSON_Settings2.GetValueInt("nudSoLuongBanBeTo"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietFrom"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueBool("ckbCommentText"), jSON_Settings2.GetValueList("txtComment", jSON_Settings2.GetValueInt("typeNganCach")), jSON_Settings2.GetValueBool("ckbSendAnh"), jSON_Settings2.GetValue("txtAnh"), text, typeProxy, rd, text16, jSON_Settings2.GetValueBool("ckbShareWall"));
															}
															catch (Exception ex57)
															{
																MCommon.Common.ExportError(ex57, "HDBaiVietBanBe");
															}
															break;
														case "HDBaiVietNhom":
															try
															{
																num2 = HDBaiVietNhom(indexRow, text2, chrome, cellAccount5, text6, jSON_Settings2.GetValueInt("nudSoLuongNhomFrom"), jSON_Settings2.GetValueInt("nudSoLuongNhomTo"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietFrom"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueList("txtComment", jSON_Settings2.GetValueInt("typeNganCach")), jSON_Settings2.GetValueBool("ckbVip"), text, typeProxy, rd, text16, jSON_Settings2.GetValueBool("ckbShareWall"), jSON_Settings2.GetValueBool("ckbSendAnh"), jSON_Settings2.GetValue("txtAnh"));
															}
															catch (Exception ex56)
															{
																MCommon.Common.ExportError(ex56, "HDBaiVietNhom");
															}
															break;
														case "HDBaiVietNhomv2":
															try
															{
																num2 = HDBaiVietNhomv2(indexRow, text2, chrome, cellAccount5, text6, jSON_Settings2.GetValueInt("nudSoLuongNhomFrom"), jSON_Settings2.GetValueInt("nudSoLuongNhomTo"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietFrom"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueInt("typeContent"), jSON_Settings2.GetValueList("lstIdComment"), jSON_Settings2.GetValueBool("ckbCommentText"), jSON_Settings2.GetValueList("txtComment", jSON_Settings2.GetValueInt("typeNganCach")), text, typeProxy, rd, text16, jSON_Settings2.GetValueBool("ckbShareWall"), jSON_Settings2.GetValueBool("ckbSendAnh"), jSON_Settings2.GetValue("txtAnh"));
															}
															catch (Exception ex55)
															{
																MCommon.Common.ExportError(ex55, "HDBaiVietNhomv2");
															}
															break;
														case "HDBaiVietFanpage":
															try
															{
																num2 = HDBaiVietFanpage(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongPageFrom"), jSON_Settings2.GetValueInt("nudSoLuongPageTo"), jSON_Settings2.GetValueList("txtUid"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietFrom"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueBool("ckbCommentText"), jSON_Settings2.GetValueList("txtComment", jSON_Settings2.GetValueInt("typeNganCach")), jSON_Settings2.GetValueBool("ckbSendAnh"), jSON_Settings2.GetValue("txtAnh"), jSON_Settings2.GetValueBool("ckbLikePage"), jSON_Settings2.GetValueBool("ckbAutoPlayVideo"), jSON_Settings2.GetValueInt("nudViewFrom"), jSON_Settings2.GetValueInt("nudViewTo"), rd, text16, jSON_Settings2.GetValueBool("ckbShareWall"));
															}
															catch (Exception ex54)
															{
																MCommon.Common.ExportError(ex54, "HDBaiVietFanpage");
															}
															break;
														case "HDKetBanTheoTuKhoa":
															try
															{
																num2 = HDKetBanTheoTuKhoa(indexRow, text2, chrome, jSON_Settings2.GetValueList("txtTuKhoa"), jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), rd, text16);
															}
															catch (Exception ex53)
															{
																MCommon.Common.ExportError(ex53, "HDKetBanTheoTuKhoa");
															}
															break;
														case "HDKetBanTheoTuKhoav2":
															try
															{
																num2 = HDKetBanTheoTuKhoav2(indexRow, text2, chrome, jSON_Settings2.GetValueList("txtTuKhoa"), jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), rd, text16);
															}
															catch (Exception ex52)
															{
																MCommon.Common.ExportError(ex52, "HDKetBanTheoTuKhoa");
															}
															break;
														case "HDKetBanGoiY":
															try
															{
																num2 = HDKetBanGoiY(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbChiKetBanTenCoDau"), jSON_Settings2.GetValueBool("ckbOnlyAddFriendWithMutualFriends"), jSON_Settings2.GetValueInt("nudTimesWarning", 3), rd, text16);
															}
															catch (Exception ex51)
															{
																MCommon.Common.ExportError(ex51, "HDKetBanGoiY");
															}
															break;
														case "HDKetBanGoiYv2":
															try
															{
																num2 = HDKetBanGoiYv2(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbChiKetBanTenCoDau"), jSON_Settings2.GetValueBool("ckbOnlyAddFriendWithMutualFriends"), jSON_Settings2.GetValueInt("nudTimesWarning", 3), rd, text16);
															}
															catch (Exception ex50)
															{
																MCommon.Common.ExportError(ex50, "HDKetBanGoiYv2");
															}
															break;
														case "HDXacNhanKetBan":
															try
															{
																num2 = HDXacNhanKetBan(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), rd, text16, jSON_Settings2.GetValueBool("ckbChiKetBanTenCoDau"), jSON_Settings2.GetValueBool("ckbOnlyAddFriendWithMutualFriends"));
															}
															catch (Exception ex49)
															{
																MCommon.Common.ExportError(ex49, "HDXacNhanKetBan");
															}
															break;
														case "HDXacNhanKetBanv2":
															try
															{
																num2 = HDXacNhanKetBanv2(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), rd, text16, jSON_Settings2.GetValueBool("ckbChiKetBanTenCoDau"), jSON_Settings2.GetValueBool("ckbOnlyAddFriendWithMutualFriends"));
															}
															catch (Exception ex48)
															{
																MCommon.Common.ExportError(ex48, "HDXacNhanKetBan");
															}
															break;
														case "HDKetBanTepUid":
															try
															{
																List<string> lstUid4 = null;
																num2 = HDKetBanTepUid(indexRow, text2, chrome, ref lstUid4, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), isTrungNhau: false, rd, text16, jSON_Settings2.GetValueBool("ckbTuongTac"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietFrom"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietTo"), jSON_Settings2.GetValueInt("nudTuongTacDelayFrom"), jSON_Settings2.GetValueInt("nudTuongTacDelayTo"), jSON_Settings2.GetValueBool("ckbTuongTacLike"), jSON_Settings2.GetValueBool("ckbTuongTacComment"), jSON_Settings2.GetValueList("txtComment"), jSON_Settings2.GetValueBool("ckbTuDongXoaUid"), text15, text5, cellAccount4, cellAccount3);
															}
															catch (Exception ex47)
															{
																MCommon.Common.ExportError(ex47, "HDKetBanTepUid");
															}
															break;
														case "HDKetBanTepUidv2":
															try
															{
																List<string> lstUid3 = null;
																num2 = HDKetBanTepUidv2(indexRow, text2, chrome, ref lstUid3, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), isTrungNhau: false, rd, text16, jSON_Settings2.GetValueBool("ckbTuongTac"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietFrom"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietTo"), jSON_Settings2.GetValueInt("nudTuongTacDelayFrom"), jSON_Settings2.GetValueInt("nudTuongTacDelayTo"), jSON_Settings2.GetValueBool("ckbTuongTacLike"), jSON_Settings2.GetValueBool("ckbTuongTacComment"), jSON_Settings2.GetValueList("txtComment"), jSON_Settings2.GetValueBool("ckbTuDongXoaUid"), text15, text5, cellAccount4, cellAccount3);
															}
															catch (Exception ex46)
															{
																MCommon.Common.ExportError(ex46, "HDKetBanTepUidv2");
															}
															break;
														case "HDKetBanNewfeed":
															try
															{
																num2 = HDKetBanNewfeed(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), rd, text16);
															}
															catch (Exception ex45)
															{
																MCommon.Common.ExportError(ex45, "HDKetBanNewfeed");
															}
															break;
														case "HDKetBanVoiBanBeCuaUid":
															try
															{
																num2 = HDKetBanVoiBanBeCuaUid(indexRow, text2, chrome, jSON_Settings2.GetValueList("txtUid"), jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), rd, text16);
															}
															catch (Exception ex44)
															{
																MCommon.Common.ExportError(ex44, "HDKetBanVoiBanBeCuaUid");
															}
															break;
														case "HDKetBanVoiBanCuaBanBe":
															try
															{
																num2 = HDKetBanVoiBanCuaBanBe(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), rd, text16);
															}
															catch (Exception ex43)
															{
																MCommon.Common.ExportError(ex43, "HDKetBanVoiBanCuaBanBe");
															}
															break;
														case "HDKetBanTepUidNew":
															break;
														case "HDKetBanThanhVienNhom":
															try
															{
																num2 = HDKetBanThanhVienNhom(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueList("txtUid"), rd, text16);
															}
															catch (Exception ex42)
															{
																MCommon.Common.ExportError(ex42, "HDKetBanThanhVienNhom");
															}
															break;
														case "HDHuyLoiMoiKetBan":
															try
															{
																num2 = HDHuyLoiMoiKetBan(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), rd, text16);
															}
															catch (Exception ex41)
															{
																MCommon.Common.ExportError(ex41, "HDHuyLoiMoiKetBan");
															}
															break;
														case "HDHuyLikePage":
															try
															{
																num2 = HDHuyLikePage(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), rd, text16);
															}
															catch (Exception ex40)
															{
																MCommon.Common.ExportError(ex40, "HDHuyLoiMoiKetBan");
															}
															break;
														case "HDHuyKetBan":
															try
															{
																num2 = HDHuyKetBan(indexRow, text2, chrome, cellAccount5, text6, jSON_Settings2.GetValueInt("typeHuyKetBan"), jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueList("txtUid"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueList("txtUidKhongHuyKetBan"), text, typeProxy, rd, text16);
															}
															catch (Exception ex39)
															{
																MCommon.Common.ExportError(ex39, "HDHuyKetBan");
															}
															break;
														case "HDHuyKetBanNhanh":
															try
															{
																num2 = HDHuyKetBan2(indexRow, text2, chrome, cellAccount5, text6, jSON_Settings2.GetValueInt("typeHuyKetBan"), jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueList("txtUid"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueList("txtUidKhongHuyKetBan"), text, typeProxy, rd, text16);
															}
															catch (Exception ex38)
															{
																MCommon.Common.ExportError(ex38, "HDHuyKetBan");
															}
															break;
														case "HDThamGiaNhomGoiY":
															try
															{
																num2 = HDThamGiaNhomGoiY(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbTuDongTraLoiCauHoi"), jSON_Settings2.GetValueList("txtCauTraLoi"), text16);
															}
															catch (Exception ex37)
															{
																MCommon.Common.ExportError(ex37, "HDThamGiaNhomGoiY");
															}
															break;
														case "HDThamGiaNhomGoiYv2":
															try
															{
																num2 = HDThamGiaNhomGoiYv2(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbTuDongTraLoiCauHoi"), jSON_Settings2.GetValueList("txtCauTraLoi"), text16);
															}
															catch (Exception ex36)
															{
																MCommon.Common.ExportError(ex36, "HDThamGiaNhomGoiY");
															}
															break;
														case "HDThamGiaNhomUid":
															try
															{
																List<string> lstUid2 = null;
																num2 = HDThamGiaNhomUid(indexRow, text2, chrome, ref lstUid2, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), isTrungNhau: false, jSON_Settings2.GetValueBool("ckbTuDongTraLoiCauHoi"), jSON_Settings2.GetValueList("txtCauTraLoi"), rd, text16, jSON_Settings2.GetValueBool("ckbTuDongXoaUid"), text15, text5, cellAccount4, cellAccount3);
															}
															catch (Exception ex35)
															{
																MCommon.Common.ExportError(ex35, "HDThamGiaNhomUid");
															}
															break;
														case "HDThamGiaNhomUidv2":
															try
															{
																List<string> lstUid = null;
																num2 = HDThamGiaNhomUidv2(indexRow, text2, chrome, ref lstUid, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), isTrungNhau: false, jSON_Settings2.GetValueBool("ckbTuDongTraLoiCauHoi"), jSON_Settings2.GetValueList("txtCauTraLoi"), rd, text16, jSON_Settings2.GetValueBool("ckbTuDongXoaUid"), text15, text5, cellAccount4, cellAccount3);
															}
															catch (Exception ex34)
															{
																MCommon.Common.ExportError(ex34, "HDThamGiaNhomUid");
															}
															break;
														case "HDThamGiaNhomTuKhoa":
															try
															{
																num2 = HDThamGiaNhomTuKhoa(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueList("txtTuKhoa"), jSON_Settings2.GetValueBool("ckbTuDongTraLoiCauHoi"), jSON_Settings2.GetValueList("txtCauTraLoi"), rd, text16);
															}
															catch (Exception ex33)
															{
																MCommon.Common.ExportError(ex33, "HDThamGiaNhomTuKhoa");
															}
															break;
														case "HDThamGiaNhomTuKhoav2":
															try
															{
																num2 = HDThamGiaNhomTuKhoav2(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueList("txtTuKhoa"), jSON_Settings2.GetValueBool("ckbTuDongTraLoiCauHoi"), jSON_Settings2.GetValueList("txtCauTraLoi"), rd, text16);
															}
															catch (Exception ex32)
															{
																MCommon.Common.ExportError(ex32, "HDThamGiaNhomTuKhoa");
															}
															break;
														case "HDRoiNhom":
															try
															{
																num2 = HDRoiNhom(indexRow, text2, chrome, text6, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueInt("typeRoiNhom"), jSON_Settings2.GetValueBool("ckbDieuKienThanhVien"), jSON_Settings2.GetValueInt("nudThanhVienToiDa"), jSON_Settings2.GetValueBool("ckbDieuKienTuKhoa"), jSON_Settings2.GetValueList("txtTuKhoa"), jSON_Settings2.GetValueList("txtIDNhomGiuLai"), jSON_Settings2.GetValueBool("ckbDieuKienID"), jSON_Settings2.GetValueList("txtIdNhomRoi"), text, typeProxy, rd, text16);
															}
															catch (Exception ex31)
															{
																MCommon.Common.ExportError(ex31, "HDRoiNhom");
															}
															break;
														case "HDMoiLikePage":
															try
															{
																num2 = HDMoiLikePage(indexRow, text2, chrome, text6, jSON_Settings2.GetValue("txtIdPage"), jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), text, typeProxy, rd, text16);
															}
															catch (Exception ex30)
															{
																MCommon.Common.ExportError(ex30, "HDMoiLikePage");
															}
															break;
														case "HDMoiBanBeVaoNhom":
															try
															{
																num2 = HDMoiBanBeVaoNhom(indexRow, text2, chrome, cellAccount5, jSON_Settings2.GetValueInt("nudSoLuongFrom"), jSON_Settings2.GetValueInt("nudSoLuongTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueList("txtUid"), jSON_Settings2.GetValueInt("typeInvite"), text, typeProxy, rd, text16);
															}
															catch (Exception ex29)
															{
																MCommon.Common.ExportError(ex29, "HDMoiBanBeVaoNhom");
															}
															break;
														case "HDTuongTacNewsfeedv2":
															try
															{
																num2 = HDTuongTacNewsfeedv2(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudTimeFrom"), jSON_Settings2.GetValueInt("nudTimeTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValueInt("nudCountLikeFrom", 1), jSON_Settings2.GetValueInt("nudCountLikeTo", 3), jSON_Settings2.GetValue("typeCamXuc"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueInt("nudCountCommentFrom", 1), jSON_Settings2.GetValueInt("nudCountCommentTo", 3), jSON_Settings2.GetValueList("txtComment", jSON_Settings2.GetValueInt("typeNganCach")), rd, text16);
															}
															catch (Exception ex28)
															{
																MCommon.Common.ExportError(ex28, "HDTuongTacNewsfeedv2");
															}
															break;
														case "HDTuongTacBaiVietNhomv2":
															try
															{
																num2 = HDTuongTacBaiVietNhomv2(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudTimeFrom"), jSON_Settings2.GetValueInt("nudTimeTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValueInt("nudCountLikeFrom", 1), jSON_Settings2.GetValueInt("nudCountLikeTo", 3), jSON_Settings2.GetValue("typeCamXuc"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueInt("nudCountCommentFrom", 1), jSON_Settings2.GetValueInt("nudCountCommentTo", 3), jSON_Settings2.GetValueList("txtComment", jSON_Settings2.GetValueInt("typeNganCach")), rd, text16);
															}
															catch (Exception ex27)
															{
																MCommon.Common.ExportError(ex27, "HDTuongTacBaiVietNhomv2");
															}
															break;
														case "HDTuongTacNewsfeed":
															try
															{
																num2 = HDTuongTacNewsfeed(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudTimeFrom"), jSON_Settings2.GetValueInt("nudTimeTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValueInt("nudCountLikeFrom", 1), jSON_Settings2.GetValueInt("nudCountLikeTo", 3), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueInt("nudCountCommentFrom", 1), jSON_Settings2.GetValueInt("nudCountCommentTo", 3), jSON_Settings2.GetValueBool("ckbCommentText"), jSON_Settings2.GetValueList("txtComment", jSON_Settings2.GetValueInt("typeNganCach")), jSON_Settings2.GetValueBool("ckbSendAnh"), jSON_Settings2.GetValue("txtAnh"), rd, text16, jSON_Settings2.GetValueBool("ckbShareWall"), jSON_Settings2.GetValueInt("nudCountShareFrom", 1), jSON_Settings2.GetValueInt("nudCountShareTo", 3));
															}
															catch (Exception ex26)
															{
																MCommon.Common.ExportError(ex26, "HDTuongTacNewsfeed");
															}
															break;
														case "HDTuongTacBanBe":
															try
															{
																num2 = HDTuongTacBanBe(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongBanBeFrom"), jSON_Settings2.GetValueInt("nudSoLuongBanBeTo"), jSON_Settings2.GetValueInt("nudTimeFrom"), jSON_Settings2.GetValueInt("nudTimeTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValueInt("nudCountLikeFrom", 1), jSON_Settings2.GetValueInt("nudCountLikeTo", 3), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueInt("nudCountCommentFrom", 1), jSON_Settings2.GetValueInt("nudCountCommentTo", 3), jSON_Settings2.GetValueBool("ckbCommentText"), jSON_Settings2.GetValueList("txtComment", jSON_Settings2.GetValueInt("typeNganCach")), jSON_Settings2.GetValueBool("ckbSendAnh"), jSON_Settings2.GetValue("txtAnh"), rd, text16, jSON_Settings2.GetValueBool("ckbShareWall"), jSON_Settings2.GetValueInt("nudCountShareFrom", 1), jSON_Settings2.GetValueInt("nudCountShareTo", 3));
															}
															catch (Exception ex25)
															{
																MCommon.Common.ExportError(ex25, "HDTuongTacBanBe");
															}
															break;
														case "HDBackupData":
															try
															{
																num2 = HDBackupData(cellAccount, indexRow, text2, chrome, cellAccount5, jSON_Settings2.GetValueBool("ckbNgaySinh"), jSON_Settings2.GetValueBool("ckbAnhBanBe"), jSON_Settings2.GetValueBool("ckbBackupImageNangCao"), jSON_Settings2.GetValueInt("nudSoLuongAnh"), jSON_Settings2.GetValueBool("ckbNhanTin"), jSON_Settings2.GetValueBool("ckbBinhLuan"), jSON_Settings2.GetValueInt("nudSoThang", 5), jSON_Settings2.GetValueBool("ckbCreateHTML"), text, typeProxy, text16);
															}
															catch (Exception ex24)
															{
																MCommon.Common.ExportError(ex24, "HDBackupData");
															}
															break;
														case "HDBuffLikeComment":
														case "HDTuongTacBaiVietTheoID":
															try
															{
																num2 = HDBuffLikeComment(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudTimeFrom"), jSON_Settings2.GetValueInt("nudTimeTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueInt("nudSoLuongUidFrom"), jSON_Settings2.GetValueInt("nudSoLuongUidTo"), jSON_Settings2.GetValueBool("ckbTuDongXoa"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueBool("ckbCommentText"), jSON_Settings2.GetValueBool("ckbTag"), jSON_Settings2.GetValueInt("nudSoLuongTagFrom"), jSON_Settings2.GetValueInt("nudSoLuongTagTo"), jSON_Settings2.GetValueInt("typeComment"), jSON_Settings2.GetValueBool("ckbSendAnh"), jSON_Settings2.GetValue("txtAnh"), jSON_Settings2.GetValueBool("ckbSendVideo"), jSON_Settings2.GetValue("txtVideo"), jSON_Settings2.GetValueList("txtIdPost"), rd, text16, jSON_Settings2.GetValueBool("ckbShareWall"), jSON_Settings2.GetValueBool("ckbAutoDeleteComment"), text15);
															}
															catch (Exception ex23)
															{
																MCommon.Common.ExportError(ex23, "HDBuffLikeComment");
															}
															break;
														case "HDBuffViewVideo":
															try
															{
																num2 = HDBuffViewVideo(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudTimeFrom"), jSON_Settings2.GetValueInt("nudTimeTo"), jSON_Settings2.GetValueList("txtUid"), rd, text16);
															}
															catch (Exception ex22)
															{
																MCommon.Common.ExportError(ex22, "HDBuffViewVideo");
															}
															break;
														case "HDSeedingByVideo":
															try
															{
																num2 = HDSeedingByVideo(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValue("txtComment"), jSON_Settings2.GetValueInt("typeNganCach"), jSON_Settings2.GetValueBool("ckbSendVideo"), jSON_Settings2.GetValue("txtVideo"), jSON_Settings2.GetValueList("txtIdPost"), rd, text16);
															}
															catch (Exception ex21)
															{
																MCommon.Common.ExportError(ex21, "HDSeedingByVideo");
															}
															break;
														case "HDBuffFollowCaNhan":
															try
															{
																num2 = HDBuffFollowCaNhan(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueList("txtUid"), rd, text16);
															}
															catch (Exception ex20)
															{
																MCommon.Common.ExportError(ex20, "HDBuffFollowCaNhan");
															}
															break;
														case "HDBuffFollowLikePage":
															try
															{
																num2 = HDBuffFollowLikePage(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueList("txtUid"), jSON_Settings2.GetValueBool("ckbLike"), jSON_Settings2.GetValueBool("ckbFollow"), rd, text16);
															}
															catch (Exception ex19)
															{
																MCommon.Common.ExportError(ex19, "HDBuffFollowLikePage");
															}
															break;
														case "HDDangStatus":
															try
															{
																num2 = HDDangStatus(indexRow, text2, chrome, cellAccount5, jSON_Settings2.GetValueInt("nudSoLuongFrom", 1), jSON_Settings2.GetValueInt("nudSoLuongTo", 1), jSON_Settings2.GetValueInt("nudKhoangCachFrom"), jSON_Settings2.GetValueInt("nudKhoangCachTo"), jSON_Settings2.GetValueBool("ckbVanBan"), jSON_Settings2.GetValueBool("ckbUseBackground"), jSON_Settings2.GetValueBool("ckbAnh"), jSON_Settings2.GetValue("txtPathAnh"), jSON_Settings2.GetValueInt("nudSoLuongAnhFrom"), jSON_Settings2.GetValueInt("nudSoLuongAnhTo"), jSON_Settings2.GetValueBool("ckbVideo"), jSON_Settings2.GetValue("txtPathVideo"), jSON_Settings2.GetValueInt("nudSoLuongVideoFrom"), jSON_Settings2.GetValueInt("nudSoLuongVideoTo"), rd, jSON_Settings2.GetValueBool("ckbTag"), jSON_Settings2.GetValueInt("typeUidTag"), jSON_Settings2.GetValueList("txtUidTag"), jSON_Settings2.GetValueInt("nudUidFrom"), jSON_Settings2.GetValueInt("nudUidTo"), text16, text15);
															}
															catch (Exception ex18)
															{
																MCommon.Common.ExportError(ex18, "HDDangStatus");
															}
															break;
														case "HDDangStatusV2":
															try
															{
																num2 = HDDangStatusV2(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongFrom", 1), jSON_Settings2.GetValueInt("nudSoLuongTo", 1), jSON_Settings2.GetValueInt("nudKhoangCachFrom"), jSON_Settings2.GetValueInt("nudKhoangCachTo"), jSON_Settings2.GetValueBool("ckbVanBan"), jSON_Settings2.GetValueBool("ckbAnh"), jSON_Settings2.GetValue("txtPathAnh"), jSON_Settings2.GetValueInt("nudSoLuongAnhFrom"), jSON_Settings2.GetValueInt("nudSoLuongAnhTo"), jSON_Settings2.GetValueBool("ckbDangAnhTheoThuTu"), jSON_Settings2.GetValueBool("ckbTag"), jSON_Settings2.GetValueInt("nudUidFrom"), jSON_Settings2.GetValueInt("nudUidTo"), jSON_Settings2.GetValueBool("ckbOnlyTagVNName"), text15, text16, ref checkPostSuccess);
															}
															catch (Exception ex17)
															{
																MCommon.Common.ExportError(ex17, "HDDangStatus");
															}
															break;
														case "HDBaiVietProfile":
															try
															{
																num2 = HDBaiVietProfile(indexRow, text2, chrome, jSON_Settings2.GetValueInt("typeListUid"), jSON_Settings2.GetValue("txtPathFileUid"), jSON_Settings2.GetValueInt("nudSoLuongUidFrom"), jSON_Settings2.GetValueInt("nudSoLuongUidTo"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietFrom"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValue("txtComment"), jSON_Settings2.GetValueInt("typeNganCach"), rd, text16, jSON_Settings2.GetValueBool("ckbShareWall"), jSON_Settings2.GetValueBool("ckbSendAnh"), jSON_Settings2.GetValue("txtAnh"), jSON_Settings2.GetValueBool("ckbTuDongXoaUid"), jSON_Settings2.GetValueBool("ckbRandomGoVanBan"), text15);
															}
															catch (Exception ex16)
															{
																MCommon.Common.ExportError(ex16, "HDBaiVietProfile");
															}
															break;
														case "HDSpamBaiViet":
															try
															{
																num2 = HDSpamBaiViet(indexRow, text2, chrome, jSON_Settings2.GetValueInt("typeListUid"), jSON_Settings2.GetValue("txtPathFileUid"), jSON_Settings2.GetValueInt("nudSoLuongUidFrom"), jSON_Settings2.GetValueInt("nudSoLuongUidTo"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietFrom"), jSON_Settings2.GetValueInt("nudSoLuongBaiVietTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbInteract"), jSON_Settings2.GetValueBool("ckbComment"), jSON_Settings2.GetValueBool("ckbAutoDeleteComment"), jSON_Settings2.GetValueBool("ckbBoQua"), jSON_Settings2.GetValueInt("nudBoQuaFrom"), jSON_Settings2.GetValueInt("nudBoQuaTo"), jSON_Settings2.GetValueBool("ckbTheoThuTu"), rd, text16, jSON_Settings2.GetValueBool("ckbShareWall"), jSON_Settings2.GetValueBool("ckbSendAnh"), jSON_Settings2.GetValue("txtAnh"), jSON_Settings2.GetValueBool("ckbTuDongXoaUid"), jSON_Settings2.GetValueBool("ckbRandomGoVanBan"), text15);
															}
															catch (Exception ex15)
															{
																MCommon.Common.ExportError(ex15, "HDBaiVietProfile");
															}
															break;
														case "HDBuffTinNhanProfile":
															try
															{
																num2 = HDBuffTinNhanProfile(indexRow, text2, chrome, jSON_Settings2.GetValueInt("nudSoLuongUidFrom"), jSON_Settings2.GetValueInt("nudSoLuongUidTo"), jSON_Settings2.GetValueInt("nudSoLuongAnhFrom"), jSON_Settings2.GetValueInt("nudSoLuongAnhTo"), jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), jSON_Settings2.GetValueBool("ckbAddFriend"), jSON_Settings2.GetValueBool("ckbNhanTinVanBan"), jSON_Settings2.GetValueList("txtNoiDung", jSON_Settings2.GetValueInt("typeNganCach")), rd, text16, jSON_Settings2.GetValueBool("ckbSendAnh"), jSON_Settings2.GetValue("txtAnh"), jSON_Settings2.GetValueBool("ckbTuDongXoaUid"), text15, jSON_Settings2.GetValueBool("ckbTuongTacKhiNhanTin"), jSON_Settings2.GetValueInt("typeTuongTacKhiNhanTin"), jSON_Settings2.GetValueBool("ckbTuongTacKhiNhanTinLike"), jSON_Settings2.GetValueBool("ckbTuongTacKhiNhanTinComment"), jSON_Settings2.GetValueList("txtTuongTacKhiNhanTinComment", jSON_Settings2.GetValueInt("typeNganCachComment")));
															}
															catch (Exception ex14)
															{
																MCommon.Common.ExportError(ex14, "HDBuffTinNhanProfile");
															}
															break;
														case "HDXoaThongBaoVPCS":
															try
															{
																num2 = HDXoaThongBaoVPCS(indexRow, text2, chrome, jSON_Settings2.GetValueInt("typeDelete"), jSON_Settings2.GetValueBool("ckbDeleteMessage"), text16);
															}
															catch (Exception ex13)
															{
																MCommon.Common.ExportError(ex13, "HDXoaThongBaoVPCS");
															}
															break;
														case "HDTimKiemGoogle":
															try
															{
																num2 = HDTimKiemGoogle(indexRow, text2, chrome, jSON_Settings2.GetValueList("txtTuKhoa"), jSON_Settings2.GetValueInt("nudCountTuKhoaFrom"), jSON_Settings2.GetValueInt("nudCountTuKhoaTo"), jSON_Settings2.GetValueInt("nudCountPageFrom"), jSON_Settings2.GetValueInt("nudCountPageTo"), jSON_Settings2.GetValueInt("nudCountLinkClickFrom"), jSON_Settings2.GetValueInt("nudCountLinkClickTo"), jSON_Settings2.GetValueInt("nudCountTimeScrollFrom"), jSON_Settings2.GetValueInt("nudCountTimeScrollTo"), text16);
															}
															catch (Exception ex12)
															{
																MCommon.Common.ExportError(ex12, "HDTimKiemGoogle");
															}
															break;
														case "HDTruyCapWebsite":
															try
															{
																num2 = HDTruyCapWebsite(indexRow, text2, chrome, jSON_Settings2.GetValueList("txtLinkWeb"), jSON_Settings2.GetValueInt("nudCountLinkFrom"), jSON_Settings2.GetValueInt("nudCountLinkTo"), jSON_Settings2.GetValueInt("nudCountLinkClickFrom"), jSON_Settings2.GetValueInt("nudCountLinkClickTo"), jSON_Settings2.GetValueInt("nudCountTimeScrollFrom"), jSON_Settings2.GetValueInt("nudCountTimeScrollTo"), jSON_Settings2.GetValueBool("ckbLuot"), text16);
															}
															catch (Exception ex11)
															{
																MCommon.Common.ExportError(ex11, "HDTruyCapWebsite");
															}
															break;
														case "HDNghiGiaiLao":
															try
															{
																num2 = HDNghiGiaiLao(indexRow, text2, jSON_Settings2.GetValueInt("nudDelayFrom"), jSON_Settings2.GetValueInt("nudDelayTo"), text16);
															}
															catch (Exception ex10)
															{
																MCommon.Common.ExportError(ex10, "HDNghiGiaiLao");
															}
															break;
														case "HDDangBai":
															try
															{
																num2 = HDDangBai(indexRow, text2, chrome, jSON_Settings2, text16, text15);
															}
															catch (Exception ex9)
															{
																MCommon.Common.ExportError(ex9, "HDDangBai");
															}
															break;
														case "HDDangBaiTheoID":
															try
															{
																num2 = HDDangBaiTheoID(indexRow, text2, chrome, jSON_Settings2, text16, text15);
															}
															catch (Exception ex8)
															{
																MCommon.Common.ExportError(ex8, "HDDangBaiTheoID");
															}
															break;
														case "HDShareBai":
															try
															{
																num2 = HDShareBai(indexRow, text2, chrome, jSON_Settings2, text16);
															}
															catch (Exception ex7)
															{
																MCommon.Common.ExportError(ex7, "HDShareBai");
															}
															break;
														case "HDPhanHoiBinhLuan":
															try
															{
																num2 = HDPhanHoiBinhLuan(indexRow, text2, chrome, jSON_Settings2, text16, text15);
															}
															catch (Exception ex6)
															{
																MCommon.Common.ExportError(ex6, "HDShareBai");
															}
															break;
														case "HDXoaBaiPage":
															try
															{
																num2 = HDXoaBaiPage(indexRow, text2, chrome, jSON_Settings2, text16);
															}
															catch (Exception ex5)
															{
																MCommon.Common.ExportError(ex5, "HDXoaBaiPage");
															}
															break;
														case "HDXoaBaiTuong":
															try
															{
																num2 = HDXoaBaiTuong(indexRow, text2, chrome, jSON_Settings2, text16);
															}
															catch (Exception ex4)
															{
																MCommon.Common.ExportError(ex4, "HDXoaBaiPage");
															}
															break;
														case "HDChangeSoThich":
															try
															{
																num2 = HDChangeSoThich(indexRow, text2, chrome, jSON_Settings2, text16);
															}
															catch (Exception ex3)
															{
																MCommon.Common.ExportError(ex3, "HDChangeSoThich");
															}
															break;
														case "HDChangeTenPhu":
															try
															{
																num2 = HDChangeTenPhu(indexRow, text2, chrome, jSON_Settings2, text16);
															}
															catch (Exception ex2)
															{
																MCommon.Common.ExportError(ex2, "HDChangeTenPhu");
															}
															break;
														case "HDLinkToInstagram":
															try
															{
																num2 = HDLinkToInstagram(indexRow, text2, chrome, jSON_Settings2, text16);
															}
															catch (Exception ex)
															{
																MCommon.Common.ExportError(ex, "HDLinkToInstagram");
															}
															break;
													}
												}
												catch (Exception ex72)
												{
													MCommon.Common.ExportError(ex72, "Tuong tac theo kich ban");
												}
												if (num2 == -4)
												{
													flag2 = true;
													break;
												}
												num2 = CheckFacebookLogout(chrome, text5, cellAccount4, cellAccount3, isSendRequest: true);
												switch (num2)
												{
													case -3:
														chrome.Status = StatusChromeAccount.NoInternet;
														num3 = 1;
														goto end_IL_2318;
													case -2:
														chrome.Status = StatusChromeAccount.ChromeClosed;
														num3 = 1;
														goto end_IL_2318;
													case -1:
														chrome.Status = StatusChromeAccount.Checkpoint;
														SetInfoAccount(cellAccount, indexRow, Language.GetValue("Checkpoint"));
														num3 = 1;
														goto end_IL_2318;
													case 2:
														num3 = 0;
														goto end_IL_2318;
												}
												num12++;
											}
										}
										goto IL_df25;
									IL_df25:
										if (setting_InteractGeneral.GetValueBool("ckbAllowFollow"))
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Cho phe\u0301p ngươ\u0300i kha\u0301c follow..."));
											AllowFollow(chrome);
											DelayThaoTacNho();
										}
										if (setting_InteractGeneral.GetValueBool("ckbReviewTag"))
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Bật duyệt bài viết..."));
											ReviewTag(chrome);
											DelayThaoTacNho();
										}
										if (setting_InteractGeneral.GetValueBool("ckbBatThongBaoDangNhap"))
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Bật thông báo đăng nhập..."));
											BatThongBaoDangNhap(chrome, indexRow);
											DelayThaoTacNho();
										}
										if (setting_InteractGeneral.GetValueBool("ckbCapNhatThongTin"))
										{
											try
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Cập nhật thông tin..."));
												UpdateInfoWhenInteracting(chrome, indexRow);
												DelayThaoTacNho();
											}
											catch (Exception ex73)
											{
												CommonCSharp.ExportError(null, ex73.ToString());
											}
										}
										if (setting_InteractGeneral.GetValueBool("ckbGetToken"))
										{
											cellAccount5 = CommonChrome.GetTokenEAAAAZ(chrome);
											if (cellAccount5 != "")
											{
												CommonSQL.UpdateFieldToAccount(cellAccount, "token", cellAccount5);
												SetCellAccount(indexRow, "cToken", cellAccount5);
											}
										}
										if (setting_InteractGeneral.GetValueBool("ckbAutoLinkInstagram"))
										{
											DelayThaoTacNho();
											SetStatusAccount(indexRow, text2 + Language.GetValue("Liên kê\u0301t Instagram..."));
											if (LinkToInstagram(chrome))
											{
												DelayThaoTacNho();
											}
										}
										if (setting_InteractGeneral.GetValueBool("ckbLogOutOldDevice"))
										{
											DelayThaoTacNho();
											SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng xuất thiê\u0301t bi\u0323 cu\u0303..."));
											LogoutOldDevice(chrome);
											DelayThaoTacNho();
										}
										if (setting_InteractGeneral.GetValueBool("ckbLogOut"))
										{
											DelayThaoTacNho();
											SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng xuất..."));
											Logout(chrome);
											DelayThaoTacNho();
										}
										if (setting_InteractGeneral.GetValueBool("ckbCreateShortcut"))
										{
											DelayThaoTacNho();
											SetStatusAccount(indexRow, text2 + Language.GetValue("Ta\u0323o Shortcut..."));
											string text17 = dtgvAcc.Rows[indexRow].Cells["cName"].Value.ToString();
											string nameShortcut = ((text17 == "") ? text5 : (text17 + "_" + text5));
											CreateShortcutChrome(setting_general.GetValue("txbPathProfile") + "\\" + text5, nameShortcut);
											DelayThaoTacNho();
										}
										break;
									}
								end_IL_2318:;
								}
								catch (Exception ex74)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Lô\u0303i không xa\u0301c đi\u0323nh!"));
									num3 = 1;
									MCommon.Common.ExportError(chrome, ex74, Language.GetValue("Lô\u0303i không xa\u0301c đi\u0323nh!"));
								}
								break;
							}
						IL_217a:
							SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
							num3 = 1;
							break;
						end_IL_039a:
							break;
					}
					break;
				}
			}
			string text18 = "";
			if (num3 == 1)
			{
				if (chrome != null)
				{
					if (chrome.Status == StatusChromeAccount.Checkpoint)
					{
						ScreenCaptureError(chrome, text5, 0);
					}
					StatusChromeAccount status = chrome.Status;
					StatusChromeAccount statusChromeAccount = status;
					if (statusChromeAccount == StatusChromeAccount.ChromeClosed || statusChromeAccount == StatusChromeAccount.Checkpoint || statusChromeAccount == StatusChromeAccount.NoInternet)
					{
						SetRowColor(indexRow, 1);
						text18 = GetContentStatusChrome.GetContent(chrome.Status);
					}
					else
					{
						text18 = GetStatusAccount(indexRow);
					}
				}
				else
				{
					text18 = GetStatusAccount(indexRow);
				}
			}
			else if (CheckIsUidFacebook(text5) && CommonRequest.CheckLiveWall(text5).StartsWith("0|"))
			{
				SetInfoAccount(cellAccount, indexRow, "Die");
				text18 = Language.GetValue("Tài khoản Die!");
			}
			else
			{
				chrome.Status = StatusChromeAccount.Empty;
				CommonChrome.CheckStatusAccount(chrome, isSendRequest: true);
				StatusChromeAccount status2 = chrome.Status;
				StatusChromeAccount statusChromeAccount2 = status2;
				if (statusChromeAccount2 == StatusChromeAccount.ChromeClosed || statusChromeAccount2 == StatusChromeAccount.Checkpoint || statusChromeAccount2 == StatusChromeAccount.NoInternet)
				{
					SetRowColor(indexRow, 1);
					text18 = GetContentStatusChrome.GetContent(chrome.Status);
				}
			}
			try
			{
				if (chrome?.CheckIsLive() ?? false)
				{
					int num13 = rd.Next(setting_general.GetValueInt("nudDelayCloseChromeFrom"), setting_general.GetValueInt("nudDelayCloseChromeTo") + 1);
					if (num13 > 0)
					{
						int tickCount2 = Environment.TickCount;
						while ((Environment.TickCount - tickCount2) / 1000 - num13 < 0)
						{
							if (isStop)
							{
								SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
								break;
							}
							SetStatusAccount(indexRow, text2 + Language.GetValue("Đóng tri\u0300nh duyê\u0323t sau {time}s...").Replace("{time}", (num13 - (Environment.TickCount - tickCount2) / 1000).ToString()));
							MCommon.Common.DelayTime(0.5);
						}
					}
					try
					{
						fViewChrome.remote.RemovePanelDevice(chrome.IndexChrome);
					}
					catch
					{
					}
					try
					{
						chrome.Close();
					}
					catch
					{
					}
				}
			}
			catch
			{
			}
			string text19 = text18;
			string text20 = text19;
			if (text20 == "")
			{
				SetStatusAccount(indexRow, text2 + Language.GetValue("Đã tương tác xong!") + (flag2 ? "- Facebook blocked!" : "") + " [" + MCommon.Common.ConvertSecondsToTime((Environment.TickCount - num) / 1000) + "(s)]");
				SetCellAccount(indexRow, "cInteractEnd", DateTime.Now.ToString("dd/MM/yyyy HH:mm:ss"));
				CommonSQL.UpdateFieldToAccount(cellAccount, "interactEnd", DateTime.Now.ToString("dd/MM/yyyy HH:mm:ss"));
				SetInfoAccount(cellAccount, indexRow, "Live");
			}
			else
			{
				SetStatusAccount(indexRow, text2 + text18 + (flag2 ? "- Facebook blocked!" : ""));
			}
			if (flag && Directory.Exists(setting_general.GetValue("txbPathProfile") + "\\" + text4))
			{
				string text21 = setting_general.GetValue("txbPathProfile") + "\\" + text4;
				string pathTo = setting_general.GetValue("txbPathProfile") + "\\" + text5;
				if (!MCommon.Common.MoveFolder(text21, pathTo) && MCommon.Common.CopyFolder(text21, pathTo))
				{
					MCommon.Common.DeleteFolder(text21);
				}
			}
			lock (lock_FinishProxy)
			{
				switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
				{
					case 7:
						tinsoftProxy?.DecrementDangSuDung();
						break;
					case 8:
						xproxyProxy?.DecrementDangSuDung();
						break;
					case 10:
						tMProxy?.DecrementDangSuDung();
						break;
					case 11:
						proxyWeb?.DecrementDangSuDung();
						break;
					case 12:
						shopLike?.DecrementDangSuDung();
						break;
					case 13:
						minProxy?.DecrementDangSuDung();
						break;
					case 9:
						break;
				}
			}
		}

		private int HDLinkToInstagram(int indexRow, string statusProxy, Chrome chrome, JSON_Settings cauHinh, string tenHanhDong)
		{
			//Discarded unreachable code: IL_0d86, IL_0d9b, IL_15f5, IL_160a, IL_1626, IL_1633
			int num = 0;
			string text = "";
			string text2 = "";
			string text3 = "";
			int valueInt = cauHinh.GetValueInt("typePass");
			bool valueBool = cauHinh.GetValueBool("ckbUpAvatar");
			string value = cauHinh.GetValue("txtPathImage");
			List<string> list = new List<string>();
			bool valueBool2 = cauHinh.GetValueBool("ckbFollow");
			int num2 = rd.Next(cauHinh.GetValueInt("nudSoLuongFrom"), cauHinh.GetValueInt("nudSoLuongTo") + 1);
			int num3 = chrome.chrome.Manage().Window.Size.Width;
			int num4 = chrome.chrome.Manage().Window.Size.Height;
			chrome.chrome.Manage().Window.Size = new Size(500, 700);
			try
			{
				chrome.GotoURL("https://www.instagram.com/");
				DelayThaoTacNho();
				switch (chrome.CheckExistElements(10.0, "[href=\"/accounts/activity/\"]", "form button"))
				{
					case 1:
						num = 0;
						break;
					case 2:
						chrome.Click(4, "form button", 1);
						chrome.DelayTime(1.0);
						if (chrome.GetURL().StartsWith("https://www.instagram.com/fxcal/disclosure/"))
						{
							chrome.Click(4, "[type=\"button\"]");
						}
						switch (chrome.CheckExistElements(20.0, "[href=\"/accounts/activity/\"]", "[name=\"__CONFIRM__\"]", "[name=\"username\"]"))
						{
							case 1:
								break;
							case 2:
								chrome.DelayTime(1.0);
								chrome.ExecuteScript("document.querySelector('[name=\"__CONFIRM__\"]').click()");
								chrome.DelayTime(1.0);
								if (chrome.CheckExistElement("[type=\"button\"]", 30.0) != 1)
								{
									break;
								}
								chrome.Click(4, "[type=\"button\"]");
								chrome.DelayTime(1.0);
								if (chrome.GetURL().StartsWith("https://www.instagram.com/challenge/"))
								{
									num = 0;
								}
								else
								{
									if (chrome.CheckExistElement("[name=\"username\"]", 30.0) != 1)
									{
										break;
									}
									text3 = chrome.GetURL();
									text = "minsoft" + MCommon.Common.CreateRandomString(3, rd) + MCommon.Common.CreateRandomString(5, rd);
									chrome.SendKeys(2, "username", text);
									MCommon.Common.DelayTime(1.0);
									text2 = ((valueInt != 0) ? cauHinh.GetValue("txtPassword") : ("Minsoft_" + MCommon.Common.CreateRandomString(6, rd)));
									chrome.SendKeys(2, "password", text2);
									chrome.DelayTime(1.0);
									chrome.Click(4, "form button[type=\"submit\"]");
									DelayThaoTacNho();
									for (int l = 0; l < 60; l++)
									{
										if (chrome.GetURL() != text3)
										{
											break;
										}
										chrome.DelayTime(1.0);
									}
									if (chrome.GetURL().StartsWith("https://www.instagram.com/challenge/"))
									{
										num = 0;
										break;
									}
									if (chrome.CheckExistElement("[type=\"button\"]", 30.0) == 1)
									{
										chrome.Click(4, "[type=\"button\"]");
										chrome.DelayTime(1.0);
										if (chrome.CheckExistElement("[href=\"/accounts/activity/\"]", 30.0) == 1)
										{
											num = 1;
										}
									}
									if (num != 1)
									{
										break;
									}
									if (valueBool)
									{
										SetStatusAccount(indexRow, statusProxy + "Đang up avatar...");
										list = Directory.GetFiles(value).ToList();
										if (lstImage.Count == 0)
										{
											lstImage = CloneList(list);
										}
										string content2 = lstImage[rd.Next(0, lstImage.Count)];
										chrome.GotoURL("https://www.instagram.com/accounts/edit/");
										DelayThaoTacNho();
										if (chrome.CheckExistElement("article>div>div:nth-child(1) form input", 30.0) == 1)
										{
											chrome.SendKeys(4, "article>div>div:nth-child(1) form input", content2);
											chrome.DelayTime(2.0);
											for (int m = 0; m < 10; m++)
											{
												if (chrome.CheckExistElement("[data-visualcompletion=\"loading-state\"]") == 0)
												{
													break;
												}
												chrome.DelayTime(1.0);
											}
										}
									}
									if (valueBool2)
									{
										SetStatusAccount(indexRow, statusProxy + "Đang chuẩn bị follow...");
										chrome.GotoURL("https://www.instagram.com/explore/people/suggested/");
										DelayThaoTacNho();
										if (chrome.CheckExistElement("[role=\"main\"]", 30.0) == 1)
										{
											for (int n = 0; n < num2; n++)
											{
												if (chrome.CheckExistElementv2("document.querySelectorAll('[type=\"button\"]')[" + n + "]", 5.0) == 1)
												{
													chrome.ScrollSmoothIfNotExistOnScreen("document.querySelectorAll('[type=\"button\"]')[" + n + "]");
													chrome.DelayTime(1.0);
													chrome.Click(4, "[type=\"button\"]", n);
													SetStatusAccount(indexRow, "Đang follow theo gợi ý: " + (n + 1) + "/" + num2 + "...");
													chrome.DelayRandom(3, 5);
												}
											}
										}
									}
									lock (lock_fileig)
									{
										File.AppendAllText("accountIG.txt", text + "|" + text2 + Environment.NewLine);
									}
								}
								break;
							case 3:
								{
									if (chrome.GetURL().StartsWith("https://www.instagram.com/challenge/"))
									{
										num = 0;
										break;
									}
									text3 = chrome.GetURL();
									text = "minsoft" + MCommon.Common.CreateRandomString(3, rd) + MCommon.Common.CreateRandomString(5, rd);
									chrome.SendKeys(2, "username", text);
									MCommon.Common.DelayTime(1.0);
									text2 = ((valueInt != 0) ? cauHinh.GetValue("txtPassword") : ("Minsoft_" + MCommon.Common.CreateRandomString(6, rd)));
									chrome.SendKeys(2, "password", text2);
									chrome.DelayTime(1.0);
									chrome.Click(4, "form button[type=\"submit\"]");
									DelayThaoTacNho();
									for (int i = 0; i < 60; i++)
									{
										if (chrome.GetURL() != text3)
										{
											break;
										}
										chrome.DelayTime(1.0);
									}
									if (chrome.GetURL().StartsWith("https://www.instagram.com/challenge/"))
									{
										num = 0;
										break;
									}
									if (chrome.CheckExistElement("[type=\"button\"]", 30.0) == 1)
									{
										chrome.Click(4, "[type=\"button\"]");
										chrome.DelayTime(1.0);
										if (chrome.CheckExistElement("[href=\"/accounts/activity/\"]", 30.0) == 1)
										{
											num = 1;
										}
									}
									if (num != 1)
									{
										break;
									}
									if (valueBool)
									{
										SetStatusAccount(indexRow, statusProxy + "Đang up avatar...");
										list = Directory.GetFiles(value).ToList();
										if (lstImage.Count == 0)
										{
											lstImage = CloneList(list);
										}
										string content = lstImage[rd.Next(0, lstImage.Count)];
										chrome.GotoURL("https://www.instagram.com/accounts/edit/");
										DelayThaoTacNho();
										if (chrome.CheckExistElement("article>div>div:nth-child(1) form input", 30.0) == 1)
										{
											chrome.SendKeys(4, "article>div>div:nth-child(1) form input", content);
											chrome.DelayTime(2.0);
											for (int j = 0; j < 10; j++)
											{
												if (chrome.CheckExistElement("[data-visualcompletion=\"loading-state\"]") == 0)
												{
													break;
												}
												chrome.DelayTime(1.0);
											}
										}
									}
									if (valueBool2)
									{
										SetStatusAccount(indexRow, statusProxy + "Đang chuẩn bị follow...");
										chrome.GotoURL("https://www.instagram.com/explore/people/suggested/");
										DelayThaoTacNho();
										if (chrome.CheckExistElement("[role=\"main\"]", 30.0) == 1)
										{
											for (int k = 0; k < num2; k++)
											{
												if (chrome.CheckExistElementv2("document.querySelectorAll('[type=\"button\"]')[" + k + "]", 5.0) == 1)
												{
													chrome.ScrollSmoothIfNotExistOnScreen("document.querySelectorAll('[type=\"button\"]')[" + k + "]");
													chrome.DelayTime(1.0);
													chrome.Click(4, "[type=\"button\"]", k);
													SetStatusAccount(indexRow, "Đang follow theo gợi ý: " + (k + 1) + "/" + num2 + "...");
													chrome.DelayRandom(3, 5);
												}
											}
										}
									}
									lock (lock_fileig)
									{
										File.AppendAllText("accountIG.txt", text + "|" + text2 + Environment.NewLine);
									}
									break;
								}
						}
						break;
				}
			}
			catch
			{
			}
			chrome.chrome.Manage().Window.Size = new Size(num3, num4);
			return num;
		}

		private int BatThongBaoDangNhap(Chrome chrome, int indexRow)
		{
			//Discarded unreachable code: IL_030a, IL_0317
			int result = 1;
			string cellAccount = GetCellAccount(indexRow, "cPassword");
			try
			{
				chrome.GotoURL("https://m.facebook.com/login_alerts/settings/");
				DelayThaoTacNho();
				for (int i = 0; i < 2; i++)
				{
					if (chrome.CheckExistElement("article [data-sigil=\"touchable\"] a", 5.0) != 1)
					{
						continue;
					}
					chrome.Click(4, "article [data-sigil=\"touchable\"] a", i);
					chrome.DelayTime(1.0);
					if (chrome.CheckExistElement("fieldset label:nth-child(1) [checked=\"1\"]", 5.0) == 1)
					{
						chrome.Click(4, "fieldset label:nth-child(1)");
						chrome.DelayTime(1.0);
						chrome.Click(4, "[type=\"submit\"]");
						chrome.DelayTime(1.0);
						if (chrome.CheckExistElement("[type=\"password\"]", 5.0) == 1)
						{
							chrome.SendKeys(4, "[type=\"password\"]", cellAccount);
							DelayThaoTacNho();
							chrome.Click(4, "[type=\"submit\"]");
							DelayThaoTacNho();
						}
					}
				}
			}
			catch
			{
			}
			return result;
		}

		private int HDChangeTenPhu(int indexRow, string statusProxy, Chrome chrome, JSON_Settings cauHinh, string tenHanhDong)
		{
			//Discarded unreachable code: IL_01bc, IL_01d0
			int result = 1;
			List<string> valueList = cauHinh.GetValueList("txtTenPhu");
			try
			{
				chrome.GotoURL("https://m.facebook.com/profile/edit/info/nicknames");
				DelayThaoTacNho();
				if (chrome.CheckExistElement("[name=\"text\"]", 10.0) == 1)
				{
					chrome.SendKeys(4, "[name=\"text\"]", valueList[rd.Next(0, valueList.Count)]);
					chrome.DelayTime(1.0);
					chrome.Click(4, "[data-sigil=\"profile-card edit-info-card\"] [data-sigil=\"touchable\"]");
					chrome.DelayTime(1.0);
					chrome.Click(4, "[type=\"submit\"]");
				}
			}
			catch
			{
				return result = 1;
			}
			return result;
		}

		private int HDChangeSoThich(int indexRow, string statusProxy, Chrome chrome, JSON_Settings cauHinh, string tenHanhDong)
		{
			//Discarded unreachable code: IL_0531, IL_0546
			int result = 0;
			int num = rd.Next(cauHinh.GetValueInt("nudSoLuongFrom"), cauHinh.GetValueInt("nudSoLuongTo") + 1);
			int valueInt = cauHinh.GetValueInt("nudDelayFrom");
			int valueInt2 = cauHinh.GetValueInt("nudDelayTo");
			List<string> valueList = cauHinh.GetValueList("txtTuKhoa");
			int num2 = 0;
			string text = "";
			try
			{
				chrome.GotoURL("https://m.facebook.com/profile/intro/edit/public/");
				DelayThaoTacNho();
				if (chrome.CheckExistElement("[data-sigil=\"context-layer-root content-pane\"]", 10.0) == 1)
				{
					chrome.ScrollSmooth("document.querySelectorAll('[role=\"main\"] [role=\"button\"]')[6]");
					chrome.DelayTime(1.0);
					chrome.Click(4, "[role=\"main\"] [role=\"button\"]", 6);
					chrome.DelayTime(1.0);
					int num3 = chrome.CheckExistElements(10.0, "[data-sigil=\"content-pane\"]>div>div>div>div:nth-child(2)>div:nth-child(3) [data-visualcompletion=\"css-img\"]", "[type=\"text\"]");
					switch (num3)
					{
						case 1:
							chrome.Click(4, "[data-sigil=\"content-pane\"]>div>div>div>div:nth-child(2)>div:nth-child(3) [data-visualcompletion=\"css-img\"]");
							chrome.DelayTime(1.0);
							break;
						case 2:
							{
								for (int i = 2; i < num2; i++)
								{
									chrome.Click(4, "[data-visualcompletion=\"css-img\"]", i);
									chrome.DelayTime(1.0);
								}
								break;
							}
					}
					if (num3 != 0)
					{
						for (int j = 0; j < num; j++)
						{
							text = valueList[rd.Next(0, valueList.Count)];
							valueList.Remove(text);
							chrome.SendKeys(4, "[type=\"text\"]", text);
							chrome.DelayRandom(3, 5);
							num2 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"content-pane\"] div:nth-child(2)>div:nth-child(2)>div>div').length").ToString());
							if (num2 > 0)
							{
								chrome.Click(4, "[data-sigil=\"content-pane\"] div:nth-child(2)>div:nth-child(2)>div>div", rd.Next(0, num2));
								chrome.DelayRandom(valueInt, valueInt2 + 1);
							}
						}
						chrome.Click(4, "[data-sigil=\"content-pane\"] [role=\"button\"]", 1);
					}
				}
			}
			catch
			{
				return result = 1;
			}
			return result;
		}

		private int HDDangBaiTheoID(int indexRow, string statusProxy, Chrome chrome, JSON_Settings cauHinh, string tenHanhDong, string idHanhDong)
		{
			//Discarded unreachable code: IL_04bb, IL_04d0, IL_0f7e, IL_0f8b, IL_0fec, IL_0ff9, IL_10e4, IL_10f0, IL_1b62, IL_1b6f, IL_1bd0, IL_1bdd, IL_1cc8, IL_1cd4, IL_2718, IL_2725, IL_2786, IL_2793, IL_287e, IL_288a, IL_298a, IL_2997
			int valueInt = cauHinh.GetValueInt("nudDelayFrom");
			int valueInt2 = cauHinh.GetValueInt("nudDelayTo");
			bool valueBool = cauHinh.GetValueBool("ckbDangBaiLenTuong");
			bool valueBool2 = cauHinh.GetValueBool("ckbDangBaiLenNhom");
			int valueInt3 = cauHinh.GetValueInt("typePost");
			List<string> valueList = cauHinh.GetValueList("lstNhomTuNhap");
			bool valueBool3 = cauHinh.GetValueBool("ckbOnlyDangNhomKhongKiemDuyet");
			bool valueBool4 = cauHinh.GetValueBool("ckbDangBaiLenPage");
			int valueInt4 = cauHinh.GetValueInt("nudCountGroupFrom");
			int valueInt5 = cauHinh.GetValueInt("nudCountGroupTo");
			int valueInt6 = cauHinh.GetValueInt("nudCountPageFrom");
			int valueInt7 = cauHinh.GetValueInt("nudCountPageTo");
			bool valueBool5 = cauHinh.GetValueBool("ckbDelete");
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			string cellAccount4 = GetCellAccount(indexRow, "cCookie");
			List<string> list = new List<string>();
			List<string> list2 = new List<string>();
			List<string> list3 = new List<string>();
			List<string> list4 = new List<string>();
			string text = "";
			int num = 0;
			try
			{
				string input = CommonChrome.RequestGet(chrome, "https://m.facebook.com/privacy/touch/composer/selector/?logging_source=composer_options", "https://m.facebook.com");
				string text2 = Regex.Match(input, "/privacy/save/\\?privacy(.*?)\"").Value.Replace("\"", "").Replace("&amp;", "&");
				if (text2 != "")
				{
					CommonChrome.RequestGet(chrome, "https://m.facebook.com" + text2, "https://m.facebook.com");
				}
				if (!valueBool5)
				{
					text = dicIdBaiVietClone[idHanhDong][rd.Next(0, dicIdBaiVietClone[idHanhDong].Count)];
					goto IL_0524;
				}
				lock (dicIdBaiVietClone)
				{
					if (dicIdBaiVietClone[idHanhDong].Count != 0)
					{
						text = dicIdBaiVietClone[idHanhDong][rd.Next(0, dicIdBaiVietClone[idHanhDong].Count)];
						dicIdBaiVietClone[idHanhDong].Remove(text);
						goto IL_0524;
					}
				}
				goto end_IL_02d2;
			IL_0524:
				SetStatusAccount(indexRow, statusProxy + "Clone bài viết " + text + "...");
				string text3 = Application.StartupPath + "\\configspost\\clone";
				if (!Directory.Exists(text3))
				{
					Directory.CreateDirectory(text3);
				}
				string text4 = text3 + "\\" + GetIdBaiViet(chrome, text3, indexRow, statusProxy, text);
				if (valueBool)
				{
					if (chrome.CheckChromeClosed())
					{
						return -2;
					}
					int num2;
					do
					{
						chrome.GotoURL("https://m.facebook.com/me");
						num2 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					}
					while (num2 == 1);
					if (new List<int> { -3, -2, -1, 2 }.Contains(num2))
					{
						return -1;
					}
					string text5 = "";
					switch (chrome.CheckExistElements(10.0, "[data-sigil=\"show_composer\"]", "#timelineBody > div > div > div > div:nth-child(2)"))
					{
						case 1:
							text5 = "[data-sigil=\"show_composer\"]";
							break;
						case 2:
							text5 = "#timelineBody > div > div > div > div:nth-child(2)";
							break;
					}
					if (text5 != "")
					{
						chrome.DelayTime(1.0);
						chrome.Click(4, text5);
						chrome.DelayTime(2.0);
						if (chrome.CheckExistElement("[data-sigil=\"touchable aaa_public\"]") == 1)
						{
							chrome.Click(4, "[data-sigil=\"touchable aaa_public\"]");
						}
						string text6 = "";
						switch (chrome.CheckExistElements(10.0, "[data-sigil=\"composer-textarea m-textarea-input\"]", "[data-sigil=\"m-textarea-input composer-textarea\"]"))
						{
							case 1:
								text6 = "[data-sigil=\"composer-textarea m-textarea-input\"]";
								break;
							case 2:
								text6 = "[data-sigil=\"m-textarea-input composer-textarea\"]";
								break;
						}
						if (text6 != "")
						{
							if (chrome.CheckExistElement("input[value=\"300645083384735\"]") != 1)
							{
								chrome.DelayTime(1.0);
								chrome.Click(4, "#m_composer_privacy_selector #m_privacy_button_text_id");
								if (chrome.CheckExistElement("input[value=\"300645083384735\"]", 5.0) == 1)
								{
									chrome.DelayTime(1.0);
									chrome.ExecuteScript("document.querySelector('input[value=\"300645083384735\"]').click();");
								}
								else
								{
									chrome.ExecuteScript("document.querySelector('[data-sigil=\"dialog-cancel-button\"]').click()");
								}
							}
							string text7 = File.ReadAllText(text4 + "//noidung.txt");
							text7 = text7.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
							text7 = text7.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
							text7 = MCommon.Common.SpinText(text7, rd);
							text7 = GetIconFacebook.ProcessString(text7, rd);
							string newValue = chrome.ExecuteScript("return document.title").ToString();
							text7 = text7.Replace("[u]", newValue);
							if (text7.Trim() != "")
							{
								for (int i = 0; i < 10; i++)
								{
									chrome.ExecuteScript("document.querySelector('" + text6 + "').value=\"" + text7 + "\"");
									chrome.DelayTime(2.0);
									if (chrome.ExecuteScript("return document.querySelector('" + text6 + "').value").ToString() != "")
									{
										break;
									}
								}
								chrome.Click(4, text6);
							}
							int num3 = 0;
							list3 = Directory.GetFiles(text4 + "\\image").ToList();
							if (list3.Count > 0)
							{
								string text8 = "";
								int count = list3.Count;
								for (int j = 0; j < count; j++)
								{
									if (list.Count == 0)
									{
										list = CloneList(list3);
									}
									text8 = list[rd.Next(0, list.Count)];
									list.Remove(text8);
									chrome.SendKeys(1, "photo_input", text8);
									num3++;
									MCommon.Common.DelayTime(1.0);
								}
							}
							try
							{
								for (int k = 0; k < 120; k++)
								{
									if (Convert.ToInt32(chrome.ExecuteScript("return (document.querySelectorAll('#structured_composer_form img').length+'')").ToString()) == num3)
									{
										break;
									}
									MCommon.Common.DelayTime(1.0);
								}
							}
							catch
							{
							}
							string text9;
							do
							{
								chrome.DelayTime(5.0);
								text9 = "";
								try
								{
									text9 = chrome.ExecuteScript("return (document.querySelector('[data-sigil=\"touchable submit_composer\"]').value)").ToString();
								}
								catch
								{
								}
							}
							while (text9 == "");
							if (chrome.Click(4, "#composer-main-view-id > div > div > div:nth-child(3) > div button") == 1)
							{
								for (int l = 0; l < 300; l++)
								{
									MCommon.Common.DelayTime(1.0);
									try
									{
										if (!Convert.ToBoolean(chrome.ExecuteScript("var x='false'; if(document.querySelector('[data-sigil=\"inprogress\"]')!=null) x=(document.querySelector('[data-sigil=\"inprogress\"]').getAttribute('style')=='')+''; return x")))
										{
											break;
										}
									}
									catch
									{
										break;
									}
								}
								if (CommonChrome.CheckFacebookBlocked(chrome))
								{
									return -4;
								}
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đã đăng tường xong!"));
								chrome.DelayRandom(valueInt, valueInt2);
							}
						}
					}
				}
				if (valueBool2)
				{
					num = 0;
					if (chrome.CheckChromeClosed())
					{
						return -2;
					}
					SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang lấy danh sách nhóm..."));
					List<string> listGroup = CommonChrome.GetListGroup(chrome);
					list4 = ((!valueBool3) ? listGroup.Select((string x) => x).ToList() : GetGroupKhongKiemDuyetv2(chrome, listGroup));
					int num4 = rd.Next(valueInt4, valueInt5 + 1);
					string text10 = "";
					if (list4.Count > 0)
					{
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang đăng nhóm") + "...");
						for (int m = 0; m < num4; m++)
						{
							if (list4.Count == 0)
							{
								break;
							}
							text10 = list4[0];
							list4.Remove(text10);
							text10 = text10.Split('|')[0];
							int num5;
							do
							{
								chrome.GotoURL("https://m.facebook.com/" + text10);
								num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							}
							while (num5 == 1);
							if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
							{
								return -1;
							}
							string text11 = "";
							switch (chrome.CheckExistElements(20.0, "#MRoot>div>div:nth-child(3) [role=\"button\"]", "[data-sigil=\"show_composer touchable\"]", "#MRoot > div > div> div > div > div:nth-child(2)", "#root > div > div > div > div > div:nth-child(2) > div"))
							{
								case 1:
									text11 = "#MRoot>div>div:nth-child(3) [role=\"button\"]";
									break;
								case 2:
									text11 = "[data-sigil=\"show_composer touchable\"]";
									break;
								case 3:
									text11 = "#MRoot > div > div> div > div > div:nth-child(2)";
									break;
								case 4:
									text11 = "#root > div > div > div > div > div:nth-child(2) > div";
									break;
							}
							if (!(text11 != ""))
							{
								continue;
							}
							chrome.DelayTime(1.0);
							chrome.Click(4, text11);
							chrome.DelayTime(2.0);
							string text12 = "";
							switch (chrome.CheckExistElements(10.0, "[data-sigil=\"composer-textarea m-textarea-input\"]", "[data-sigil=\"m-textarea-input composer-textarea\"]"))
							{
								case 1:
									text12 = "[data-sigil=\"composer-textarea m-textarea-input\"]";
									break;
								case 2:
									text12 = "[data-sigil=\"m-textarea-input composer-textarea\"]";
									break;
							}
							if (!(text12 != ""))
							{
								continue;
							}
							string text13 = File.ReadAllText(text4 + "//noidung.txt");
							text13 = text13.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
							text13 = text13.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
							text13 = MCommon.Common.SpinText(text13, rd);
							text13 = GetIconFacebook.ProcessString(text13, rd);
							string newValue2 = chrome.ExecuteScript("return document.title").ToString();
							text13 = text13.Replace("[u]", newValue2);
							if (text13.Trim() != "")
							{
								for (int n = 0; n < 10; n++)
								{
									chrome.ExecuteScript("document.querySelector('" + text12 + "').value=\"" + text13 + "\"");
									chrome.DelayTime(2.0);
									if (chrome.ExecuteScript("return document.querySelector('" + text12 + "').value").ToString() != "")
									{
										break;
									}
								}
								chrome.Click(4, text12);
							}
							int num6 = 0;
							list3 = Directory.GetFiles(text4 + "\\image").ToList();
							if (list3.Count > 0)
							{
								string text14 = "";
								int count2 = list3.Count;
								for (int num7 = 0; num7 < count2; num7++)
								{
									if (list.Count == 0)
									{
										list = CloneList(list3);
									}
									text14 = list[rd.Next(0, list.Count)];
									list.Remove(text14);
									chrome.SendKeys(1, "photo_input", text14);
									num6++;
									MCommon.Common.DelayTime(1.0);
								}
							}
							try
							{
								for (int num8 = 0; num8 < 120; num8++)
								{
									if (Convert.ToInt32(chrome.ExecuteScript("return (document.querySelectorAll('#structured_composer_form img').length+'')").ToString()) >= num6)
									{
										break;
									}
									MCommon.Common.DelayTime(1.0);
								}
							}
							catch
							{
							}
							string text15;
							do
							{
								chrome.DelayTime(5.0);
								text15 = "";
								try
								{
									text15 = chrome.ExecuteScript("return (document.querySelector('[data-sigil=\"touchable submit_composer\"]').value)").ToString();
								}
								catch
								{
								}
							}
							while (text15 == "");
							if (chrome.Click(4, "#composer-main-view-id > div > div > div:nth-child(3) > div button") != 1)
							{
								continue;
							}
							for (int num9 = 0; num9 < 300; num9++)
							{
								MCommon.Common.DelayTime(1.0);
								try
								{
									if (!Convert.ToBoolean(chrome.ExecuteScript("var x='false'; if(document.querySelector('[data-sigil=\"inprogress\"]')!=null) x=(document.querySelector('[data-sigil=\"inprogress\"]').getAttribute('style')=='')+''; return x")))
									{
										break;
									}
								}
								catch
								{
									break;
								}
							}
							if (!CommonChrome.CheckFacebookBlocked(chrome))
							{
								num++;
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang đăng nhóm") + $" ({num}/{num4})...");
								chrome.DelayRandom(valueInt, valueInt2);
								continue;
							}
							return -4;
						}
					}
					if (valueBool4)
					{
						num = 0;
						if (chrome.CheckChromeClosed())
						{
							return -2;
						}
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang lấy danh sách page..."));
						List<string> listPage = CommonChrome.GetListPage(chrome);
						int num10 = rd.Next(valueInt6, valueInt7 + 1);
						string text16 = "";
						if (listPage.Count > 0)
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang đăng page") + "...");
							for (int num11 = 0; num11 < num10; num11++)
							{
								if (listPage.Count == 0)
								{
									break;
								}
								text16 = listPage[rd.Next(0, listPage.Count)];
								listPage.Remove(text16);
								int num12;
								do
								{
									chrome.GotoURL("https://m.facebook.com/" + text16 + "/posts");
									num12 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
								}
								while (num12 == 1);
								if (new List<int> { -3, -2, -1, 2 }.Contains(num12))
								{
									return -1;
								}
								string text17 = "";
								switch (chrome.CheckExistElements(20.0, "[data-sigil=\"write_post_admin show_composer page_post_button\"]", "#rootcontainer>div>div>div>div:nth-child(3)>div>div>div>div>span", "body>div>div>div:nth-child(4)>div>div:nth-child(1)>div>div:nth-child(4)>div>div:nth-child(2)>div:nth-child(1)>div>div>div:nth-child(1)"))
								{
									case 1:
										text17 = "[data-sigil=\"write_post_admin show_composer page_post_button\"]";
										break;
									case 2:
										text17 = "#rootcontainer>div>div>div>div:nth-child(3)>div>div>div>div>span";
										break;
									case 3:
										text17 = "body>div>div>div:nth-child(4)>div>div:nth-child(1)>div>div:nth-child(4)>div>div:nth-child(2)>div:nth-child(1)>div>div>div:nth-child(1)";
										break;
								}
								if (!(text17 != ""))
								{
									continue;
								}
								chrome.DelayTime(1.0);
								chrome.Click(4, text17);
								chrome.DelayTime(2.0);
								string text18 = "";
								switch (chrome.CheckExistElements(10.0, "[data-sigil=\"composer-textarea m-textarea-input\"]", "[data-sigil=\"m-textarea-input composer-textarea\"]"))
								{
									case 1:
										text18 = "[data-sigil=\"composer-textarea m-textarea-input\"]";
										break;
									case 2:
										text18 = "[data-sigil=\"m-textarea-input composer-textarea\"]";
										break;
								}
								if (!(text18 != ""))
								{
									continue;
								}
								string text19 = File.ReadAllText(text4 + "//noidung.txt");
								text19 = text19.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
								text19 = text19.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
								text19 = MCommon.Common.SpinText(text19, rd);
								text19 = GetIconFacebook.ProcessString(text19, rd);
								string newValue3 = chrome.ExecuteScript("return document.title.split('-')[0].trim()").ToString();
								text19 = text19.Replace("[u]", newValue3);
								if (text19.Trim() != "")
								{
									for (int num13 = 0; num13 < 10; num13++)
									{
										chrome.ExecuteScript("document.querySelector('" + text18 + "').value=\"" + text19 + "\"");
										chrome.DelayTime(2.0);
										if (chrome.ExecuteScript("return document.querySelector('" + text18 + "').value").ToString() != "")
										{
											break;
										}
									}
									chrome.Click(4, text18);
								}
								int num14 = 0;
								list3 = Directory.GetFiles(text4 + "\\image").ToList();
								if (list3.Count > 0)
								{
									string text20 = "";
									int count3 = list3.Count;
									for (int num15 = 0; num15 < count3; num15++)
									{
										if (list.Count == 0)
										{
											list = CloneList(list3);
										}
										text20 = list[rd.Next(0, list.Count)];
										list.Remove(text20);
										chrome.SendKeys(1, "photo_input", text20);
										num14++;
										MCommon.Common.DelayTime(1.0);
									}
								}
								try
								{
									for (int num16 = 0; num16 < 120; num16++)
									{
										if (Convert.ToInt32(chrome.ExecuteScript("return (document.querySelectorAll('#structured_composer_form img').length+'')").ToString()) >= num14)
										{
											break;
										}
										MCommon.Common.DelayTime(1.0);
									}
								}
								catch
								{
								}
								string text21;
								do
								{
									chrome.DelayTime(5.0);
									text21 = "";
									try
									{
										text21 = chrome.ExecuteScript("return (document.querySelector('[data-sigil=\"touchable submit_composer\"]').value)").ToString();
									}
									catch
									{
									}
								}
								while (text21 == "");
								if (chrome.Click(4, "#composer-main-view-id > div > div > div:nth-child(3) > div button") != 1)
								{
									continue;
								}
								for (int num17 = 0; num17 < 300; num17++)
								{
									MCommon.Common.DelayTime(1.0);
									try
									{
										if (!Convert.ToBoolean(chrome.ExecuteScript("var x='false'; if(document.querySelector('[data-sigil=\"inprogress\"]')!=null) x=(document.querySelector('[data-sigil=\"inprogress\"]').getAttribute('style')=='')+''; return x")))
										{
											break;
										}
									}
									catch
									{
										break;
									}
								}
								string pageSource = chrome.GetPageSource();
								if (!CommonChrome.CheckFacebookBlocked(chrome))
								{
									num++;
									SetStatusAccount(indexRow, statusProxy + string.Format(Language.GetValue("Đang đăng page") + " ({0}/{1})...", num, num10));
									chrome.DelayRandom(valueInt, valueInt2);
									continue;
								}
								return -4;
							}
						}
					}
				}
			end_IL_02d2:;
			}
			catch
			{
			}
			return 0;
		}

		public string GetIdBaiViet(Chrome chrome, string path, int indexRow, string statusProxy, string uid_get)
		{
			//Discarded unreachable code: IL_0257, IL_0264
			string text = "";
			List<string> list = new List<string>();
			try
			{
				string url = "https://m.facebook.com/" + uid_get;
				chrome.GotoURL(url);
				SetStatusAccount(indexRow, statusProxy + "Clone bài viết của " + uid_get + "...");
				string link = "";
				string text2 = "";
				string text3 = "";
				text = uid_get;
				if (chrome.CheckExistElement(".story_body_container>div:nth-child(2) p", 15.0) == 1)
				{
					text2 = chrome.ExecuteScript("return document.querySelector('.story_body_container>div:nth-child(2) p').innerText").ToString();
				}
				if (!Directory.Exists(path + "\\" + text))
				{
					list = Getlistphoto(chrome, text);
					text3 = GetLinkVideo(chrome, text);
					if (list.Count != 0 || !(text2.Trim() == "") || !(text3.Trim() == ""))
					{
						Directory.CreateDirectory(path + "\\" + text);
						AddData(path, text, list, text3, text2, link);
					}
				}
			}
			catch
			{
			}
			return text;
		}

		private void AddData(string linkPath, string id_post, List<string> lstPhoto, string video = "", string noidung = "", string link = "")
		{
			//Discarded unreachable code: IL_021c, IL_0252, IL_025d, IL_0272, IL_0279, IL_028e, IL_0295, IL_02aa, IL_034d, IL_0362, IL_03f8, IL_0405
			try
			{
				if (!Directory.Exists(linkPath + "\\" + id_post + "\\image"))
				{
					Directory.CreateDirectory(linkPath + "\\" + id_post + "\\image");
				}
				if (!Directory.Exists(linkPath + "\\" + id_post + "\\video"))
				{
					Directory.CreateDirectory(linkPath + "\\" + id_post + "\\video");
				}
				if (lstPhoto.Count > 0)
				{
					for (int i = 0; i < lstPhoto.Count; i++)
					{
						string address = lstPhoto[i];
						using (WebClient webClient = new WebClient())
						{
							byte[] buffer = webClient.DownloadData(address);
							using (MemoryStream stream = new MemoryStream(buffer))
							{
								using (Image image = Image.FromStream(stream))
								{
									string text = linkPath + "\\" + id_post + "\\image\\" + i;
									try
									{
										image.Save(text + ".png", ImageFormat.Png);
									}
									catch
									{
										image.Save(text + ".jpg", ImageFormat.Jpeg);
									}
								}
							}
						}
					}
				}
				if (video != "")
				{
					using (WebClient webClient2 = new WebClient())
					{
						webClient2.DownloadFile(video, linkPath + "\\" + id_post + "\\video\\video.mp4");
					}
				}
				File.WriteAllText(linkPath + "\\" + id_post + "\\noidung.txt", noidung);
				File.WriteAllText(linkPath + "\\" + id_post + "\\link.txt", link);
			}
			catch
			{
			}
		}

		private List<string> Getlistphoto(Chrome chrome, string id_post)
		{
			//Discarded unreachable code: IL_0140, IL_014d
			List<string> list = new List<string>();
			try
			{
				string value = Regex.Match(chrome.GetCookieFromChrome(), "c_user=(.*?);").Groups[1].Value;
				string url = "https://m.facebook.com/" + value + "/posts/pcb." + id_post;
				string input = CommonChrome.RequestGet(chrome, url, "https://m.facebook.com");
				MatchCollection matchCollection = Regex.Matches(input, "full_width_image:{uri:\"(.*?)\"");
				if (matchCollection.Count > 0)
				{
					for (int i = 0; i < matchCollection.Count; i++)
					{
						string value2 = matchCollection[i].Groups[1].Value;
						list.Add(value2);
					}
				}
			}
			catch
			{
			}
			return list;
		}

		public string GetLinkVideo(Chrome chrome, string id_post)
		{
			//Discarded unreachable code: IL_00f6, IL_0103
			string result = "";
			try
			{
				string value = Regex.Match(chrome.GetCookieFromChrome(), "c_user=(.*?);").Groups[1].Value;
				string url = "https://m.facebook.com/" + value + "/posts/pcb." + id_post;
				string input = CommonChrome.RequestGet(chrome, url, "https://m.facebook.com");
				result = Regex.Match(input, "playable_url_hd:\"(.*?)\"").Groups[1].Value;
			}
			catch
			{
			}
			return result;
		}

		private int HDHuyLikePage(int indexRow, string statusProxy, Chrome chrome, int soLuongFrom, int soLuongTo, int delayFrom, int delayTo, Random rd, string tenHanhDong)
		{
			//Discarded unreachable code: IL_02f7, IL_0304
			int num = 0;
			int num2 = rd.Next(soLuongFrom, soLuongTo + 1);
			try
			{
				chrome.GotoURL("https://m.facebook.com/pages/launchpoint/liked_pages/?ref=bookmarks&from=pages_nav_home");
				DelayThaoTacNho();
				if (chrome.CheckExistElement("[data-sigil*=\"flyout-action-trigger\"]", 10.0) == 1)
				{
					for (int i = 0; i < num2; i++)
					{
						chrome.ScrollSmooth("document.querySelectorAll('[data-sigil*=\"flyout-action-trigger\"]')[" + i + "]");
						chrome.DelayTime(1.0);
						if (chrome.Click(4, "[data-sigil*=\"flyout-action-trigger\"]", i) != 1)
						{
							break;
						}
						if (chrome.CheckExistElement("[data-ajaxify-href*=\"/a/profile.php?unfan\"]", 15.0) == 1)
						{
							chrome.Click(4, "[data-ajaxify-href*=\"/a/profile.php?unfan\"]", i);
							chrome.DelayTime(1.0);
							num++;
							if (num == num2)
							{
								break;
							}
							chrome.Click(4, "[data-sigil*=\"flyout-action-trigger\"]", i);
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
							chrome.DelayRandom(delayFrom, delayTo + 1);
						}
					}
				}
			}
			catch (Exception)
			{
			}
			return num;
		}

		private int HDPhanHoiBinhLuan(int indexRow, string statusProxy, Chrome chrome, JSON_Settings cauHinh, string tenHanhDong, string id_HanhDong)
		{
			//Discarded unreachable code: IL_03e5, IL_03fa, IL_0c25, IL_0c33
			int result = 0;
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int valueInt = cauHinh.GetValueInt("nudSoLuongFrom");
			int valueInt2 = cauHinh.GetValueInt("nudSoLuongTo");
			int valueInt3 = cauHinh.GetValueInt("nudDelayFrom");
			int valueInt4 = cauHinh.GetValueInt("nudDelayTo");
			bool valueBool = cauHinh.GetValueBool("ckbGanThe");
			bool valueBool2 = cauHinh.GetValueBool("ckbCommentImage");
			string value = cauHinh.GetValue("txtPath");
			bool valueBool3 = cauHinh.GetValueBool("ckbCommentText");
			List<string> valueList = cauHinh.GetValueList("txtComment");
			List<string> list = new List<string>();
			List<string> valueList2 = cauHinh.GetValueList("txtUid");
			List<string> lstFrom = new List<string>();
			List<string> list2 = new List<string>();
			string text = "";
			string text2 = "";
			int num = rd.Next(valueInt, valueInt2 + 1);
			int num2 = chrome.chrome.Manage().Window.Size.Width;
			int num3 = chrome.chrome.Manage().Window.Size.Height;
			chrome.chrome.Manage().Window.Size = new Size(500, 700);
			try
			{
				if (valueBool2)
				{
					lstFrom = Directory.GetFiles(value).ToList();
				}
				string text3 = "";
				for (int num4 = 0; num4 < num; num4++)
				{
					lock (dicUidPhanHoiComment)
					{
						if (dicUidPhanHoiComment[id_HanhDong].Count == 0)
						{
							break;
						}
						text3 = dicUidPhanHoiComment[id_HanhDong][rd.Next(0, dicUidPhanHoiComment[id_HanhDong].Count)];
						dicUidPhanHoiComment[id_HanhDong].Remove(text3);
						goto IL_03fb;
					}
				IL_03fb:
					int num5;
					do
					{
						num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					}
					while (num5 == 1);
					if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
					{
						return -1;
					}
					if (text3.Contains('_'))
					{
						if (text3.Split('_').Length == 3)
						{
							chrome.GotoURL("https://www.facebook.com/" + text3.Split('_')[0] + "/posts/" + text3.Split('_')[1] + "/?comment_id=" + text3.Split('_')[2]);
						}
					}
					else
					{
						chrome.GotoURL("https://www.facebook.com/" + text3);
					}
					DelayThaoTacNho();
					ClosePopup(chrome);
					if (chrome.CheckExistElement("[role=\"article\"] [role=\"article\"]", 20.0) == 1)
					{
						int num9;
						string text4;
						while (true)
						{
							IWebElement webElement = chrome.chrome.FindElementByCssSelector("a[href*=\"" + text3.Split('_')[text3.Split('_').Length - 1] + "\"]");
							IWebElement webElement2 = (IWebElement)chrome.chrome.ExecuteScript("return arguments[0].parentNode.parentNode.childNodes[1].querySelector('[role=\"button\"]');", webElement);
							webElement2.Click();
							int num6 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[role=\"article\"] [data-visualcompletion=\"ignore-dynamic\"]>div>div:nth-child(2)>ul>li>div:last-child form [role=\"textbox\"] [data-contents] [data-editor]').length").ToString());
							if (num6 == 0)
							{
								continue;
							}
							if (valueBool2 && chrome.CheckExistElement("[role=\"article\"] [data-visualcompletion=\"ignore-dynamic\"]>div>div:nth-child(2)>ul>li>div:last-child form [type=\"file\"]", 5.0) == 1)
							{
								int num7 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[role=\"article\"] [data-visualcompletion=\"ignore-dynamic\"]>div>div:nth-child(2)>ul>li>div:last-child form [role=\"textbox\"] [data-contents] [data-editor]').length").ToString());
								if (num7 < num6)
								{
									continue;
								}
								if (list2.Count == 0)
								{
									list2 = CloneList(lstFrom);
								}
								text = list2[rd.Next(0, list2.Count)];
								list2.Remove(text);
								for (int num8 = num7; num8 >= 0; num8--)
								{
									if (chrome.SendKeys(4, "[role=\"article\"] [data-visualcompletion=\"ignore-dynamic\"]>div>div:nth-child(2)>ul>li>div:last-child form [type=\"file\"]", num8, text) == 1)
									{
										chrome.DelayRandom(2, 3);
										break;
									}
								}
							}
							num9 = 0;
							text4 = "[role=\"article\"] [data-visualcompletion=\"ignore-dynamic\"]>div>div:nth-child(2)>ul>li>div:last-child form [role=\"textbox\"] [data-contents] [data-editor]";
							if (!valueBool3)
							{
								break;
							}
							if (list.Count == 0)
							{
								list = CloneList(valueList);
							}
							text2 = list[rd.Next(0, list.Count)];
							list.Remove(text2);
							text2 = MCommon.Common.SpinText(text2, rd);
							text2 = GetIconFacebook.ProcessString(text2, rd);
							int num10 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[role=\"article\"] [data-visualcompletion=\"ignore-dynamic\"]>div>div:nth-child(2)>ul>li>div:last-child form [role=\"textbox\"] [data-contents] [data-editor]').length").ToString());
							if (num10 < num6)
							{
								continue;
							}
							for (num9 = num10; num9 >= 0; num9--)
							{
								if (chrome.Click(4, text4, num9) == 1)
								{
									chrome.ScrollSmooth("document.querySelectorAll('" + text4 + "')[" + num9 + "]");
									break;
								}
							}
							chrome.DelayTime(1.0);
							chrome.SendKeyEnd(4, text4, num9);
							chrome.DelayTime(1.0);
							if (chrome.SendKeys(4, text4, num9, text2, isClick: false, 0.0) != 0)
							{
								break;
							}
						}
						chrome.DelayTime(1.0);
						chrome.SendEnter(4, text4, num9);
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num4 + 1}/{num})...");
						chrome.DelayRandom(valueInt3, valueInt4);
					}
				}
			}
			catch (Exception)
			{
			}
			chrome.chrome.Manage().Window.Size = new Size(num2, num3);
			return result;
		}

		public int HDMoiLikePage(int indexRow, string statusProxy, Chrome chrome, string cookie, string idPage, int soLuongFrom, int soLuongTo, int delayFrom, int delayTo, string proxy, int typeProxy, Random rd, string tenHanhDong)
		{
			//Discarded unreachable code: IL_032b, IL_0338
			int num = 0;
			int num2 = rd.Next(soLuongFrom, soLuongTo + 1);
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			try
			{
				while (true)
				{
				IL_009c:
					chrome.GotoURL("https://m.facebook.com/send_page_invite/?pageid=" + idPage + "&reference=msite_friends_inviter_card");
					DelayThaoTacNho();
					if (chrome.CheckExistElement("#m_invitee_list", 20.0) != 1)
					{
						break;
					}
					while (num < num2)
					{
						int num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num3 == 1)
						{
							goto IL_009c;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num3))
						{
							return -1;
						}
						if (chrome.ScrollSmooth("document.querySelectorAll('button[type=\"submit\"]')[" + num + "]") == 1)
						{
							chrome.DelayTime(1.0);
							if (chrome.Click(4, "[type=\"submit\"]", num) != 1)
							{
								break;
							}
							num++;
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
							if (num == num2)
							{
								break;
							}
							chrome.DelayRandom(delayFrom, delayTo);
						}
					}
					break;
				}
			}
			catch
			{
			}
			return num;
		}

		public int HDXemWatchv2(int indexRow, string statusProxy, Chrome chrome, int nudSoLuongFrom, int nudSoLuongTo, int nudTimeWatchFrom, int nudTimeWatchTo, bool isLike, int countLikeFrom, int countLikeTo, bool isShareWall, int countShareFrom, int countShareTo, bool isComment, List<string> lstComment, int countCommentFrom, int countCommentTo, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0b88, IL_0b95
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			int num5 = 0;
			int num6 = 0;
			int num7 = 0;
			if (isLike)
			{
				num5 = rd.Next(countLikeFrom, countLikeTo + 1);
			}
			lstComment = MCommon.Common.RemoveEmptyItems(lstComment);
			List<string> list = CloneList(lstComment);
			string text = "";
			if (isComment)
			{
				num6 = rd.Next(countCommentFrom, countCommentTo + 1);
			}
			if (isShareWall)
			{
				num7 = rd.Next(countShareFrom, countShareTo + 1);
			}
			int num8 = chrome.chrome.Manage().Window.Size.Width;
			int num9 = chrome.chrome.Manage().Window.Size.Height;
			chrome.chrome.Manage().Window.Size = new Size(500, 700);
			int num10 = 0;
			try
			{
				int num11 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
				while (true)
				{
				IL_0206:
					chrome.GotoURL("https://www.facebook.com/watch");
					chrome.DelayTime(1.0);
					ClosePopup(chrome);
					if (chrome.CheckExistElement("#watch_feed video", 10.0) != 1)
					{
						break;
					}
					while (num < num11 && !isStop)
					{
						int num12 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num12 == 1)
						{
							goto IL_0206;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num12))
						{
							return -1;
						}
						if (chrome.CheckExistElementv2("document.querySelectorAll('#watch_feed [role=\"presentation\"]')[" + num10 + "]") != 1)
						{
							break;
						}
						chrome.ScrollSmooth("document.querySelectorAll('#watch_feed [role=\"presentation\"]')[" + num10 + "]");
						if (rd.Next(1, 3) == 1)
						{
							chrome.DelayRandom(nudTimeWatchFrom, nudTimeWatchTo + 1);
							if (isLike && num2 < num5 && rd.Next(1, 100) % 2 == 0 && chrome.ExecuteScript("return document.querySelectorAll('[data-pagelet=\"MainFeed\"]>div>div>div>div:nth-child(" + (num10 + 1) + ")>div>div>div>div>div>div:nth-child(3) [role=\"button\"]>div')[0].getAttribute('style')+''").ToString() == "null")
							{
								chrome.ScrollSmooth("[data-pagelet=\"MainFeed\"]>div>div>div>div:nth-child(" + (num10 + 1) + ")>div>div>div>div>div>div:nth-child(3) [role=\"button\"]>div')[0]");
								DelayThaoTacNho();
								chrome.ExecuteScript("document.querySelectorAll('[data-pagelet=\"MainFeed\"]>div>div>div>div:nth-child(" + (num10 + 1) + ")>div>div>div>div>div>div:nth-child(3) [role=\"button\"]')[0].click()");
								DelayThaoTacNho();
								num2++;
							}
							if (isShareWall && num4 < num7 && rd.Next(1, 100) % 2 == 0 && chrome.CheckExistElementv2("document.querySelectorAll('[data-pagelet=\"MainFeed\"]>div>div>div>div:nth-child(" + (num10 + 1) + ")>div>div>div>div>div>div:nth-child(3)  span:nth-child(2)~div')") == 1)
							{
								chrome.Click(4, "[data-pagelet=\"MainFeed\"]>div>div>div>div:nth-child(" + (num10 + 1) + ")>div>div>div>div>div>div:nth-child(3)  span:nth-child(2)~div");
								DelayThaoTacNho();
								int index = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[role=\"dialog\"]').length")) - 1;
								chrome.Click(4, "[role=\"dialog\"]", index, 4, "[role=\"button\"]");
								num4++;
								DelayThaoTacNho();
							}
							if (isComment && num3 < num6 && rd.Next(1, 100) % 2 == 0 && chrome.CheckExistElementv2("document.querySelectorAll('[data-pagelet=\"MainFeed\"]>div>div>div>div:nth-child(" + (num10 + 1) + ")>div>div>div>div>div>div:nth-child(3)  span:nth-child(2)>[role=\"button\"]')") == 1)
							{
								chrome.Click(4, "[data-pagelet=\"MainFeed\"]>div>div>div>div:nth-child(" + (num10 + 1) + ")>div>div>div>div>div>div:nth-child(3)  span:nth-child(2)>[role=\"button\"]");
								DelayThaoTacNho();
								if (chrome.CheckExistElement("[role=\"textbox\"]", 10.0) == 1)
								{
									if (list.Count == 0)
									{
										list = CloneList(lstComment);
									}
									text = list[rd.Next(0, list.Count)];
									list.Remove(text);
									text = MCommon.Common.SpinText(text, rd);
									string nameFromPost = CommonChrome.GetNameFromPost(chrome);
									text = text.Replace("[u]", nameFromPost);
									chrome.SendKeys(4, "[role=\"textbox\"]", num3, text + " ");
									DelayThaoTacNho();
									chrome.SendEnter(4, "[role=\"textbox\"]");
									DelayThaoTacNho();
									if (chrome.CheckExistElement("[aria-label=\"OK\"]") == 1)
									{
										chrome.Click(4, "[aria-label=\"OK\"]");
										DelayThaoTacNho();
									}
									if (CommonChrome.CheckFacebookBlocked(chrome))
									{
										return -4;
									}
									num3++;
								}
							}
							num++;
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num11})...");
							DelayThaoTacNho();
						}
						num10++;
					}
					break;
				}
			}
			catch
			{
			}
			chrome.chrome.Manage().Window.Size = new Size(num8, num9);
			return num;
		}

		public int HDXemStoryv2(int indexRow, string statusProxy, Chrome chrome, int nudSoLuongFrom, int nudSoLuongTo, int nudDelayFrom, int nudDelayTo, bool ckbInteract, string typeReaction, bool ckbComment, List<string> lstComment, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_067b, IL_0688
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			string text = "";
			int num2 = chrome.chrome.Manage().Window.Size.Width;
			int num3 = chrome.chrome.Manage().Window.Size.Height;
			chrome.chrome.Manage().Window.Size = new Size(500, 700);
			try
			{
				int num4;
				do
				{
					chrome.GotoURL("https://www.facebook.com/stories");
					chrome.DelayTime(1.0);
					ClosePopup(chrome);
					num4 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
				}
				while (num4 == 1);
				if (new List<int> { -3, -2, -1, 2 }.Contains(num4))
				{
					return -1;
				}
				int num5 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
				int num6 = 0;
				string text2 = "0";
				List<string> list = new List<string>();
				list = CloneList(lstComment);
				if (chrome.CheckExistElement("[data-pagelet=\"StoriesNavPane\"]", 10.0) == 1)
				{
					num6 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-id] [role=\"button\"]').length").ToString());
					if (num6 > 0)
					{
						chrome.Click(4, "[data-id] [role=\"button\"]");
						DelayThaoTacNho();
						while (num < num5 && !isStop && chrome.CheckExistElement("[data-pagelet=\"StoriesContentPane\"]") == 1)
						{
							chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
							if (ckbInteract && chrome.CheckExistElement("[data-pagelet=\"StoriesContentPane\"] [role=\"toolbar\"] [role=\"button\"]") == 1)
							{
								text2 = typeReaction[rd.Next(0, typeReaction.Length)].ToString();
								chrome.Click(4, "[role=\"toolbar\"] [role=\"button\"]", Convert.ToInt32(text2));
								DelayThaoTacNho();
							}
							if (ckbComment && chrome.CheckExistElement("[data-pagelet=\"StoriesContentPane\"] [role=\"textbox\"]") == 1)
							{
								if (list.Count == 0)
								{
									list = CloneList(lstComment);
								}
								text = list[rd.Next(0, list.Count)];
								list.Remove(text);
								text = MCommon.Common.SpinText(text, rd);
								text = text.Replace("[u]", CommonChrome.GetNameFromStory(chrome));
								DelayThaoTacNho();
								if (chrome.SendKeys(4, "[role=\"textbox\"]", text) == 1)
								{
									DelayThaoTacNho();
									chrome.SendEnter(4, "[role=\"textbox\"]");
								}
							}
							num++;
							DelayThaoTacNho();
							if (chrome.Click(4, "[data-pagelet=\"StoriesContentPane\"]>div>div>div>div>div:nth-child(3)>[role=\"button\"]") != 1)
							{
								break;
							}
						}
					}
				}
			}
			catch
			{
			}
			chrome.chrome.Manage().Window.Size = new Size(num2, num3);
			return num;
		}

		public int HDKetBanGoiYv2(int indexRow, string statusProxy, Chrome chrome, int soLuongFrom, int soLuongTo, int delayFrom, int delayTo, bool ckbChiKetBanTenCoDau, bool ckbOnlyAddFriendWithMutualFriends, int maxError, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_067b, IL_068e
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = -1;
			int num3 = 0;
			int num4 = chrome.chrome.Manage().Window.Size.Width;
			int num5 = chrome.chrome.Manage().Window.Size.Height;
			chrome.chrome.Manage().Window.Size = new Size(500, 700);
			try
			{
				string input = CommonChrome.RequestGet(chrome, "https://m.facebook.com/help", "https://m.facebook.com");
				string value = Regex.Match(input, "fb_dtsg\" value=\"(.*?)\"").Groups[1].Value;
				string data = "loc=vi_VN&ref=m_touch_locale_selector&should_redirect=false&fb_dtsg=" + value + "&jazoest=22683&lsd=&__dyn=&__csr=&__req=m&__a=&__user=" + cellAccount;
				input = CommonChrome.RequestPost(chrome, "https://m.facebook.com/intl/ajax/save_locale", data, "https://m.facebook.com");
				int num6 = rd.Next(soLuongFrom, soLuongTo + 1);
				while (true)
				{
				IL_020b:
					chrome.GotoURL("https://www.facebook.com/friends/suggestions");
					chrome.DelayTime(2.0);
					ClosePopup(chrome);
					while (num < num6 && !isStop)
					{
						int num7 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num7 == 1)
						{
							goto IL_020b;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num7))
						{
							return -1;
						}
						if (chrome.CheckExistElement("[data-visualcompletion=\"ignore-dynamic\"]>a", 10.0) != 1)
						{
							continue;
						}
						num2++;
						if (Convert.ToBoolean(chrome.ExecuteScript("return document.querySelectorAll('[data-visualcompletion=\"ignore-dynamic\"]>a [aria-label=\"Thêm bạn bè\"]')[" + num2 + "]==null?'false':'true'+''")))
						{
							chrome.ScrollSmoothIfNotExistOnScreen("document.querySelectorAll('[data-visualcompletion=\"ignore-dynamic\"]>a [aria-label=\"Thêm bạn bè\"]')[" + num2 + "]");
							chrome.DelayTime(1.0);
							bool flag = true;
							if (ckbChiKetBanTenCoDau)
							{
								string ten = chrome.ExecuteScript("return document.querySelectorAll('[data-visualcompletion=\"ignore-dynamic\"]>a')[" + num2 + "].querySelector('span>span>span').innerText").ToString();
								if (!MCommon.Common.IsVNName(ten))
								{
									flag = false;
								}
							}
							if (flag && ckbOnlyAddFriendWithMutualFriends)
							{
								string pValue = chrome.ExecuteScript("return document.querySelectorAll('[data-visualcompletion=\"ignore-dynamic\"]>a')[" + num2 + "].querySelector('[aria-labelledby*=\"bạn chung\"]').innerText+''").ToString();
								flag = MCommon.Common.IsContainNumber(pValue);
							}
							if (flag)
							{
								chrome.Click(4, "[data-visualcompletion=\"ignore-dynamic\"]>a", num2, 4, "[aria-label=\"Thêm bạn bè\"]");
								DelayThaoTacNho();
								num++;
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num6})...");
								if (chrome.CheckChromeClosed())
								{
									return -2;
								}
								delayFrom = ((delayFrom > 2) ? (delayFrom - 2) : 0);
								delayTo = ((delayTo > 2) ? (delayTo - 2) : 0);
								chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
							}
						}
						else
						{
							num3++;
							if (num3 == 3)
							{
								break;
							}
						}
					}
					break;
				}
			}
			catch
			{
				num = -1;
			}
			chrome.chrome.Manage().Window.Size = new Size(num4, num5);
			return num;
		}

		public int HDKetBanTheoTuKhoav2(int indexRow, string statusProxy, Chrome chrome, List<string> lstTuKhoa, int countFriendFrom, int countFriendTo, int delayFrom, int delayTo, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0575, IL_058a, IL_07f4, IL_0808
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = chrome.chrome.Manage().Window.Size.Width;
			int num2 = chrome.chrome.Manage().Window.Size.Height;
			chrome.chrome.Manage().Window.Size = new Size(500, 700);
			int num3 = 0;
			int num4 = -1;
			int num5 = 0;
			int num6 = 0;
			try
			{
				lstTuKhoa = MCommon.Common.RemoveEmptyItems(lstTuKhoa);
				string text = lstTuKhoa[rd.Next(0, lstTuKhoa.Count)];
				text = MCommon.Common.SpinText(text, rd);
				int num7 = rd.Next(countFriendFrom, countFriendTo + 1);
				while (true)
				{
				IL_016d:
					chrome.GotoURL("https://www.facebook.com");
					chrome.DelayTime(1.0);
					ClosePopup(chrome);
					if (chrome.CheckExistElement("[type=\"search\"]", 10.0) != 1)
					{
						break;
					}
					chrome.Click(4, "[type=\"search\"]");
					chrome.DelayTime(1.0);
					chrome.SendKeys(4, "[type=\"search\"]", text, isClick: false);
					chrome.DelayTime(1.0);
					chrome.SendEnter(4, "[type=\"search\"]");
					chrome.DelayTime(1.0);
					if (chrome.CheckExistElement("a[href*=\"/search/people/\"]", 10.0) != 1)
					{
						break;
					}
					chrome.ScrollSmoothIfNotExistOnScreen("document.querySelector('a[href*=\"/search/people/\"]')");
					chrome.DelayTime(1.0);
					chrome.Click(4, "a[href*=\"/search/people/\"]");
					DelayThaoTacNho();
					chrome.Scroll(500, 0);
					if (chrome.CheckExistElement("[role=\"main\"] [role=\"button\"]", 5.0) != 1)
					{
						break;
					}
					bool flag = false;
					chrome.DelayTime(1.0);
					chrome.Scroll(500, 500);
					while (num3 < num7 && !isStop)
					{
						num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num6 == 1)
						{
							goto IL_016d;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
						{
							return -1;
						}
						num4++;
						try
						{
							flag = Convert.ToBoolean(chrome.ExecuteScript("return document.querySelectorAll('[role=\"main\"] [role=\"button\"] i')[" + num4 + "].getAttribute('style').includes('1kmsBGmqLGZ') && document.querySelectorAll('[role=\"main\"] [role=\"button\"] i')[" + num4 + "].getAttribute('style').includes('0px -50px')+''").ToString());
						}
						catch (Exception)
						{
							flag = true;
						}
						if (flag)
						{
							num5 = 0;
							if (Base.rd.Next(1, 100) % 1 == 0)
							{
								chrome.ScrollSmooth("document.querySelectorAll('[role=\"main\"] [role=\"button\"]')[" + num4 + "]");
								chrome.DelayTime(1.0);
								while (chrome.Click(4, "[role=\"main\"] [role=\"button\"]", num4) != 1)
								{
								}
								num3++;
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong}({num3}/{num7})...");
								if (chrome.CheckChromeClosed())
								{
									return -2;
								}
								if (num3 == num7)
								{
									break;
								}
								delayFrom = ((delayFrom > 2) ? (delayFrom - 2) : 0);
								delayTo = ((delayTo > 2) ? (delayTo - 2) : 0);
								chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
							}
						}
						else
						{
							num5++;
							if (num5 == 50)
							{
								break;
							}
						}
					}
					break;
				}
			}
			catch
			{
				num3 = -1;
			}
			chrome.chrome.Manage().Window.Size = new Size(num, num2);
			return num3;
		}

		public int HDThamGiaNhomGoiYv2(int indexRow, string statusProxy, Chrome chrome, int nudSoLuongFrom, int nudSoLuongTo, int nudDelayFrom, int nudDelayTo, bool ckbTuDongTraLoiCauHoi, List<string> lstCauTraLoi, string tenHanhDong)
		{
			//Discarded unreachable code: IL_06ff, IL_070c
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = chrome.chrome.Manage().Window.Size.Width;
			int num2 = chrome.chrome.Manage().Window.Size.Height;
			chrome.chrome.Manage().Window.Size = new Size(500, 700);
			int num3 = 0;
			lstCauTraLoi = MCommon.Common.RemoveEmptyItems(lstCauTraLoi);
			int num4 = rd.Next(nudDelayFrom, nudDelayTo + 1);
			List<string> list = CloneList(lstCauTraLoi);
			int num5 = 0;
			int num6 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
			try
			{
				int num7;
				do
				{
					chrome.GotoURL("https://www.facebook.com/groups/discover");
					chrome.DelayTime(2.0);
					ClosePopup(chrome);
					num7 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
				}
				while (num7 == 1);
				if (new List<int> { -3, -2, -1, 2 }.Contains(num7))
				{
					return -1;
				}
				if (chrome.CheckExistElement("a[href*=\"/groups/categories/?category\"]", 10.0) == 1)
				{
					chrome.ScrollSmoothIfNotExistOnScreen("document.querySelector('a[href*=\"/groups/categories/?category\"]')");
					chrome.DelayTime(1.0);
					chrome.Click(4, "a[href*=\"/groups/categories/?category\"]");
					chrome.DelayTime(1.0);
					chrome.Scroll(500, 0);
					if (chrome.CheckExistElement("[role=\"main\"] div>div:nth-child(2)>div>[role=\"button\"]", 15.0) == 1)
					{
						while (chrome.ScrollSmooth("document.querySelectorAll('[role=\"main\"] div>div:nth-child(2)>div>[role=\"button\"]')[" + num5 + "]") == 1 && !isStop)
						{
							chrome.DelayTime(1.0);
							if (chrome.Click(4, "[role=\"main\"] div>div:nth-child(2)>div>[role=\"button\"]", num5) == 1)
							{
								chrome.DelayRandom(3, 5);
								if (chrome.CheckExistElement("[role=\"dialog\"] [role=\"radio\"]") == 1)
								{
									chrome.Click(4, "[role=\"dialog\"] [role=\"radio\"]");
									DelayThaoTacNho();
								}
								if (Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[role=\"dialog\"]>div:nth-child(3)>div:nth-child(2)>div>div:nth-child(2)>div').length").ToString()) > 0)
								{
									if (ckbTuDongTraLoiCauHoi)
									{
										CommonChrome.AnswerQuestionWhenJoinGroupWWW(chrome, lstCauTraLoi);
										if (chrome.CheckExistElement("[role=\"dialog\"]>div:nth-child(3)>div:nth-child(3)>div:nth-child(3) [role=\"button\"]") == 1)
										{
											chrome.Click(4, "[role=\"dialog\"]>div:nth-child(3)>div:nth-child(3)>div:nth-child(3) [role=\"button\"]");
											chrome.DelayTime(1.0);
										}
									}
									else
									{
										chrome.Click(4, "[role=\"dialog\"]>div:nth-child(3)>div:nth-child(3)>div:nth-child(2) [role=\"button\"]");
										chrome.DelayTime(2.0);
										chrome.Click(4, "[role=\"dialog\"]>div:nth-child(3)>div >div:nth-child(2) [role=\"button\"]");
									}
								}
								num3++;
								if (num3 == num6)
								{
									break;
								}
								chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
							}
							num5++;
						}
					}
				}
			}
			catch
			{
			}
			chrome.chrome.Manage().Window.Size = new Size(num, num2);
			return num3;
		}

		public int HDDangStatusV2(int indexRow, string statusProxy, Chrome chrome, int soLuongFrom, int soLuongTo, int khoangCachFrom, int khoangCachTo, bool isVanBan, bool isAnh, string pathFolderAnh, int soLuongAnhFrom, int soLuongAnhTo, bool isDangAnhTheoThuTu, bool isTag, int nudUidFrom, int nudUidTo, bool isOnlyGetVNName, string id_HanhDong, string tenHanhDong, ref int checkPostSuccess)
		{
			checkPostSuccess = 2;
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = chrome.chrome.Manage().Window.Size.Width;
			int num3 = chrome.chrome.Manage().Window.Size.Height;
			chrome.chrome.Manage().Window.Size = new Size(500, 700);
			try
			{
				bool flag = false;
				int num4 = rd.Next(soLuongFrom, soLuongTo + 1);
				int num5 = 0;
				while (num < num4)
				{
					if (chrome.CheckChromeClosed())
					{
						return -2;
					}
					if (num == 0)
					{
						num5++;
						if (num5 == 4)
						{
							break;
						}
					}
					try
					{
						string text = "[data-pagelet=\"ProfileComposer\"] div:nth-child(2)[role=\"button\"]";
						string text2 = "[role=\"dialog\"] form[method=\"POST\"] [role=\"textbox\"]";
						bool flag2 = false;
						int num6 = 0;
						while (true)
						{
							num6++;
							switch (num6)
							{
								case 1:
									{
										int num7;
										do
										{
											chrome.GotoURL("https://www.facebook.com/profile");
											DelayThaoTacNho();
											ClosePopup(chrome);
											num7 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
										}
										while (num7 == 1);
										if (new List<int> { -3, -2, -1, 2 }.Contains(num7))
										{
											return -1;
										}
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num + 1}/{num4}): Tìm vùng nhập bài...");
										for (int k = 1; k < 5; k++)
										{
											flag2 = chrome.CheckExistElement(text) == 1;
											if (flag2)
											{
												break;
											}
											chrome.Scroll(0, k * 1000);
											chrome.DelayTime(2.0);
										}
										goto IL_0a56;
									}
								case 2:
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num + 1}/{num4}): Click vùng nhập bài...");
									chrome.ScrollSmooth("document.querySelector('" + text + "')");
									chrome.DelayTime(1.0);
									if (chrome.Click(4, text) != 1)
									{
										chrome.ExecuteScript("document.querySelector('" + text + "').click()");
									}
									flag2 = chrome.CheckExistElement(text2, 30.0) == 1;
									goto IL_0a56;
								case 3:
									if (isVanBan)
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num + 1}/{num4}): Nhập nội dung...");
										string item = "";
										lock (dicDangStatusV2_NoiDung)
										{
											if (dicDangStatusV2_NoiDung[id_HanhDong].Count == 0)
											{
												dicDangStatusV2_NoiDung[id_HanhDong] = CloneList(dicDangStatusV2_NoiDungGoc[id_HanhDong]);
											}
											item = dicDangStatusV2_NoiDung[id_HanhDong][rd.Next(0, dicDangStatusV2_NoiDung[id_HanhDong].Count)];
											dicDangStatusV2_NoiDung[id_HanhDong].Remove(item);
										}
										item = MCommon.Common.SpinText(item, rd);
										if (item.Trim() != "")
										{
											chrome.DelayTime(2.0);
											if (chrome.SendKeys(4, text2, item) != 1)
											{
												if (!flag)
												{
													flag = true;
													goto IL_0b15;
												}
												break;
											}
											chrome.DelayTime(5.0);
										}
									}
									goto IL_0a56;
								case 4:
									if (isAnh && chrome.CheckExistElement("form[method=\"POST\"] input[type=\"file\"]", 30.0) == 1)
									{
										string text3 = "";
										int num8 = 0;
										int num9 = rd.Next(soLuongAnhFrom, soLuongAnhTo + 1);
										List<string> list = Directory.GetFiles(pathFolderAnh).ToList();
										while (true)
										{
											SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num + 1}/{num4}): Đăng ảnh {num8}/{num9}...");
											if (list.Count <= 0 || num8 >= num9)
											{
												break;
											}
											text3 = (isDangAnhTheoThuTu ? list[0] : list[rd.Next(0, list.Count)]);
											list.Remove(text3);
											chrome.SendKeys(4, "form[method=\"POST\"] input[type=\"file\"]", text3, isClick: false);
											chrome.DelayRandom(1, 2);
											num8++;
										}
										chrome.DelayRandom(3, 5);
									}
									goto IL_0a56;
								case 5:
									if (chrome.CheckExistElement("form[method=\"POST\"] div:nth-child(3)>div:nth-child(2)>div[role=\"button\"]") == 1)
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num + 1}/{num4}): Đang đăng...");
										chrome.DelayTime(2.0);
										chrome.ExecuteScript("document.querySelector('form[method=\"POST\"] div:nth-child(3)>div:nth-child(2)>div[role=\"button\"]').click()");
										for (int i = 0; i < 10; i++)
										{
											if (chrome.CheckExistElement("form[method=\"POST\"] div:nth-child(3)>div:nth-child(2)>div[role=\"button\"]") != 1)
											{
												break;
											}
											chrome.DelayTime(1.0);
										}
										bool flag3 = false;
										for (int j = 0; j < 60; j++)
										{
											SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num + 1}/{num4}): Đang đăng {j}/60(s)...");
											if (chrome.CheckExistElement("[aria-live=\"assertive\"]") != 1)
											{
												flag3 = true;
												break;
											}
											chrome.DelayTime(1.0);
										}
										if (!flag3)
										{
											SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num + 1}/{num4}): Mạng lag quá...");
										}
										else
										{
											chrome.DelayTime(5.0);
											if (CommonChrome.CheckFacebookBlocked(chrome))
											{
												return -4;
											}
											SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num + 1}/{num4}): Đăng thành công...");
										}
									}
									goto IL_0a56;
							}
							break;
						IL_0a56:
							if (!flag2)
							{
								MCommon.Common.ExportError(chrome, null, "HDDangStatusV2: stt" + num6);
								break;
							}
						}
					}
					catch
					{
					}
					checkPostSuccess = 1;
					num++;
					SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num4})...");
					if (num >= num4)
					{
						break;
					}
					chrome.DelayRandom(khoangCachFrom, khoangCachTo);
				IL_0b15:;
				}
			}
			catch
			{
			}
			chrome.chrome.Manage().Window.Size = new Size(num2, num3);
			return num;
		}

		private string LoginFacebook(Chrome chrome, int typeLogin, string typeWeb, string uid, string email, string pass, string fa2, string cookie, int tocDoGoVanBan, bool isDontSaveBrowser)
		{
			string result = "";
			switch (typeLogin)
			{
				case 0:
					if (uid.Trim() == "" || pass.Trim() == "")
					{
						if (uid.Trim() == "")
						{
							result = Language.GetValue("Không ti\u0300m thâ\u0301y UID!");
						}
						else if (pass.Trim() == "")
						{
							result = Language.GetValue("Không ti\u0300m thâ\u0301y Pass!");
						}
					}
					else
					{
						result = CommonChrome.LoginFacebookUsingUidPassNew(chrome, uid, pass, fa2, typeWeb, tocDoGoVanBan, isDontSaveBrowser);
					}
					break;
				case 1:
					if (email.Trim() == "" || pass.Trim() == "")
					{
						if (email.Trim() == "")
						{
							result = Language.GetValue("Không ti\u0300m thâ\u0301y Email!");
						}
						else if (pass.Trim() == "")
						{
							result = Language.GetValue("Không ti\u0300m thâ\u0301y Pass!");
						}
					}
					else
					{
						result = CommonChrome.LoginFacebookUsingUidPassNew(chrome, email, pass, fa2, typeWeb, tocDoGoVanBan, isDontSaveBrowser);
					}
					break;
				case 2:
					result = ((!(cookie.Trim() == "")) ? CommonChrome.LoginFacebookUsingCookie(chrome, cookie, typeWeb) : Language.GetValue("Không ti\u0300m thâ\u0301y Cookie!"));
					break;
			}
			return result;
		}

		private int HDDocThongBaov2(int indexRow, string statusProxy, Chrome chrome, int nudSoLuongFrom, int nudSoLuongTo, int nudDelayFrom, int nudDelayTo, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_04ac, IL_04bf
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = chrome.chrome.Manage().Window.Size.Width;
			int num3 = chrome.chrome.Manage().Window.Size.Height;
			chrome.chrome.Manage().Window.Size = new Size(500, 700);
			try
			{
				int num4 = 0;
				int num5 = 0;
				int num6 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
				while (true)
				{
					chrome.GotoURL("https://www.facebook.com/notifications");
					ClosePopup(chrome);
					num4 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num4 == 1)
					{
						continue;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num4))
					{
						return -1;
					}
					num5 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[role=\"complementary\"] [role=\"grid\"] [role=\"row\"]').length+''").ToString());
					if (num5 <= 0)
					{
						return num;
					}
					int num7 = 0;
					while (true)
					{
						num4 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num4 == 1)
						{
							break;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num4))
						{
							return -1;
						}
						if (chrome.ScrollSmooth("document.querySelectorAll('[role=\"complementary\"] [role=\"grid\"] [role=\"row\"] a')[" + num7 + "]") != 1)
						{
							return num;
						}
						chrome.DelayTime(1.0);
						if (chrome.Click(4, "[role=\"complementary\"] [role=\"grid\"] [role=\"row\"] a", num7) == 1)
						{
							chrome.DelayThaoTacNho();
							CommonChrome.ScrollRandom(chrome);
							chrome.GotoBackPage();
							chrome.GotoURLIfNotExist("https://www.facebook.com/notifications");
							num++;
						}
						num7++;
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num6})...");
						if (num < num6)
						{
							chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
							if (num < num6)
							{
								continue;
							}
						}
						goto end_IL_00f0;
					}
				}
			end_IL_00f0:;
			}
			catch
			{
				return -1;
			}
			chrome.chrome.Manage().Window.Size = new Size(num2, num3);
			return num;
		}

		private int HDXoaBaiPage(int indexRow, string statusProxy, Chrome chrome, JSON_Settings cauHinh, string tenHanhDong)
		{
			//Discarded unreachable code: IL_046f, IL_047c
			string value = cauHinh.GetValue("txtIdPage");
			bool valueBool = cauHinh.GetValueBool("ckbPageProfile");
			int valueInt = cauHinh.GetValueInt("nudSoLuongBaiFrom");
			int valueInt2 = cauHinh.GetValueInt("nudSoLuongBaiTo");
			int num = rd.Next(valueInt, valueInt2 + 1);
			int valueInt3 = cauHinh.GetValueInt("nudDelayFrom");
			int valueInt4 = cauHinh.GetValueInt("nudDelayTo");
			int num2 = 0;
			try
			{
				if (valueBool)
				{
					chrome.GotoURL("https://m.facebook.com/" + value);
				}
				else
				{
					chrome.GotoURL("https://m.facebook.com/" + value + "/posts");
				}
				DelayThaoTacNho();
				chrome.Scroll(0, 1000);
				chrome.DelayTime(1.0);
				string text = "[data-sigil=\"story-popup-causal-init\"]>a";
				while (chrome.CheckExistElement(text, 3.0) == 1 && num2 < num)
				{
					chrome.ScrollSmooth("document.querySelector('" + text + "')");
					DelayThaoTacNho();
					chrome.Click(4, text);
					DelayThaoTacNho();
					if ((chrome.FindAndClick(5.0, 4, "[data-sigil*=\"removeStoryButton\"]", num2) == 1 || chrome.FindAndClick(5.0, 4, "[data-sigil=\" m-layer-root storyFlyout\"]", num2, 4, "[data-sigil*=\"afroDirectAction enabled_action\"]") == 1) && chrome.FindAndClick(5.0, 4, "[data-ajaxify-href*=\"confirmed=1\"]") == 1)
					{
						num2++;
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num2}/{num})...");
						chrome.DelayRandom(valueInt3, valueInt4);
					}
				}
			}
			catch
			{
			}
			return num2;
		}

		private int HDXoaBaiTuong(int indexRow, string statusProxy, Chrome chrome, JSON_Settings cauHinh, string tenHanhDong)
		{
			//Discarded unreachable code: IL_03bc, IL_03c9
			int valueInt = cauHinh.GetValueInt("nudSoLuongBaiFrom");
			int valueInt2 = cauHinh.GetValueInt("nudSoLuongBaiTo");
			int num = rd.Next(valueInt, valueInt2 + 1);
			int valueInt3 = cauHinh.GetValueInt("nudDelayFrom");
			int valueInt4 = cauHinh.GetValueInt("nudDelayTo");
			int num2 = 0;
			try
			{
				chrome.GotoURL("https://m.facebook.com/me");
				DelayThaoTacNho();
				string text = "[data-sigil=\"story-popup-causal-init\"]>a";
				while (chrome.CheckExistElement(text, 3.0) == 1 && num2 < num)
				{
					chrome.ScrollSmooth("document.querySelector('" + text + "')");
					DelayThaoTacNho();
					chrome.Click(4, text);
					DelayThaoTacNho();
					if ((chrome.FindAndClick(5.0, 4, "[data-sigil*=\"removeStoryButton\"]", num2) == 1 || Convert.ToBoolean(chrome.ExecuteScript("var check=false;var x=document.querySelectorAll('[data-sigil*=\"afroDirectAction enabled_action\"]');if(x.length>0) {x[x.length-1].click(); check=true;} return check+''")) || chrome.FindAndClick(5.0, 4, "[data-sigil=\" m-layer-root storyFlyout\"]", num2, 4, "[data-sigil*=\"afroDirectAction enabled_action\"]") == 1) && chrome.FindAndClick(5.0, 4, "[data-ajaxify-href*=\"confirmed=1\"]") == 1)
					{
						num2++;
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num2}/{num})...");
						chrome.DelayRandom(valueInt3, valueInt4);
					}
				}
			}
			catch
			{
			}
			return num2;
		}

		public int HDThamGiaNhomGoiY(int indexRow, string statusProxy, Chrome chrome, int nudSoLuongFrom, int nudSoLuongTo, int nudDelayFrom, int nudDelayTo, bool ckbTuDongTraLoiCauHoi, List<string> lstCauTraLoi, string tenHanhDong)
		{
			//Discarded unreachable code: IL_0606, IL_0613
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			lstCauTraLoi = MCommon.Common.RemoveEmptyItems(lstCauTraLoi);
			int num2 = rd.Next(nudDelayFrom, nudDelayTo + 1);
			List<string> list = CloneList(lstCauTraLoi);
			string text = "";
			string text2 = "";
			int num3 = 0;
			int num4 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
			try
			{
				int num5;
				do
				{
					chrome.GotoURL("https://m.facebook.com/groups/?ref=bookmarks");
					num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
				}
				while (num5 == 1);
				if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
				{
					return -1;
				}
				if (chrome.CheckExistElement("#root > div > div > div > div > div:nth-child(1) > div a", 10.0) == 1)
				{
					chrome.Click(4, "#root > div > div > div > div > div:nth-child(1) > div a");
					chrome.DelayThaoTacNho();
					text2 = chrome.GetURL();
					if (chrome.CheckExistElement("[data-sigil=\"context-layer-root content-pane\"] > div> div>div>div button", 10.0) == 1)
					{
						while (chrome.ScrollSmooth("document.querySelectorAll('[data-sigil=\"context-layer-root content-pane\"] > div> div>div>div button')[" + num3 + "]") == 1)
						{
							num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							if (num5 == 1)
							{
								chrome.GotoURL("https://m.facebook.com/groups/?ref=bookmarks");
							}
							else if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
							{
								return -1;
							}
							if (num == num4)
							{
								break;
							}
							chrome.DelayTime(1.0);
							if (chrome.Click(4, "[data-sigil=\"context-layer-root content-pane\"] > div> div>div>div button", num3) != 1)
							{
								continue;
							}
							chrome.DelayRandom(3, 5);
							text = chrome.GetURL();
							if (text != text2)
							{
								num3 = 0;
								if (ckbTuDongTraLoiCauHoi && chrome.CheckExistElement("textarea", 5.0) == 1)
								{
									DelayThaoTacNho();
									CommonChrome.AnswerQuestionWhenJoinGroup(chrome, lstCauTraLoi);
									if (chrome.Click(4, "[use=\"primary\"]") == 1)
									{
										DelayThaoTacNho(2);
									}
								}
								chrome.GotoURL(text2);
							}
							else
							{
								num3++;
							}
							num++;
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num4})...");
							chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
						}
					}
				}
			}
			catch
			{
			}
			return num;
		}

		private int HDDangBai(int indexRow, string statusProxy, Chrome chrome, JSON_Settings cauHinh, string tenHanhDong, string id_HanhDong)
		{
			//Discarded unreachable code: IL_0ce2, IL_0cf7, IL_1400, IL_140d, IL_146e, IL_147b, IL_1566, IL_1572, IL_1c3c, IL_1c51, IL_22bf, IL_22cc, IL_232d, IL_233a, IL_2425, IL_2431, IL_2aea, IL_2aff, IL_2f74, IL_2f81, IL_2fe2, IL_2fef, IL_30da, IL_30e6, IL_31e5, IL_31f9
			int valueInt = cauHinh.GetValueInt("nudDelayFrom");
			int valueInt2 = cauHinh.GetValueInt("nudDelayTo");
			bool valueBool = cauHinh.GetValueBool("ckbDangBaiLenTuong");
			bool valueBool2 = cauHinh.GetValueBool("ckbDangBaiLenNhom");
			bool valueBool3 = cauHinh.GetValueBool("ckbOnlyDangNhomKhongKiemDuyet");
			bool valueBool4 = cauHinh.GetValueBool("ckbDangBaiLenPage");
			int valueInt3 = cauHinh.GetValueInt("nudCountGroupFrom");
			int valueInt4 = cauHinh.GetValueInt("nudCountGroupTo");
			int valueInt5 = cauHinh.GetValueInt("nudCountPageFrom");
			int valueInt6 = cauHinh.GetValueInt("nudCountPageTo");
			bool valueBool5 = cauHinh.GetValueBool("ckbVanBan");
			bool valueBool6 = cauHinh.GetValueBool("ckbUseBackground");
			bool valueBool7 = cauHinh.GetValueBool("ckbAnh");
			string value = cauHinh.GetValue("txtPathAnh");
			int valueInt7 = cauHinh.GetValueInt("nudSoLuongAnhFrom");
			int valueInt8 = cauHinh.GetValueInt("nudSoLuongAnhTo");
			bool valueBool8 = cauHinh.GetValueBool("ckbVideo");
			string value2 = cauHinh.GetValue("txtPathVideo");
			int valueInt9 = cauHinh.GetValueInt("nudSoLuongVideoFrom");
			int valueInt10 = cauHinh.GetValueInt("nudSoLuongVideoTo");
			bool valueBool9 = cauHinh.GetValueBool("ckbUseAvatar");
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			string cellAccount4 = GetCellAccount(indexRow, "cCookie");
			List<string> list = new List<string>();
			if (Directory.Exists(value))
			{
				list = Directory.GetFiles(value).ToList();
			}
			List<string> list2 = new List<string>();
			if (Directory.Exists(value2))
			{
				list2 = Directory.GetFiles(value2).ToList();
			}
			List<string> list3 = new List<string>();
			List<string> list4 = new List<string>();
			int num = 0;
			try
			{
				string input = CommonChrome.RequestGet(chrome, "https://m.facebook.com/privacy/touch/composer/selector/?logging_source=composer_options", "https://m.facebook.com");
				string text = Regex.Match(input, "/privacy/save/\\?privacy(.*?)\"").Value.Replace("\"", "").Replace("&amp;", "&");
				if (text != "")
				{
					CommonChrome.RequestGet(chrome, "https://m.facebook.com" + text, "https://m.facebook.com");
				}
				if (valueBool9)
				{
					RequestXNet requestXNet = new RequestXNet("", "", "", 0);
					string text2 = requestXNet.RequestGet("https://graph.facebook.com/" + cellAccount + "/picture?height=500&access_token=6628568379|c1e620fa708a1d5696fb991c1bde5662&redirect=false");
					if (text2 != "")
					{
						byte[] bytes = requestXNet.GetBytes(text2.Remove(text2.Length - 1, 1).Remove(0, 1));
						if (!Directory.Exists("avatar"))
						{
							Directory.CreateDirectory("avatar");
						}
						File.WriteAllBytes("avatar\\" + cellAccount + ".png", bytes);
					}
				}
				if (valueBool)
				{
					if (chrome.CheckChromeClosed())
					{
						return -2;
					}
					int num2;
					do
					{
						chrome.GotoURL("https://m.facebook.com/me");
						num2 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					}
					while (num2 == 1);
					if (new List<int> { -3, -2, -1, 2 }.Contains(num2))
					{
						return -1;
					}
					string text3 = "";
					switch (chrome.CheckExistElements(10.0, "[data-sigil=\"show_composer\"]", "#timelineBody > div > div > div > div:nth-child(2)"))
					{
						case 1:
							text3 = "[data-sigil=\"show_composer\"]";
							break;
						case 2:
							text3 = "#timelineBody > div > div > div > div:nth-child(2)";
							break;
					}
					if (text3 != "")
					{
						chrome.DelayTime(1.0);
						chrome.Click(4, text3);
						chrome.DelayTime(2.0);
						if (chrome.CheckExistElement("[data-sigil=\"touchable aaa_public\"]") == 1)
						{
							chrome.Click(4, "[data-sigil=\"touchable aaa_public\"]");
						}
						string text4 = "";
						switch (chrome.CheckExistElements(10.0, "[data-sigil=\"composer-textarea m-textarea-input\"]", "[data-sigil=\"m-textarea-input composer-textarea\"]"))
						{
							case 1:
								text4 = "[data-sigil=\"composer-textarea m-textarea-input\"]";
								break;
							case 2:
								text4 = "[data-sigil=\"m-textarea-input composer-textarea\"]";
								break;
						}
						if (text4 != "")
						{
							if (chrome.CheckExistElement("input[value=\"300645083384735\"]") != 1)
							{
								chrome.DelayTime(1.0);
								chrome.Click(4, "#m_composer_privacy_selector #m_privacy_button_text_id");
								if (chrome.CheckExistElement("input[value=\"300645083384735\"]", 5.0) == 1)
								{
									chrome.DelayTime(1.0);
									chrome.ExecuteScript("document.querySelector('input[value=\"300645083384735\"]').click();");
								}
								else
								{
									chrome.ExecuteScript("document.querySelector('[data-sigil=\"dialog-cancel-button\"]').click()");
								}
							}
							if (valueBool5)
							{
								string text5 = "";
								lock (dicDangBai_NoiDung)
								{
									if (dicDangBai_NoiDung[id_HanhDong].Count == 0)
									{
										dicDangBai_NoiDung[id_HanhDong] = CloneList(dicDangBai_NoiDungGoc[id_HanhDong]);
									}
									text5 = dicDangBai_NoiDung[id_HanhDong][rd.Next(0, dicDangBai_NoiDung[id_HanhDong].Count)];
									dicDangBai_NoiDung[id_HanhDong].Remove(text5);
								}
								text5 = text5.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
								text5 = text5.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
								text5 = MCommon.Common.SpinText(text5, rd);
								text5 = GetIconFacebook.ProcessString(text5, rd);
								string newValue = chrome.ExecuteScript("return document.title").ToString();
								text5 = text5.Replace("[u]", newValue);
								if (text5.Trim() != "")
								{
									for (int i = 0; i < 10; i++)
									{
										chrome.ExecuteScript("document.querySelector('" + text4 + "').value=\"" + text5 + "\"");
										chrome.DelayTime(2.0);
										if (chrome.ExecuteScript("return document.querySelector('" + text4 + "').value").ToString() != "")
										{
											break;
										}
									}
									chrome.Click(4, text4);
									if (valueBool6 && !valueBool7 && !valueBool8)
									{
										int num3 = chrome.CountElement("#structured_composer_form div[aria-label]");
										if (num3 > 0)
										{
											chrome.Click(4, "#structured_composer_form div[aria-label]", rd.Next(1, num3));
											chrome.DelayThaoTacNho();
										}
									}
								}
							}
							int num4 = 0;
							if (valueBool7)
							{
								if (!valueBool9)
								{
									if (list.Count > 0)
									{
										string text6 = "";
										int num5 = rd.Next(valueInt7, valueInt8 + 1);
										for (int j = 0; j < num5; j++)
										{
											if (list3.Count == 0)
											{
												list3 = CloneList(list);
											}
											text6 = list3[rd.Next(0, list3.Count)];
											list3.Remove(text6);
											chrome.SendKeys(1, "photo_input", text6);
											num4++;
											MCommon.Common.DelayTime(1.0);
										}
									}
								}
								else
								{
									string content = Application.StartupPath + "\\avatar\\" + cellAccount + ".png";
									chrome.SendKeys(1, "photo_input", content);
									num4++;
									MCommon.Common.DelayTime(1.0);
								}
							}
							if (valueBool8 && list2.Count > 0)
							{
								string text7 = "";
								int num6 = rd.Next(valueInt9, valueInt10 + 1);
								for (int k = 0; k < num6; k++)
								{
									if (list4.Count == 0)
									{
										list4 = CloneList(list2);
									}
									text7 = list4[rd.Next(0, list4.Count)];
									list4.Remove(text7);
									chrome.SendKeys(1, "video_input", text7);
									num4++;
									MCommon.Common.DelayTime(1.0);
								}
							}
							try
							{
								for (int l = 0; l < 120; l++)
								{
									if (Convert.ToInt32(chrome.ExecuteScript("return (document.querySelectorAll('#structured_composer_form img').length+'')").ToString()) == num4)
									{
										break;
									}
									MCommon.Common.DelayTime(1.0);
								}
							}
							catch
							{
							}
							string text8;
							do
							{
								chrome.DelayTime(5.0);
								text8 = "";
								try
								{
									text8 = chrome.ExecuteScript("return (document.querySelector('[data-sigil=\"touchable submit_composer\"]').value)").ToString();
								}
								catch
								{
								}
							}
							while (text8 == "");
							if (chrome.Click(4, "#composer-main-view-id > div > div > div:nth-child(3) > div button") == 1)
							{
								for (int m = 0; m < 300; m++)
								{
									MCommon.Common.DelayTime(1.0);
									try
									{
										if (!Convert.ToBoolean(chrome.ExecuteScript("var x='false'; if(document.querySelector('[data-sigil=\"inprogress\"]')!=null) x=(document.querySelector('[data-sigil=\"inprogress\"]').getAttribute('style')=='')+''; return x")))
										{
											break;
										}
									}
									catch
									{
										break;
									}
								}
								if (CommonChrome.CheckFacebookBlocked(chrome))
								{
									return -4;
								}
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đã đăng tường xong!"));
								chrome.DelayRandom(valueInt, valueInt2);
							}
						}
					}
				}
				if (valueBool2)
				{
					num = 0;
					if (chrome.CheckChromeClosed())
					{
						return -2;
					}
					SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang lấy danh sách nhóm..."));
					List<string> list5 = CommonChrome.GetListGroup(chrome);
					if (valueBool3)
					{
						list5 = GetGroupKhongKiemDuyetv2(chrome, list5);
					}
					int num7 = rd.Next(valueInt3, valueInt4 + 1);
					string text9 = "";
					if (list5.Count > 0)
					{
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang đăng nhóm") + "...");
						for (int n = 0; n < num7; n++)
						{
							if (list5.Count == 0)
							{
								break;
							}
							text9 = list5[rd.Next(0, list5.Count)];
							list5.Remove(text9);
							text9 = text9.Split('|')[0];
							int num8;
							do
							{
								chrome.GotoURL("https://m.facebook.com/" + text9);
								num8 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							}
							while (num8 == 1);
							if (new List<int> { -3, -2, -1, 2 }.Contains(num8))
							{
								return -1;
							}
							string text10 = "";
							switch (chrome.CheckExistElements(20.0, "#MRoot>div>div:nth-child(3) [role=\"button\"]", "[data-sigil=\"show_composer touchable\"]", "#MRoot > div > div> div > div > div:nth-child(2)", "#root > div > div > div > div > div:nth-child(2) > div"))
							{
								case 1:
									text10 = "#MRoot>div>div:nth-child(3) [role=\"button\"]";
									break;
								case 2:
									text10 = "[data-sigil=\"show_composer touchable\"]";
									break;
								case 3:
									text10 = "#MRoot > div > div> div > div > div:nth-child(2)";
									break;
								case 4:
									text10 = "#root > div > div > div > div > div:nth-child(2) > div";
									break;
							}
							if (!(text10 != ""))
							{
								continue;
							}
							chrome.DelayTime(1.0);
							chrome.Click(4, text10);
							chrome.DelayTime(2.0);
							string text11 = "";
							switch (chrome.CheckExistElements(10.0, "[data-sigil=\"composer-textarea m-textarea-input\"]", "[data-sigil=\"m-textarea-input composer-textarea\"]"))
							{
								case 1:
									text11 = "[data-sigil=\"composer-textarea m-textarea-input\"]";
									break;
								case 2:
									text11 = "[data-sigil=\"m-textarea-input composer-textarea\"]";
									break;
							}
							if (!(text11 != ""))
							{
								continue;
							}
							if (valueBool5)
							{
								string text12 = "";
								lock (dicDangBai_NoiDung)
								{
									if (dicDangBai_NoiDung[id_HanhDong].Count == 0)
									{
										dicDangBai_NoiDung[id_HanhDong] = CloneList(dicDangBai_NoiDungGoc[id_HanhDong]);
									}
									text12 = dicDangBai_NoiDung[id_HanhDong][rd.Next(0, dicDangBai_NoiDung[id_HanhDong].Count)];
									dicDangBai_NoiDung[id_HanhDong].Remove(text12);
								}
								text12 = text12.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
								text12 = text12.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
								text12 = MCommon.Common.SpinText(text12, rd);
								text12 = GetIconFacebook.ProcessString(text12, rd);
								string newValue2 = chrome.ExecuteScript("return document.title").ToString();
								text12 = text12.Replace("[u]", newValue2);
								if (text12.Trim() != "")
								{
									for (int num9 = 0; num9 < 10; num9++)
									{
										chrome.ExecuteScript("document.querySelector('" + text11 + "').value=\"" + text12 + "\"");
										chrome.DelayTime(2.0);
										if (chrome.ExecuteScript("return document.querySelector('" + text11 + "').value").ToString() != "")
										{
											break;
										}
									}
									chrome.Click(4, text11);
									if (valueBool6 && !valueBool7 && !valueBool8)
									{
										int num10 = chrome.CountElement("#structured_composer_form div[aria-label]");
										if (num10 > 0)
										{
											chrome.Click(4, "#structured_composer_form div[aria-label]", rd.Next(1, num10));
											chrome.DelayThaoTacNho();
										}
									}
								}
							}
							int num11 = 0;
							if (valueBool7 && list.Count > 0)
							{
								string text13 = "";
								int num12 = rd.Next(valueInt7, valueInt8 + 1);
								for (int num13 = 0; num13 < num12; num13++)
								{
									if (list3.Count == 0)
									{
										list3 = CloneList(list);
									}
									text13 = list3[rd.Next(0, list3.Count)];
									list3.Remove(text13);
									chrome.SendKeys(1, "photo_input", text13);
									num11++;
									MCommon.Common.DelayTime(1.0);
								}
							}
							if (valueBool8 && list2.Count > 0)
							{
								string text14 = "";
								int num14 = rd.Next(valueInt9, valueInt10 + 1);
								for (int num15 = 0; num15 < num14; num15++)
								{
									if (list4.Count == 0)
									{
										list4 = CloneList(list2);
									}
									text14 = list4[rd.Next(0, list4.Count)];
									list4.Remove(text14);
									chrome.SendKeys(1, "video_input", text14);
									num11++;
									MCommon.Common.DelayTime(1.0);
								}
							}
							try
							{
								for (int num16 = 0; num16 < 120; num16++)
								{
									if (Convert.ToInt32(chrome.ExecuteScript("return (document.querySelectorAll('#structured_composer_form img').length+'')").ToString()) >= num11)
									{
										break;
									}
									MCommon.Common.DelayTime(1.0);
								}
							}
							catch
							{
							}
							string text15;
							do
							{
								chrome.DelayTime(5.0);
								text15 = "";
								try
								{
									text15 = chrome.ExecuteScript("return (document.querySelector('[data-sigil=\"touchable submit_composer\"]').value)").ToString();
								}
								catch
								{
								}
							}
							while (text15 == "");
							if (chrome.Click(4, "#composer-main-view-id > div > div > div:nth-child(3) > div button") != 1)
							{
								continue;
							}
							for (int num17 = 0; num17 < 300; num17++)
							{
								MCommon.Common.DelayTime(1.0);
								try
								{
									if (!Convert.ToBoolean(chrome.ExecuteScript("var x='false'; if(document.querySelector('[data-sigil=\"inprogress\"]')!=null) x=(document.querySelector('[data-sigil=\"inprogress\"]').getAttribute('style')=='')+''; return x")))
									{
										break;
									}
								}
								catch
								{
									break;
								}
							}
							if (!CommonChrome.CheckFacebookBlocked(chrome))
							{
								num++;
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang đăng nhóm") + $" ({num}/{num7})...");
								chrome.DelayRandom(valueInt, valueInt2);
								continue;
							}
							return -4;
						}
					}
				}
				if (valueBool4)
				{
					num = 0;
					if (chrome.CheckChromeClosed())
					{
						return -2;
					}
					SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang lấy danh sách page..."));
					List<string> listPage = CommonChrome.GetListPage(chrome);
					int num18 = rd.Next(valueInt5, valueInt6 + 1);
					string text16 = "";
					if (listPage.Count > 0)
					{
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang đăng page") + "...");
						for (int num19 = 0; num19 < num18; num19++)
						{
							if (listPage.Count == 0)
							{
								break;
							}
							text16 = listPage[rd.Next(0, listPage.Count)];
							listPage.Remove(text16);
							int num20;
							do
							{
								chrome.GotoURL("https://m.facebook.com/" + text16 + "/posts");
								num20 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							}
							while (num20 == 1);
							if (new List<int> { -3, -2, -1, 2 }.Contains(num20))
							{
								return -1;
							}
							string text17 = "";
							switch (chrome.CheckExistElements(20.0, "[data-sigil=\"write_post_admin show_composer page_post_button\"]", "#rootcontainer>div>div>div>div:nth-child(3)>div>div>div>div>span", "body>div>div>div:nth-child(4)>div>div:nth-child(1)>div>div:nth-child(4)>div>div:nth-child(2)>div:nth-child(1)>div>div>div:nth-child(1)"))
							{
								case 1:
									text17 = "[data-sigil=\"write_post_admin show_composer page_post_button\"]";
									break;
								case 2:
									text17 = "#rootcontainer>div>div>div>div:nth-child(3)>div>div>div>div>span";
									break;
								case 3:
									text17 = "body>div>div>div:nth-child(4)>div>div:nth-child(1)>div>div:nth-child(4)>div>div:nth-child(2)>div:nth-child(1)>div>div>div:nth-child(1)";
									break;
							}
							if (!(text17 != ""))
							{
								continue;
							}
							chrome.DelayTime(1.0);
							chrome.Click(4, text17);
							chrome.DelayTime(2.0);
							string text18 = "";
							switch (chrome.CheckExistElements(10.0, "[data-sigil=\"composer-textarea m-textarea-input\"]", "[data-sigil=\"m-textarea-input composer-textarea\"]"))
							{
								case 1:
									text18 = "[data-sigil=\"composer-textarea m-textarea-input\"]";
									break;
								case 2:
									text18 = "[data-sigil=\"m-textarea-input composer-textarea\"]";
									break;
							}
							if (!(text18 != ""))
							{
								continue;
							}
							if (valueBool5)
							{
								string text19 = "";
								lock (dicDangBai_NoiDung)
								{
									if (dicDangBai_NoiDung[id_HanhDong].Count == 0)
									{
										dicDangBai_NoiDung[id_HanhDong] = CloneList(dicDangBai_NoiDungGoc[id_HanhDong]);
									}
									text19 = dicDangBai_NoiDung[id_HanhDong][rd.Next(0, dicDangBai_NoiDung[id_HanhDong].Count)];
									dicDangBai_NoiDung[id_HanhDong].Remove(text19);
								}
								text19 = text19.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
								text19 = text19.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
								text19 = MCommon.Common.SpinText(text19, rd);
								text19 = GetIconFacebook.ProcessString(text19, rd);
								string newValue3 = chrome.ExecuteScript("return document.title.split('-')[0].trim()").ToString();
								text19 = text19.Replace("[u]", newValue3);
								if (text19.Trim() != "")
								{
									for (int num21 = 0; num21 < 10; num21++)
									{
										chrome.ExecuteScript("document.querySelector('" + text18 + "').value=\"" + text19 + "\"");
										chrome.DelayTime(2.0);
										if (chrome.ExecuteScript("return document.querySelector('" + text18 + "').value").ToString() != "")
										{
											break;
										}
									}
									chrome.Click(4, text18);
								}
							}
							int num22 = 0;
							if (valueBool7 && list.Count > 0)
							{
								string text20 = "";
								int num23 = rd.Next(valueInt7, valueInt8 + 1);
								for (int num24 = 0; num24 < num23; num24++)
								{
									if (list3.Count == 0)
									{
										list3 = CloneList(list);
									}
									text20 = list3[rd.Next(0, list3.Count)];
									list3.Remove(text20);
									chrome.SendKeys(1, "photo_input", text20);
									num22++;
									MCommon.Common.DelayTime(1.0);
								}
							}
							try
							{
								for (int num25 = 0; num25 < 120; num25++)
								{
									if (Convert.ToInt32(chrome.ExecuteScript("return (document.querySelectorAll('#structured_composer_form img').length+'')").ToString()) >= num22)
									{
										break;
									}
									MCommon.Common.DelayTime(1.0);
								}
							}
							catch
							{
							}
							string text21;
							do
							{
								chrome.DelayTime(5.0);
								text21 = "";
								try
								{
									text21 = chrome.ExecuteScript("return (document.querySelector('[data-sigil=\"touchable submit_composer\"]').value)").ToString();
								}
								catch
								{
								}
							}
							while (text21 == "");
							if (chrome.Click(4, "#composer-main-view-id > div > div > div:nth-child(3) > div button") != 1)
							{
								continue;
							}
							for (int num26 = 0; num26 < 300; num26++)
							{
								MCommon.Common.DelayTime(1.0);
								try
								{
									if (!Convert.ToBoolean(chrome.ExecuteScript("var x='false'; if(document.querySelector('[data-sigil=\"inprogress\"]')!=null) x=(document.querySelector('[data-sigil=\"inprogress\"]').getAttribute('style')=='')+''; return x")))
									{
										break;
									}
								}
								catch
								{
									break;
								}
							}
							string pageSource = chrome.GetPageSource();
							if (!CommonChrome.CheckFacebookBlocked(chrome))
							{
								num++;
								SetStatusAccount(indexRow, statusProxy + string.Format(Language.GetValue("Đang đăng page") + " ({0}/{1})...", num, num18));
								chrome.DelayRandom(valueInt, valueInt2);
								continue;
							}
							return -4;
						}
					}
				}
			}
			catch
			{
				num = -1;
			}
			return 0;
		}

		private List<string> GetGroupKhongKiemDuyet(List<string> lstGroup)
		{
			//Discarded unreachable code: IL_008b, IL_0098
			List<string> list = new List<string>();
			try
			{
				for (int i = 0; i < lstGroup.Count; i++)
				{
					if (!Convert.ToBoolean(lstGroup[i].Split('|')[3]))
					{
						list.Add(lstGroup[i]);
					}
				}
			}
			catch
			{
			}
			return list;
		}

		private List<string> GetGroupKhongKiemDuyetv2(Chrome chrome, List<string> lstGroup)
		{
			//Discarded unreachable code: IL_0165, IL_0172
			List<string> lstOutput = new List<string>();
			try
			{
				int iThread = 0;
				int num = ((lstGroup.Count < 100) ? lstGroup.Count : 100);
				string url = CommonChrome.GetWebsiteFacebook(chrome, 2);
				int num2 = 0;
				while (num2 < lstGroup.Count)
				{
					if (iThread < num)
					{
						Interlocked.Increment(ref iThread);
						int row = num2++;
						new Thread((ThreadStart)delegate
						{
							try
							{
								string text = lstGroup[row].Split('|')[0];
								string text2 = CommonChrome.RequestGet(chrome, url + "/groups/" + text + "/madminpanel", url);
								if (!text2.Contains("madminpanel/pending/"))
								{
									lock (lstOutput)
									{
										lstOutput.Add(lstGroup[row]);
									}
								}
							}
							catch
							{
							}
							Interlocked.Decrement(ref iThread);
						}).Start();
					}
					else
					{
						Application.DoEvents();
						Thread.Sleep(200);
					}
				}
				while (iThread > 0)
				{
					Application.DoEvents();
					Thread.Sleep(1000);
				}
			}
			catch
			{
			}
			return lstOutput;
		}

		private int HDShareBai(int indexRow, string statusProxy, Chrome chrome, JSON_Settings cauHinh, string tenHanhDong)
		{
			//Discarded unreachable code: IL_05ff, IL_0614, IL_0f54, IL_0f60, IL_12ba, IL_12cf, IL_2070, IL_207c, IL_2a41, IL_2a4d, IL_3462, IL_3477, IL_508e, IL_50ab, IL_6831, IL_683e
			int valueInt = cauHinh.GetValueInt("nudDelayFrom");
			int valueInt2 = cauHinh.GetValueInt("nudDelayTo");
			bool valueBool = cauHinh.GetValueBool("ckbShareBaiLenTuong");
			bool valueBool2 = cauHinh.GetValueBool("ckbShareBaiLenNhom");
			int valueInt3 = cauHinh.GetValueInt("typeShare");
			List<string> lstNhomTuNhap = cauHinh.GetValueList("lstNhomTuNhap");
			bool valueBool3 = cauHinh.GetValueBool("ckbCauHinhNangCao");
			bool valueBool4 = cauHinh.GetValueBool("ckbOnlyShareNhomKhongKiemDuyet");
			bool valueBool5 = cauHinh.GetValueBool("ckbUuTienNhomNhieuThanhVien");
			bool valueBool6 = cauHinh.GetValueBool("ckbKhongShareTrung");
			bool valueBool7 = cauHinh.GetValueBool("ckbShareBaiLenPage");
			int valueInt4 = cauHinh.GetValueInt("nudCountGroupFrom");
			int valueInt5 = cauHinh.GetValueInt("nudCountGroupTo");
			int valueInt6 = cauHinh.GetValueInt("nudCountPageFrom");
			int valueInt7 = cauHinh.GetValueInt("nudCountPageTo");
			List<string> valueList = cauHinh.GetValueList("txtLinkChiaSe");
			bool valueBool8 = cauHinh.GetValueBool("rbShareThuong");
			bool valueBool9 = cauHinh.GetValueBool("rbShareVip");
			bool valueBool10 = cauHinh.GetValueBool("ckbKhongPhaiLinkFacebook");
			bool valueBool11 = cauHinh.GetValueBool("ckbVanBan");
			bool valueBool12 = cauHinh.GetValueBool("ckbTuongTac");
			int valueInt8 = cauHinh.GetValueInt("nudTuongTacFrom");
			int valueInt9 = cauHinh.GetValueInt("nudTuongTacTo");
			int valueInt10 = cauHinh.GetValueInt("nudTuongTacDelayFrom");
			int valueInt11 = cauHinh.GetValueInt("nudTuongTacDelayTo");
			bool valueBool13 = cauHinh.GetValueBool("ckbTuongTacLike");
			bool valueBool14 = cauHinh.GetValueBool("ckbTuongTacComment");
			List<string> valueList2 = cauHinh.GetValueList("txtComment", cauHinh.GetValueInt("typeNganCach"));
			List<string> valueList3 = cauHinh.GetValueList("txtNoiDung", cauHinh.GetValueInt("typeNganCach"));
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			string cellAccount4 = GetCellAccount(indexRow, "cCookie");
			List<string> list = new List<string>();
			List<string> list2 = new List<string>();
			List<string> list3 = new List<string>();
			List<string> list4 = new List<string>();
			string text = "";
			int num = 0;
			try
			{
				lock (list3)
				{
					if (list3.Count == 0)
					{
						list3 = CloneList(valueList);
					}
					text = list3[rd.Next(0, list3.Count)];
					list3.Remove(text);
				}
				if (valueBool8)
				{
					if (valueBool10)
					{
						if (valueBool)
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Share tường") + "...");
							if (chrome.CheckChromeClosed())
							{
								return -2;
							}
							int num2;
							do
							{
								chrome.GotoURL("https://m.facebook.com/me");
								num2 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							}
							while (num2 == 1);
							if (new List<int> { -3, -2, -1, 2 }.Contains(num2))
							{
								return -1;
							}
							string text2 = "";
							switch (chrome.CheckExistElements(10.0, "[data-sigil=\"show_composer\"]", "#timelineBody > div > div > div > div:nth-child(2)"))
							{
								case 1:
									text2 = "[data-sigil=\"show_composer\"]";
									break;
								case 2:
									text2 = "#timelineBody > div > div > div > div:nth-child(2)";
									break;
							}
							if (text2 != "")
							{
								chrome.DelayTime(1.0);
								chrome.Click(4, text2);
								chrome.DelayTime(2.0);
								if (chrome.CheckExistElement("[data-sigil=\"touchable aaa_public\"]") == 1)
								{
									chrome.Click(4, "[data-sigil=\"touchable aaa_public\"]");
								}
								string text3 = "";
								switch (chrome.CheckExistElements(10.0, "[data-sigil=\"composer-textarea m-textarea-input\"]", "[data-sigil=\"m-textarea-input composer-textarea\"]"))
								{
									case 1:
										text3 = "[data-sigil=\"composer-textarea m-textarea-input\"]";
										break;
									case 2:
										text3 = "[data-sigil=\"m-textarea-input composer-textarea\"]";
										break;
								}
								if (text3 != "")
								{
									if (chrome.CheckExistElement("input[value=\"300645083384735\"]") != 1)
									{
										chrome.DelayTime(1.0);
										chrome.Click(4, "#m_composer_privacy_selector #m_privacy_button_text_id");
										if (chrome.CheckExistElement("input[value=\"300645083384735\"]", 5.0) == 1)
										{
											chrome.DelayTime(1.0);
											chrome.ExecuteScript("document.querySelector('input[value=\"300645083384735\"]').click();");
										}
										else
										{
											chrome.ExecuteScript("document.querySelector('[data-sigil=\"dialog-cancel-button\"]').click()");
										}
									}
									chrome.SendKeys(4, text3, text);
									chrome.DelayRandom(3, 5);
									chrome.ClearText(4, text3);
									chrome.DelayTime(1.0);
									if (valueBool11)
									{
										string text4 = "";
										if (list.Count == 0)
										{
											list = CloneList(valueList3);
										}
										text4 = list[rd.Next(0, list.Count)];
										list.Remove(text4);
										text4 = text4.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
										text4 = text4.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
										text4 = MCommon.Common.SpinText(text4, rd);
										text4 = GetIconFacebook.ProcessString(text4, rd);
										string newValue = chrome.ExecuteScript("return document.title").ToString();
										text4 = text4.Replace("[u]", newValue);
										if (text4.Trim() != "")
										{
											chrome.ExecuteScript("document.querySelector('" + text3 + "').value=\"" + text4 + "\"");
											chrome.DelayTime(2.0);
											chrome.Click(4, text3);
										}
									}
									if (chrome.Click(4, "#composer-main-view-id > div > div > div:nth-child(3) > div button") == 1)
									{
										chrome.DelayRandom(3, 5);
										for (int i = 0; i < 60; i++)
										{
											try
											{
												chrome.DelayTime(1.0);
												if (!Convert.ToBoolean(chrome.ExecuteScript("var x='false'; if(document.querySelector('[data-sigil=\"inprogress\"]')!=null) x=(document.querySelector('[data-sigil=\"inprogress\"]').getAttribute('style')=='')+''; return x")))
												{
													break;
												}
											}
											catch
											{
												break;
											}
										}
										if (CommonChrome.CheckFacebookBlocked(chrome))
										{
											return -4;
										}
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đã share tường xong!"));
										chrome.DelayRandom(valueInt, valueInt2);
									}
								}
							}
						}
						if (valueBool2)
						{
							num = 0;
							if (chrome.CheckChromeClosed())
							{
								return -2;
							}
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang lấy danh sách nhóm..."));
							List<string> listGroup = CommonChrome.GetListGroup(chrome);
							list4 = ((!valueBool4) ? listGroup.Select((string x) => x).ToList() : GetGroupKhongKiemDuyetv2(chrome, listGroup));
							if (valueBool5)
							{
								list4.Sort((string x, string y) => int.Parse(y.Split('|')[2]).CompareTo(int.Parse(x.Split('|')[2])));
							}
							else
							{
								list4 = list4.OrderBy((string t) => Guid.NewGuid()).ToList();
							}
							if (valueInt3 == 1)
							{
								listGroup = MCommon.Common.CloneList(list4);
								list4 = listGroup.Where((string x) => lstNhomTuNhap.Contains(x.Split('|')[0])).ToList();
							}
							int num3 = rd.Next(valueInt4, valueInt5 + 1);
							string text5 = "";
							if (list4.Count > 0)
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang share nhóm") + "...");
								for (int num4 = 0; num4 < num3; num4++)
								{
									while (list4.Count != 0)
									{
										text5 = list4[0];
										list4.Remove(text5);
										text5 = text5.Split('|')[0];
										if (valueBool6)
										{
											lock (lstGroupShared)
											{
												if (lstGroupShared.Contains(text5))
												{
													continue;
												}
												lstGroupShared.Add(text5);
												goto IL_12d1;
											}
										}
										goto IL_12d1;
									}
									break;
								IL_12d1:
									if (valueBool12)
									{
										int num5 = 0;
										int num6 = 0;
										int num7 = 0;
										string text6 = "";
										int num8 = rd.Next(valueInt8, valueInt9 + 1);
										chrome.GotoURL("https://m.facebook.com/" + text5);
										chrome.DelayTime(3.0);
										while (num6 < num8)
										{
											string text7 = chrome.ExecuteScript("return (document.querySelectorAll('article footer div div:nth-child(2) div:nth-child(1) a')[" + num5 + "].getAttribute('data-uri')!=null)+''").ToString();
											if (text7 == "")
											{
												text7 = "false";
											}
											if (Convert.ToBoolean(text7))
											{
												chrome.ScrollSmooth("document.querySelectorAll('article footer div div:nth-child(2) div:nth-child(1) a')[" + num5 + "]");
												chrome.DelayTime(1.0);
												if (valueBool13 && Convert.ToInt32(chrome.ExecuteScript("return JSON.parse(document.querySelectorAll('article footer div div:nth-child(2) div:nth-child(1) a')[" + num5 + "].getAttribute('data-store')).reaction").ToString()) == 0)
												{
													chrome.ExecuteScript("document.querySelectorAll('article footer div div:nth-child(2) div:nth-child(1) a')[" + num5 + "].click()");
													chrome.DelayTime(1.0);
												}
												if (valueBool14)
												{
													if (list2.Count == 0)
													{
														list2 = CloneList(valueList2);
													}
													text6 = list2[rd.Next(0, list2.Count)];
													text6 = MCommon.Common.SpinText(text6, rd);
													text6 = GetIconFacebook.ProcessString(text6, rd);
													chrome.Click(4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]", num5);
													chrome.DelayTime(1.0);
													if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
													{
														if (!MCommon.Common.CheckStringIsContainIcon(text6))
														{
															chrome.SendKeys(4, "[data-sigil =\"textarea mufi-composer m-textarea-input\"]", text6, 0.1);
															chrome.DelayTime(1.0);
															chrome.Click(4, "[name=\"submit\"]");
															chrome.DelayTime(1.0);
														}
														else
														{
															chrome.ExecuteScript("document.querySelector('[data-sigil =\"textarea mufi-composer m-textarea-input\"]').value=\"" + text6 + "\"");
															chrome.Click(4, "[data-sigil =\"textarea mufi-composer m-textarea-input\"]");
															chrome.DelayTime(1.0);
															chrome.Click(4, "[name=\"submit\"]");
															chrome.DelayTime(1.0);
														}
													}
													chrome.GotoBackPage();
												}
												num6++;
												SetStatusAccount(indexRow, statusProxy + string.Format(Language.GetValue("Đang tương tác nhóm ") + " ({0}/{1})...", num6, num8));
												chrome.DelayTime(rd.Next(valueInt10, valueInt11 + 1));
											}
											else
											{
												num7++;
												if (num7 == 3)
												{
													break;
												}
											}
											num5++;
										}
									}
									int num9;
									do
									{
										chrome.GotoURL("https://m.facebook.com/" + text5);
										num9 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
									}
									while (num9 == 1);
									if (new List<int> { -3, -2, -1, 2 }.Contains(num9))
									{
										return -1;
									}
									string text8 = "";
									switch (chrome.CheckExistElements(20.0, "#MRoot>div>div:nth-child(3) [role=\"button\"]", "[data-sigil=\"show_composer touchable\"]", "#MRoot > div > div> div > div > div:nth-child(2)", "#root > div > div > div > div > div:nth-child(2) > div"))
									{
										case 1:
											text8 = "#MRoot>div>div:nth-child(3) [role=\"button\"]";
											break;
										case 2:
											text8 = "[data-sigil=\"show_composer touchable\"]";
											break;
										case 3:
											text8 = "#MRoot > div > div> div > div > div:nth-child(2)";
											break;
										case 4:
											text8 = "#root > div > div > div > div > div:nth-child(2) > div";
											break;
									}
									if (text8 != "")
									{
										chrome.DelayTime(1.0);
										chrome.Click(4, text8);
										chrome.DelayTime(2.0);
										string text9 = "";
										switch (chrome.CheckExistElements(10.0, "[data-sigil=\"composer-textarea m-textarea-input\"]", "[data-sigil=\"m-textarea-input composer-textarea\"]"))
										{
											case 1:
												text9 = "[data-sigil=\"composer-textarea m-textarea-input\"]";
												break;
											case 2:
												text9 = "[data-sigil=\"m-textarea-input composer-textarea\"]";
												break;
										}
										if (text9 != "")
										{
											chrome.SendKeys(4, text9, text);
											chrome.DelayRandom(3, 5);
											chrome.ClearText(4, text9);
											if (valueBool11)
											{
												string text10 = "";
												if (list.Count == 0)
												{
													list = CloneList(valueList3);
												}
												text10 = list[rd.Next(0, list.Count)];
												list.Remove(text10);
												text10 = text10.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
												text10 = text10.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
												text10 = MCommon.Common.SpinText(text10, rd);
												text10 = GetIconFacebook.ProcessString(text10, rd);
												string newValue2 = chrome.ExecuteScript("return document.title").ToString();
												text10 = text10.Replace("[u]", newValue2);
												if (text10.Trim() != "")
												{
													chrome.ExecuteScript("document.querySelector('" + text9 + "').value=\"" + text10 + "\"");
													chrome.DelayTime(2.0);
													chrome.Click(4, text9);
												}
											}
											else
											{
												chrome.ClearText(4, text9);
												chrome.DelayTime(1.0);
											}
											if (chrome.Click(4, "#composer-main-view-id > div > div > div:nth-child(3) > div button") == 1)
											{
												chrome.DelayRandom(3, 5);
												for (int j = 0; j < 60; j++)
												{
													try
													{
														MCommon.Common.DelayTime(1.0);
														if (!Convert.ToBoolean(chrome.ExecuteScript("var x='false'; if(document.querySelector('[data-sigil=\"inprogress\"]')!=null) x=(document.querySelector('[data-sigil=\"inprogress\"]').getAttribute('style')=='')+''; return x")))
														{
															break;
														}
													}
													catch
													{
														break;
													}
												}
												if (CommonChrome.CheckFacebookBlocked(chrome))
												{
													return -4;
												}
												num++;
												SetStatusAccount(indexRow, statusProxy + string.Format(Language.GetValue("Đang share nhóm") + " ({0}/{1})...", num, num3));
												chrome.DelayRandom(valueInt, valueInt2);
											}
										}
									}
								}
							}
						}
						if (valueBool7)
						{
							num = 0;
							if (chrome.CheckChromeClosed())
							{
								return -2;
							}
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang lấy danh sách page..."));
							List<string> listPage = CommonChrome.GetListPage(chrome);
							int num10 = rd.Next(valueInt6, valueInt7 + 1);
							string text11 = "";
							if (listPage.Count > 0)
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang share page") + "...");
								for (int k = 0; k < num10; k++)
								{
									if (listPage.Count == 0)
									{
										break;
									}
									text11 = listPage[rd.Next(0, listPage.Count)];
									listPage.Remove(text11);
									int num11;
									do
									{
										chrome.GotoURL("https://m.facebook.com/" + text11 + "/posts");
										num11 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
									}
									while (num11 == 1);
									if (new List<int> { -3, -2, -1, 2 }.Contains(num11))
									{
										return -1;
									}
									string text12 = "";
									switch (chrome.CheckExistElements(20.0, "#rootcontainer>div>div>div>div:nth-child(3)>div>div>div>div>span", "body>div>div>div:nth-child(4)>div>div:nth-child(1)>div>div:nth-child(4)>div>div:nth-child(2)>div:nth-child(1)>div>div>div:nth-child(1)"))
									{
										case 1:
											text12 = "#rootcontainer>div>div>div>div:nth-child(3)>div>div>div>div>span";
											break;
										case 2:
											text12 = "body>div>div>div:nth-child(4)>div>div:nth-child(1)>div>div:nth-child(4)>div>div:nth-child(2)>div:nth-child(1)>div>div>div:nth-child(1)";
											break;
									}
									if (!(text12 != ""))
									{
										continue;
									}
									chrome.DelayTime(1.0);
									chrome.Click(4, text12);
									chrome.DelayTime(2.0);
									string text13 = "";
									num11 = chrome.CheckExistElements(10.0, "[data-sigil=\"composer-textarea m-textarea-input\"]", "[data-sigil=\"m-textarea-input composer-textarea\"]");
									switch (num11)
									{
										case 1:
											text13 = "[data-sigil=\"composer-textarea m-textarea-input\"]";
											break;
										case 2:
											text13 = "[data-sigil=\"m-textarea-input composer-textarea\"]";
											break;
									}
									if (!(text13 != ""))
									{
										continue;
									}
									switch (num11)
									{
										case 1:
											chrome.SendKeys(4, "[data-sigil=\"composer-textarea m-textarea-input\"]", text);
											chrome.DelayTime(3.0);
											break;
										case 2:
											chrome.SendKeys(4, "[data-sigil=\"m-textarea-input composer-textarea\"]", text);
											chrome.DelayTime(3.0);
											break;
									}
									chrome.ClearText(4, text13);
									chrome.DelayTime(1.0);
									if (valueBool11)
									{
										string text14 = "";
										if (list.Count == 0)
										{
											list = CloneList(valueList3);
										}
										text14 = list[rd.Next(0, list.Count)];
										list.Remove(text14);
										text14 = text14.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
										text14 = text14.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
										text14 = MCommon.Common.SpinText(text14, rd);
										text14 = GetIconFacebook.ProcessString(text14, rd);
										string newValue3 = chrome.ExecuteScript("return document.title.split('-')[0].trim()").ToString();
										text14 = text14.Replace("[u]", newValue3);
										if (text14.Trim() != "")
										{
											chrome.ExecuteScript("document.querySelector('" + text13 + "').value=\"" + text14 + "\"");
											chrome.DelayTime(2.0);
											chrome.Click(4, text13);
										}
									}
									if (chrome.Click(4, "#composer-main-view-id > div > div > div:nth-child(3) > div button") != 1)
									{
										continue;
									}
									for (int l = 0; l < 60; l++)
									{
										MCommon.Common.DelayTime(1.0);
										try
										{
											if (!Convert.ToBoolean(chrome.ExecuteScript("var x='false'; if(document.querySelector('[data-sigil=\"inprogress\"]')!=null) x=(document.querySelector('[data-sigil=\"inprogress\"]').getAttribute('style')=='')+''; return x")))
											{
												break;
											}
										}
										catch
										{
											break;
										}
									}
									num++;
									if (CommonChrome.CheckFacebookBlocked(chrome))
									{
										return -4;
									}
									SetStatusAccount(indexRow, statusProxy + string.Format(Language.GetValue("Đang share page") + " ({0}/{1})...", num, num10));
									chrome.DelayRandom(valueInt, valueInt2);
								}
							}
						}
					}
					else
					{
						string idPostFromLink = GetIdPostFromLink(text);
						string text15 = "https://m.facebook.com/composer/mbasic/?c_src=share&referrer=feed&sid=" + idPostFromLink + "&m=group&target={uid}&at=";
						if (valueBool)
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Share tường") + "...");
							if (chrome.CheckChromeClosed())
							{
								return -2;
							}
							int num12;
							do
							{
								chrome.GotoURL("https://m.facebook.com/me");
								num12 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							}
							while (num12 == 1);
							if (new List<int> { -3, -2, -1, 2 }.Contains(num12))
							{
								return -1;
							}
							cellAccount4 = chrome.GetCookieFromChrome();
							string value = Regex.Match(cellAccount4 + ";", "c_user=(.*?);").Groups[1].Value;
							chrome.GotoURL(text15.Replace("{uid}", value));
							string text16 = "#mcomposer_textarea";
							if (chrome.CheckExistElement(text16, 10.0) == 1)
							{
								if (valueBool11)
								{
									string text17 = "";
									if (list.Count == 0)
									{
										list = CloneList(valueList3);
									}
									text17 = list[rd.Next(0, list.Count)];
									list.Remove(text17);
									text17 = text17.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
									text17 = text17.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
									text17 = MCommon.Common.SpinText(text17, rd);
									text17 = GetIconFacebook.ProcessString(text17, rd);
									if (text17.Trim() != "")
									{
										chrome.DelayTime(2.0);
										chrome.ExecuteScript("document.querySelector('" + text16 + "').value=\"" + text17 + "\"");
										chrome.DelayTime(2.0);
										chrome.SendKeys(4, text16, " ");
									}
								}
								string uRL = chrome.GetURL();
								bool flag = false;
								if (chrome.Click(4, "[data-sigil*=\"post-button\"]") == 1)
								{
									for (int m = 0; m < 30; m++)
									{
										if (chrome.GetURL() != uRL)
										{
											flag = !Convert.ToBoolean(chrome.ExecuteScript("var check='false'; if(document.querySelector('#m_home_notice')!=null) check=document.querySelector('#m_home_notice').innerText!=''; return check;").ToString());
											break;
										}
										chrome.DelayTime(1.0);
									}
									if (CommonChrome.CheckFacebookBlocked(chrome))
									{
										return -4;
									}
									if (flag)
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đã share tường xong!"));
										chrome.DelayRandom(valueInt, valueInt2);
									}
									else
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Lỗi share tường!"));
									}
								}
							}
						}
						if (valueBool2)
						{
							num = 0;
							if (chrome.CheckChromeClosed())
							{
								return -2;
							}
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang lấy danh sách nhóm..."));
							List<string> listGroup2 = CommonChrome.GetListGroup(chrome);
							list4 = ((!valueBool4) ? listGroup2.Select((string x) => x).ToList() : GetGroupKhongKiemDuyetv2(chrome, listGroup2));
							if (valueBool5)
							{
								list4.Sort((string x, string y) => int.Parse(y.Split('|')[2]).CompareTo(int.Parse(x.Split('|')[2])));
							}
							else
							{
								list4 = list4.OrderBy((string t) => Guid.NewGuid()).ToList();
							}
							if (valueInt3 == 1)
							{
								listGroup2 = MCommon.Common.CloneList(list4);
								list4 = listGroup2.Where((string x) => lstNhomTuNhap.Contains(x.Split('|')[0])).ToList();
							}
							int num13 = rd.Next(valueInt4, valueInt5 + 1);
							string text18 = "";
							if (list4.Count > 0)
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang share nhóm") + "...");
								for (int num14 = 0; num14 < num13 + 10; num14++)
								{
									while (list4.Count != 0)
									{
										text18 = list4[0];
										list4.Remove(text18);
										text18 = text18.Split('|')[0];
										if (valueBool6)
										{
											lock (lstGroupShared)
											{
												if (lstGroupShared.Contains(text18))
												{
													continue;
												}
												lstGroupShared.Add(text18);
												goto IL_3479;
											}
										}
										goto IL_3479;
									}
									break;
								IL_3479:
									if (valueBool12)
									{
										int num15 = 0;
										int num16 = 0;
										int num17 = 0;
										string text19 = "";
										int num18 = rd.Next(valueInt8, valueInt9 + 1);
										chrome.GotoURL("https://m.facebook.com/" + text18);
										chrome.DelayTime(3.0);
										while (num16 < num18)
										{
											string text20 = chrome.ExecuteScript("return (document.querySelectorAll('article footer div div:nth-child(2) div:nth-child(1) a')[" + num15 + "].getAttribute('data-uri')!=null)+''").ToString();
											if (text20 == "")
											{
												text20 = "false";
											}
											if (Convert.ToBoolean(text20))
											{
												chrome.ScrollSmooth("document.querySelectorAll('article footer div div:nth-child(2) div:nth-child(1) a')[" + num15 + "]");
												chrome.DelayTime(1.0);
												if (valueBool13 && Convert.ToInt32(chrome.ExecuteScript("return JSON.parse(document.querySelectorAll('article footer div div:nth-child(2) div:nth-child(1) a')[" + num15 + "].getAttribute('data-store')).reaction").ToString()) == 0)
												{
													chrome.ExecuteScript("document.querySelectorAll('article footer div div:nth-child(2) div:nth-child(1) a')[" + num15 + "].click()");
													chrome.DelayTime(1.0);
												}
												if (valueBool14)
												{
													if (list2.Count == 0)
													{
														list2 = CloneList(valueList2);
													}
													text19 = list2[rd.Next(0, list2.Count)];
													text19 = MCommon.Common.SpinText(text19, rd);
													text19 = GetIconFacebook.ProcessString(text19, rd);
													chrome.Click(4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]", num15);
													chrome.DelayTime(1.0);
													if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
													{
														if (!MCommon.Common.CheckStringIsContainIcon(text19))
														{
															chrome.SendKeys(4, "[data-sigil =\"textarea mufi-composer m-textarea-input\"]", text19, 0.1);
															chrome.DelayTime(1.0);
															chrome.Click(4, "[name=\"submit\"]");
															chrome.DelayTime(1.0);
														}
														else
														{
															chrome.ExecuteScript("document.querySelector('[data-sigil =\"textarea mufi-composer m-textarea-input\"]').value=\"" + text19 + "\"");
															chrome.Click(4, "[data-sigil =\"textarea mufi-composer m-textarea-input\"]");
															chrome.DelayTime(1.0);
															chrome.Click(4, "[name=\"submit\"]");
															chrome.DelayTime(1.0);
														}
													}
													chrome.GotoBackPage();
												}
												num16++;
												SetStatusAccount(indexRow, statusProxy + string.Format(Language.GetValue("Đang tương tác nhóm ") + " ({0}/{1})...", num16, num18));
												chrome.DelayTime(rd.Next(valueInt10, valueInt11 + 1));
											}
											else
											{
												num17++;
												if (num17 == 3)
												{
													break;
												}
											}
											num15++;
										}
									}
									int num19;
									do
									{
										chrome.GotoURL("https://m.facebook.com/" + text18);
										num19 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
									}
									while (num19 == 1);
									if (new List<int> { -3, -2, -1, 2 }.Contains(num19))
									{
										return -1;
									}
									chrome.GotoURL(text15.Replace("{uid}", text18));
									string text21 = "#mcomposer_textarea";
									if (chrome.CheckExistElement(text21, 10.0) == 1)
									{
										if (valueBool11)
										{
											string text22 = "";
											if (list.Count == 0)
											{
												list = CloneList(valueList3);
											}
											text22 = list[rd.Next(0, list.Count)];
											list.Remove(text22);
											text22 = text22.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
											text22 = text22.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
											text22 = MCommon.Common.SpinText(text22, rd);
											if (text22.Trim() != "")
											{
												chrome.DelayTime(2.0);
												chrome.ExecuteScript("document.querySelector('" + text21 + "').value=\"" + text22 + "\"");
												chrome.DelayTime(2.0);
												chrome.SendKeys(4, text21, " ");
											}
										}
										string uRL2 = chrome.GetURL();
										bool flag2 = false;
										if (chrome.Click(4, "[data-sigil*=\"post-button\"]") == 1)
										{
											for (int n = 0; n < 30; n++)
											{
												if (chrome.GetURL() != uRL2)
												{
													flag2 = !Convert.ToBoolean(chrome.ExecuteScript("var check='false'; if(document.querySelector('#m_home_notice')!=null) check=document.querySelector('#m_home_notice').innerText!=''; return check;").ToString());
													break;
												}
												chrome.DelayTime(1.0);
											}
											if (CommonChrome.CheckFacebookBlocked(chrome))
											{
												return -4;
											}
											if (flag2)
											{
												num++;
												if (num >= num13)
												{
													break;
												}
												SetStatusAccount(indexRow, statusProxy + string.Format(Language.GetValue("Đang share nhóm") + " ({0}/{1})...", num, num13));
												chrome.DelayRandom(valueInt, valueInt2);
											}
										}
									}
								}
							}
						}
						if (valueBool7)
						{
							num = 0;
							if (chrome.CheckChromeClosed())
							{
								return -2;
							}
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang lấy danh sách page..."));
							List<string> listPage2 = CommonChrome.GetListPage(chrome);
							int num20 = rd.Next(valueInt6, valueInt7 + 1);
							string text23 = "";
							if (listPage2.Count > 0)
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang share page") + "...");
								for (int num21 = 0; num21 < num20 + 10; num21++)
								{
									if (listPage2.Count == 0)
									{
										break;
									}
									text23 = listPage2[rd.Next(0, listPage2.Count)];
									listPage2.Remove(text23);
									int num22;
									do
									{
										chrome.GotoURL("https://m.facebook.com/" + text23 + "/posts");
										num22 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
									}
									while (num22 == 1);
									if (new List<int> { -3, -2, -1, 2 }.Contains(num22))
									{
										return -1;
									}
									chrome.GotoURL(text15.Replace("{uid}", text23));
									string text24 = "#mcomposer_textarea";
									if (chrome.CheckExistElement(text24, 10.0) != 1)
									{
										continue;
									}
									if (valueBool11)
									{
										string text25 = "";
										if (list.Count == 0)
										{
											list = CloneList(valueList3);
										}
										text25 = list[rd.Next(0, list.Count)];
										list.Remove(text25);
										text25 = text25.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
										text25 = text25.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
										text25 = MCommon.Common.SpinText(text25, rd);
										text25 = GetIconFacebook.ProcessString(text25, rd);
										if (text25.Trim() != "")
										{
											chrome.DelayTime(2.0);
											chrome.ExecuteScript("document.querySelector('" + text24 + "').value=\"" + text25 + "\"");
											chrome.DelayTime(2.0);
											chrome.SendKeys(4, text24, " ");
										}
									}
									string uRL3 = chrome.GetURL();
									bool flag3 = false;
									if (chrome.Click(4, "[data-sigil*=\"post-button\"]") != 1)
									{
										continue;
									}
									for (int num23 = 0; num23 < 30; num23++)
									{
										if (chrome.GetURL() != uRL3)
										{
											flag3 = !Convert.ToBoolean(chrome.ExecuteScript("var check='false'; if(document.querySelector('#m_home_notice')!=null) check=document.querySelector('#m_home_notice').innerText!=''; return check;").ToString());
											break;
										}
										chrome.DelayTime(1.0);
									}
									if (CommonChrome.CheckFacebookBlocked(chrome))
									{
										return -4;
									}
									if (flag3)
									{
										num++;
										if (num >= num20)
										{
											break;
										}
										SetStatusAccount(indexRow, statusProxy + string.Format(Language.GetValue("Đang share page") + " ({0}/{1})...", num, num20));
										chrome.DelayRandom(valueInt, valueInt2);
									}
								}
							}
						}
					}
				}
				else
				{
					if (valueBool)
					{
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Share tường") + "...");
						if (chrome.CheckChromeClosed())
						{
							return -2;
						}
						if (text.StartsWith("https://www.facebook.com/"))
						{
							text = text.Replace("https://www.facebook.com/", "https://m.facebook.com/");
						}
						chrome.GotoURL(text);
						chrome.DelayTime(1.0);
						string text26 = "";
						if (valueBool11)
						{
							if (list.Count == 0)
							{
								list = CloneList(valueList3);
							}
							text26 = list[rd.Next(0, list.Count)];
							list.Remove(text26);
							text26 = text26.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
							text26 = text26.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
							text26 = MCommon.Common.SpinText(text26, rd);
							text26 = GetIconFacebook.ProcessString(text26, rd);
							string newValue4 = chrome.ExecuteScript("return document.title").ToString();
							text26 = text26.Replace("[u]", newValue4);
						}
						if (chrome.CheckExistElement("[data-sigil=\"share-popup\"]", 10.0) == 1)
						{
							chrome.Click(4, "[data-sigil=\"share-popup\"]");
							chrome.DelayTime(1.0);
							if (chrome.CheckExistElement("#share-with-message-button", 5.0) == 1)
							{
								chrome.Click(1, "share-with-message-button");
								chrome.DelayTime(1.0);
								if (chrome.CheckExistElement("#share_msg_input", 5.0) == 1)
								{
									chrome.ExecuteScript("document.querySelector('#share_msg_input').value=\"" + text26 + "\"");
									chrome.DelayTime(2.0);
									chrome.Click(1, "share_msg_input");
									chrome.DelayTime(0.5);
									chrome.Click(1, "share_submit");
									chrome.DelayTime(3.0);
								}
							}
						}
						if (CommonChrome.CheckFacebookBlocked(chrome))
						{
							return -4;
						}
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đã share tường xong!"));
						chrome.DelayRandom(valueInt, valueInt2);
					}
					if (valueBool2)
					{
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang lấy danh sách nhóm..."));
						List<string> listGroup3 = CommonChrome.GetListGroup(chrome);
						list4 = ((!valueBool4) ? listGroup3.Select((string x) => x).ToList() : GetGroupKhongKiemDuyetv2(chrome, listGroup3));
						if (valueBool5)
						{
							list4.Sort((string x, string y) => int.Parse(y.Split('|')[2]).CompareTo(int.Parse(x.Split('|')[2])));
						}
						else
						{
							list4 = list4.OrderBy((string t) => Guid.NewGuid()).ToList();
						}
						if (valueInt3 == 1)
						{
							listGroup3 = MCommon.Common.CloneList(list4);
							list4 = listGroup3.Where((string x) => lstNhomTuNhap.Contains(x.Split('|')[0])).ToList();
						}
						num = 0;
						string text27 = "";
						string text28 = "";
						int num24 = rd.Next(valueInt4, valueInt5 + 1);
						if (list4.Count > 0)
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang share nhóm") + "...");
							int num25 = 0;
							while (num25 < num24)
							{
								while (list4.Count != 0)
								{
									text27 = list4[0];
									list4.Remove(text27);
									text27 = text27.Split('|')[0];
									if (valueBool6)
									{
										lock (lstGroupShared)
										{
											if (lstGroupShared.Contains(text27))
											{
												continue;
											}
											lstGroupShared.Add(text27);
											goto IL_50ad;
										}
									}
									goto IL_50ad;
								}
								break;
							IL_50ad:
								if (valueBool12)
								{
									int num26 = 0;
									int num27 = 0;
									int num28 = 0;
									string text29 = "";
									int num29 = rd.Next(valueInt8, valueInt9 + 1);
									chrome.GotoURL("https://m.facebook.com/" + text27);
									chrome.DelayTime(3.0);
									while (num27 < num29)
									{
										string text30 = chrome.ExecuteScript("return (document.querySelectorAll('article footer div div:nth-child(2) div:nth-child(1) a')[" + num26 + "].getAttribute('data-uri')!=null)+''").ToString();
										if (text30 == "")
										{
											text30 = "false";
										}
										if (Convert.ToBoolean(text30))
										{
											chrome.ScrollSmooth("document.querySelectorAll('article footer div div:nth-child(2) div:nth-child(1) a')[" + num26 + "]");
											chrome.DelayTime(1.0);
											if (valueBool13 && Convert.ToInt32(chrome.ExecuteScript("return JSON.parse(document.querySelectorAll('article footer div div:nth-child(2) div:nth-child(1) a')[" + num26 + "].getAttribute('data-store')).reaction").ToString()) == 0)
											{
												chrome.ExecuteScript("document.querySelectorAll('article footer div div:nth-child(2) div:nth-child(1) a')[" + num26 + "].click()");
												chrome.DelayTime(1.0);
											}
											if (valueBool14)
											{
												if (list2.Count == 0)
												{
													list2 = CloneList(valueList2);
												}
												text29 = list2[rd.Next(0, list2.Count)];
												text29 = MCommon.Common.SpinText(text29, rd);
												text29 = GetIconFacebook.ProcessString(text29, rd);
												chrome.Click(4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]", num26);
												chrome.DelayTime(1.0);
												if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
												{
													if (!MCommon.Common.CheckStringIsContainIcon(text29))
													{
														chrome.SendKeys(4, "[data-sigil =\"textarea mufi-composer m-textarea-input\"]", text29, 0.1);
														chrome.DelayTime(1.0);
														chrome.Click(4, "[name=\"submit\"]");
														chrome.DelayTime(1.0);
													}
													else
													{
														chrome.ExecuteScript("document.querySelector('[data-sigil =\"textarea mufi-composer m-textarea-input\"]').value=\"" + text29 + "\"");
														chrome.Click(4, "[data-sigil =\"textarea mufi-composer m-textarea-input\"]");
														chrome.DelayTime(1.0);
														chrome.Click(4, "[name=\"submit\"]");
														chrome.DelayTime(1.0);
													}
												}
												chrome.GotoBackPage();
											}
											num27++;
											SetStatusAccount(indexRow, statusProxy + string.Format(Language.GetValue("Đang tương tác nhóm ") + " ({0}/{1})...", num27, num29));
											chrome.DelayTime(rd.Next(valueInt10, valueInt11 + 1));
										}
										else
										{
											num28++;
											if (num28 == 3)
											{
												break;
											}
										}
										num26++;
									}
								}
								int num30;
								do
								{
									if (text.StartsWith("https://www.facebook.com/"))
									{
										text = text.Replace("https://www.facebook.com/", "https://m.facebook.com/");
									}
									chrome.GotoURL(text);
									chrome.DelayTime(1.0);
									num30 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
								}
								while (num30 == 1);
								if (new List<int> { -3, -2, -1, 2 }.Contains(num30))
								{
									return -1;
								}
								if (valueBool11)
								{
									if (list.Count == 0)
									{
										list = CloneList(valueList3);
									}
									text28 = list[rd.Next(0, list.Count)];
									list.Remove(text28);
									text28 = text28.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
									text28 = text28.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
									text28 = MCommon.Common.SpinText(text28, rd);
									text28 = GetIconFacebook.ProcessString(text28, rd);
									string newValue5 = chrome.ExecuteScript("return document.title").ToString();
									text28 = text28.Replace("[u]", newValue5);
								}
								if (chrome.CheckExistElement("[data-sigil=\"share-popup\"]", 10.0) == 1)
								{
									chrome.Click(4, "[data-sigil=\"share-popup\"]");
									chrome.DelayTime(1.0);
									if (chrome.CheckExistElement("[data-sigil=\"touchable touchable share-in-a-group-button\"]", 5.0) == 1)
									{
										chrome.Click(4, "[data-sigil=\"touchable touchable share-in-a-group-button\"]");
										chrome.DelayTime(1.0);
										if (chrome.CheckExistElement("[name=\"group_target\"]", 10.0) == 1)
										{
											chrome.ExecuteScript("document.querySelector('[name=\"group_target\"]').value=\"" + text27 + "\"");
											chrome.DelayTime(1.0);
											chrome.ExecuteScript("document.querySelector('#share_msg_input').value=\"" + text28 + "\"");
											chrome.DelayTime(2.0);
											chrome.Click(1, "share_msg_input");
											chrome.DelayTime(0.5);
											chrome.Click(1, "share_submit");
											chrome.DelayTime(1.0);
										}
									}
								}
								if (!CommonChrome.CheckFacebookBlocked(chrome))
								{
									num++;
									SetStatusAccount(indexRow, statusProxy + string.Format(Language.GetValue("Đang share nhóm") + " ({0}/{1})...", num, num24));
									chrome.DelayRandom(valueInt, valueInt2);
									num25++;
									continue;
								}
								return -4;
							}
						}
					}
					if (valueBool7)
					{
						num = 0;
						if (chrome.CheckChromeClosed())
						{
							return -2;
						}
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang lấy danh sách page..."));
						List<string> listPage3 = CommonChrome.GetListPage(chrome);
						int num31 = rd.Next(valueInt6, valueInt7 + 1);
						string text31 = "";
						if (listPage3.Count > 0)
						{
							for (int num32 = 0; num32 < num31; num32++)
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang share page") + "...");
								if (listPage3.Count == 0)
								{
									break;
								}
								text31 = listPage3[rd.Next(0, listPage3.Count)];
								listPage3.Remove(text31);
								int num33;
								do
								{
									if (text.StartsWith("https://www.facebook.com/"))
									{
										text = text.Replace("https://www.facebook.com/", "https://m.facebook.com/");
									}
									chrome.GotoURL(text);
									chrome.DelayTime(1.0);
									num33 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
								}
								while (num33 == 1);
								if (new List<int> { -3, -2, -1, 2 }.Contains(num33))
								{
									return -1;
								}
								string text32 = "";
								if (valueBool11)
								{
									if (list.Count == 0)
									{
										list = CloneList(valueList3);
									}
									text32 = list[rd.Next(0, list.Count)];
									list.Remove(text32);
									text32 = text32.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
									text32 = text32.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
									text32 = MCommon.Common.SpinText(text32, rd);
									text32 = GetIconFacebook.ProcessString(text32, rd);
								}
								if (chrome.CheckExistElement("[data-sigil=\"share-popup\"]", 10.0) == 1)
								{
									chrome.Click(4, "[data-sigil=\"share-popup\"]");
									chrome.DelayTime(1.0);
									if (chrome.CheckExistElement("#share-with-message-button", 5.0) == 1)
									{
										chrome.Click(1, "share-with-message-button");
										chrome.DelayTime(1.0);
										if (chrome.CheckExistElement("[data-sigil=\"chevron\"]", 5.0) == 1)
										{
											chrome.Click(4, "[data-sigil=\"chevron\"]");
											chrome.DelayTime(1.0);
											if (chrome.CheckExistElement("#modalDialog > div > div > div > div:nth-child(2) > a:nth-child(4)") == 1)
											{
												chrome.Click(4, "#modalDialog > div > div > div > div:nth-child(2) > a:nth-child(4)");
												chrome.DelayTime(1.0);
												chrome.Select(2, "page_target", text31);
												chrome.DelayTime(1.0);
												chrome.ExecuteScript("document.querySelector('#share_msg_input').value=\"" + text32 + "\"");
												chrome.DelayTime(2.0);
												chrome.Click(1, "share_msg_input");
												chrome.DelayTime(1.0);
												chrome.Click(1, "share_submit");
												chrome.DelayTime(3.0);
											}
										}
									}
								}
								if (CommonChrome.CheckFacebookBlocked(chrome))
								{
									return -4;
								}
								num++;
								if (num >= num31)
								{
									break;
								}
								SetStatusAccount(indexRow, statusProxy + string.Format(Language.GetValue("Đang share page") + " ({0}/{1})...", num, num31));
								chrome.DelayRandom(valueInt, valueInt2);
							}
						}
					}
				}
			}
			catch
			{
			}
			return num;
		}

		private string GetIdPostFromLink(string link)
		{
			string text = "";
			if (!link.EndsWith("/"))
			{
				link += "/";
			}
			List<string> list = new List<string> { "story_fbid=(.*?)&", "permalink/(.*?)/", "v=(.*?)&", "v=(.*?)/", "videos/(.*?)/", "posts/(.*?)/", "posts/(.*?)\\?", "view_tray_pagination/(.*?)/", "fbid=(.*?)&" };
			for (int i = 0; i < list.Count; i++)
			{
				text = Regex.Match(link, list[i].Replace("(.*?)", "\\d+")).Value;
				if (text != "")
				{
					text = text.Replace(list[i].Split(new string[1] { "(.*?)" }, StringSplitOptions.None)[0], "");
					text = text.Replace(list[i].Split(new string[1] { "(.*?)" }, StringSplitOptions.None)[1], "");
					text = text.Replace("?", "");
					break;
				}
			}
			if (text == "" && link.Contains("photos"))
			{
				text = Regex.Match(link, "/\\d+/").Value;
				text = text.Replace("/", "");
			}
			return text;
		}

		private int HDNghiGiaiLao(int indexRow, string statusProxy, int delayFrom, int delayTo, string tenHanhDong)
		{
			//Discarded unreachable code: IL_0108, IL_0115
			try
			{
				int num = rd.Next(delayTo, delayTo + 1);
				if (num > 0)
				{
					int tickCount = Environment.TickCount;
					while ((Environment.TickCount - tickCount) / 1000 - num < 0 && !isStop)
					{
						SetStatusAccount(indexRow, statusProxy + string.Format(Language.GetValue("Đang {0}, đợi {{time}}s..."), tenHanhDong).Replace("{time}", (num - (Environment.TickCount - tickCount) / 1000).ToString()));
						MCommon.Common.DelayTime(0.5);
					}
				}
				return 1;
			}
			catch
			{
			}
			return 0;
		}

		private void ScreenCaptureError(Chrome chrome, string uid, int type)
		{
			//Discarded unreachable code: IL_016a, IL_0177
			try
			{
				if (chrome != null)
				{
					string text = Application.StartupPath + "\\log_capture";
					switch (type)
					{
						case 0:
							text += "\\checkpoint";
							break;
						case 1:
							text += "\\loginfail";
							break;
						case 2:
							text += "\\disconnect";
							break;
					}
					MCommon.Common.CreateFolder(text);
					chrome.ScreenCapture(text, uid);
					File.WriteAllText(text + "\\" + uid + ".txt", chrome.GetURL());
					File.WriteAllText(text + "\\" + uid + ".html", chrome.GetPageSource());
				}
			}
			catch
			{
			}
		}

		private bool LinkToInstagram(Chrome chrome)
		{
			//Discarded unreachable code: IL_046d, IL_0482, IL_04a2, IL_04af
			bool flag = false;
			try
			{
				chrome.GotoURL("https://www.instagram.com/");
				DelayThaoTacNho();
				switch (chrome.CheckExistElements(10.0, "[href=\"/accounts/activity/\"]", "form button"))
				{
					case 1:
						flag = true;
						break;
					case 2:
						chrome.Click(4, "form button", 1);
						switch (chrome.CheckExistElements(10.0, "[href=\"/accounts/activity/\"]", "[name=\"__CONFIRM__\"]", "[name=\"username\"]"))
						{
							case 1:
								break;
							case 2:
								{
									chrome.DelayTime(1.0);
									chrome.Click(2, "__CONFIRM__");
									string text = "minsoft" + MCommon.Common.CreateRandomString(3, rd) + MCommon.Common.CreateRandomString(5, rd);
									chrome.SendKeys(2, "username", text);
									MCommon.Common.DelayTime(1.0);
									string text2 = "Minsoft_" + MCommon.Common.CreateRandomString(6, rd);
									chrome.SendKeys(2, "password", text2);
									DelayThaoTacNho();
									chrome.Click(4, "form button[type=\"submit\"]");
									DelayThaoTacNho();
									if (chrome.CheckExistElement("[href=\"/accounts/activity/\"]", 10.0) == 1)
									{
										flag = true;
									}
									if (!flag && chrome.CheckExistElement("[type=\"button\"]") == 1)
									{
										flag = true;
									}
									if (flag)
									{
										lock (lock_fileig)
										{
											File.AppendAllText("accountIG.txt", text + "|" + text2 + Environment.NewLine);
										}
									}
									break;
								}
							case 3:
								break;
						}
						break;
				}
			}
			catch
			{
			}
			return flag;
		}

		private void Logout(Chrome chrome)
		{
			//Discarded unreachable code: IL_022c, IL_025b
			try
			{
				CommonChrome.GoToHome(chrome);
				if (chrome.CheckExistElement("#bookmarks_jewel a", 3.0) != 1)
				{
					return;
				}
				DelayThaoTacNho();
				chrome.Click(4, "#bookmarks_jewel a");
				DelayThaoTacNho(1);
				if (chrome.CheckExistElementv2("document.querySelector('[data-sigil=\"logout\"]')", 3.0) == 1)
				{
					chrome.ScrollSmooth("document.querySelector('[data-sigil=\"logout\"]')");
					DelayThaoTacNho(1);
					chrome.Click(4, "[data-sigil=\"logout\"]");
					DelayThaoTacNho();
					if (chrome.CheckExistElement("[name=\"m_savepass\"]", 3.0) == 1)
					{
						chrome.Click(2, "m_savepass");
						DelayThaoTacNho();
					}
				}
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(chrome, ex, "Logout error");
			}
		}

		private bool LogoutOldDevice(Chrome chrome)
		{
			//Discarded unreachable code: IL_0110, IL_011d
			bool result = false;
			try
			{
				chrome.GotoURL("https://m.facebook.com/settings/security_login/sessions/log_out_all/confirm/");
				chrome.DelayTime(1.0);
				string text = "";
				for (int i = 0; i < 10; i++)
				{
					text = chrome.ExecuteScript("return document.documentElement.innerHTML.match(new RegExp('/security/settings/sessions/log_out_all/(.*?)\"'))[0].replace('\"','').split('amp;').join('');").ToString();
					if (text != "")
					{
						chrome.GotoURL("https://m.facebook.com" + text);
						result = true;
						break;
					}
					chrome.DelayTime(1.0);
				}
			}
			catch
			{
			}
			return result;
		}

		private bool AllowFollow(Chrome chrome)
		{
			//Discarded unreachable code: IL_0114, IL_0121
			bool result = false;
			try
			{
				chrome.GotoURL("https://m.facebook.com/settings/subscribe/");
				chrome.DelayTime(1.0);
				if (chrome.CheckExistElement("[data-sigil=\"audience-options-list\"]>label", 10.0) == 1 && !Convert.ToBoolean(chrome.ExecuteScript("return document.querySelector('[data-sigil=\"audience-options-list\"]>label').getAttribute('data-sigil').includes('selected')+''")) && chrome.Click(4, "[data-sigil=\"audience-options-list\"]>label") == 1)
				{
					result = true;
				}
			}
			catch
			{
			}
			return result;
		}

		public int HDRoiNhom(int indexRow, string statusProxy, Chrome chrome, string cookie, int nudSoLuongFrom, int nudSoLuongTo, int nudDelayFrom, int nudDelayTo, int typeRoiNhom, bool ckbDieuKienThanhVien, int nudThanhVienToiDa, bool ckbDieuKienTuKhoa, List<string> lstTuKhoa, List<string> lstIDNhomGiuLai, bool ckbDieuKienId, List<string> lstIdNhomRoi, string proxy, int typeProxy, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_05e8, IL_0619
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
			string text = "";
			List<string> list = new List<string>();
			try
			{
				string useragent = chrome.GetUseragent().Split('$')[0];
				cookie = chrome.GetCookieFromChrome();
				list = GetListIdGroupForLeave(chrome, cookie, useragent, proxy, typeProxy, typeRoiNhom, ckbDieuKienThanhVien, nudThanhVienToiDa, ckbDieuKienTuKhoa, lstTuKhoa, ckbDieuKienId, lstIdNhomRoi);
				if (lstIDNhomGiuLai.Count > 0)
				{
					list = list.Except(lstIDNhomGiuLai).ToList();
				}
				if (list.Count != 0)
				{
					int num3 = 0;
					while (num < num2 && list.Count != 0)
					{
						text = list[rd.Next(0, list.Count)];
						list.Remove(text);
						int num4;
						do
						{
							chrome.GotoURL("https://m.facebook.com/groups/" + text + "?view=info");
							DelayThaoTacNho();
							num4 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						}
						while (num4 == 1);
						if (new List<int> { -3, -2, -1, 2 }.Contains(num4))
						{
							return -1;
						}
						for (int i = 0; i < 3; i++)
						{
							string cssSelector = chrome.GetCssSelector("a", "href", "/group/leave/");
							if (cssSelector != "")
							{
								chrome.Click(4, cssSelector);
								chrome.DelayTime(3.0);
								break;
							}
							chrome.DelayTime(2.0);
						}
						if (chrome.CheckExistElement("[name=\"confirm\"]", 3.0) == 1)
						{
							num3 = 0;
							DelayThaoTacNho();
							chrome.Click(4, "[name=\"confirm\"]");
							DelayThaoTacNho();
							num++;
							if (tenHanhDong == "")
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang Rời nhóm") + $" ({num}/{num2})...");
							}
							else
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
							}
							chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
						}
						else
						{
							num3++;
							if (num3 == 20)
							{
								break;
							}
						}
					}
				}
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(chrome, ex, "Error Leave Group");
			}
			return num;
		}

		private bool CheckStringIsExistInList(string s, List<string> lst)
		{
			//Discarded unreachable code: IL_0076, IL_0083
			bool result = false;
			try
			{
				for (int i = 0; i < lst.Count; i++)
				{
					if (MCommon.Common.ConvertToUnSign(s).ToLower().Contains(MCommon.Common.ConvertToUnSign(lst[i]).ToLower()))
					{
						result = true;
						break;
					}
				}
			}
			catch
			{
			}
			return result;
		}

		private List<string> GetListIdGroupForLeave(Chrome chrome, string cookie, string useragent, string proxy, int typeProxy, int typeRoiNhom, bool ckbDieuKienThanhVien, int nudThanhVienToiDa, bool ckbDieuKienTuKhoa, List<string> lstTuKhoa, bool ckbDieuKienId, List<string> lstIdNhomRoi)
		{
			//Discarded unreachable code: IL_03bd, IL_03ca, IL_03e1, IL_03f6, IL_03fd, IL_040a
			List<string> list = new List<string>();
			try
			{
				if (typeRoiNhom == 2)
				{
					lstTuKhoa = lstTuKhoa.ConvertAll((string d) => d.ToLower());
				}
				string input = CommonChrome.RequestGet(chrome, "https://m.facebook.com/help", "https://m.facebook.com");
				string value = Regex.Match(input, "fb_dtsg\" value=\"(.*?)\"").Groups[1].Value;
				string value2 = Regex.Match(chrome.GetCookieFromChrome(), "c_user=(.*?);").Groups[1].Value;
				input = CommonChrome.RequestPost(chrome, "https://www.facebook.com/api/graphql/", "q=nodes(" + value2 + "){groups{nodes{id,name,viewer_post_status,visibility,group_member_profiles{count}}}}&fb_dtsg=" + value, "https://www.facebook.com/api/graphql/");
				JObject jObject = JObject.Parse(input);
				foreach (JToken item in (IEnumerable<JToken>)jObject[value2]["groups"]["nodes"])
				{
					try
					{
						switch (typeRoiNhom)
						{
							case 0:
								list.Add(item["id"].ToString());
								continue;
							case 1:
								if (item["viewer_post_status"].ToString() == "CAN_POST_AFTER_APPROVAL")
								{
									list.Add(item["id"].ToString());
								}
								continue;
						}
						string text = item["id"].ToString();
						string s = item["name"].ToString();
						string value3 = item["group_member_profiles"]["count"].ToString();
						if ((ckbDieuKienThanhVien && Convert.ToInt32(value3) < nudThanhVienToiDa) || (ckbDieuKienTuKhoa && CheckStringIsExistInList(s, lstTuKhoa)) || (ckbDieuKienId && CheckStringIsExistInList(text, lstIdNhomRoi)))
						{
							list.Add(text);
						}
					}
					catch
					{
					}
				}
			}
			catch
			{
			}
			return list;
		}

		public int HDKetBanThanhVienNhom(int indexRow, string statusProxy, Chrome chrome, int nudSoLuongFrom, int nudSoLuongTo, int nudDelayFrom, int nudDelayTo, List<string> lstUid, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0452, IL_045f
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			int num5 = 0;
			try
			{
				num2 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
				num4 = ((num2 >= 100) ? 10 : 5);
				string text = "";
				while (lstUid.Count > 0)
				{
					text = lstUid[rd.Next(0, lstUid.Count)];
					lstUid.Remove(text);
					int num6;
					do
					{
						chrome.GotoURL("https://m.facebook.com/browse/group/members/?id=" + text + "&start=0&listType=list_nonfriend_nonadmin");
						DelayThaoTacNho();
						num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					}
					while (num6 == 1);
					if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
					{
						return -1;
					}
					if (chrome.CheckExistElement("[data-sigil=\"m-add-friend-flyout\"]") != 1)
					{
						continue;
					}
					num5 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"m-add-friend-flyout\"]').length+''"));
					int num7 = 0;
					while (num7 < num5)
					{
						chrome.ScrollSmooth("document.querySelectorAll('[data-sigil=\"m-add-friend-flyout\"]')[" + num7 + "]");
						DelayThaoTacNho();
						chrome.Click(4, "[data-sigil=\"m-add-friend-flyout\"] a", num7);
						DelayThaoTacNho();
						num3 = (CommonChrome.SkipNotifyWhenAddFriend(chrome) ? (num3 + 1) : 0);
						if (num3 < num4)
						{
							num++;
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
							if (num < num2)
							{
								chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
								num7++;
								continue;
							}
						}
						goto end_IL_0098;
					}
				}
			end_IL_0098:;
			}
			catch
			{
			}
			return num;
		}

		public int HDThamGiaNhomTuKhoa(int indexRow, string statusProxy, Chrome chrome, int nudSoLuongFrom, int nudSoLuongTo, int nudDelayFrom, int nudDelayTo, List<string> lstTuKhoa, bool ckbTuDongTraLoiCauHoi, List<string> lstCauTraLoi, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0768, IL_0775
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			lstTuKhoa = MCommon.Common.RemoveEmptyItems(lstTuKhoa);
			lstCauTraLoi = MCommon.Common.RemoveEmptyItems(lstCauTraLoi);
			List<string> list = CloneList(lstCauTraLoi);
			try
			{
				int num2 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
				string text = "";
				int num3 = 0;
				int num4 = 0;
				string text2 = "";
				if (lstTuKhoa.Count > 0)
				{
					text = lstTuKhoa[rd.Next(0, lstTuKhoa.Count)];
					lstTuKhoa.Remove(text);
					num3 = 0;
					while (true)
					{
					IL_0150:
						CommonChrome.GoToSearchGroup(chrome, text, setting_general.GetValueInt("tocDoGoVanBan"));
						int num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num5 == 1)
						{
							continue;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
						{
							return -1;
						}
						while (true)
						{
							CommonChrome.ScrollRandom(chrome);
							int num6 = 0;
							while (!(chrome.ExecuteScript("return document.querySelectorAll('[data-nt-switch-case=\\'{\\\"v\\\":\\\"default\\\"}\\']')[" + num3 + "].getAttribute('style').includes('none')+''").ToString() == "false") && !(chrome.ExecuteScript("return (document.querySelectorAll('[data-nt-switch-case=\\'{\\\"v\\\":\\\"default\\\"}\\']')[" + num3 + "].getAttribute('style')==null)+''").ToString() == "true"))
							{
								num6++;
								if (num6 != 10)
								{
									num3++;
									continue;
								}
								goto end_IL_00b1;
							}
							if (num >= num2)
							{
								break;
							}
							if (Base.rd.Next(1, 100) % 1 == 0)
							{
								chrome.ScrollSmooth("document.querySelectorAll('[data-nt-switch-case=\\'{\\\"v\\\":\\\"default\\\"}\\']')[" + num3 + "]");
								DelayThaoTacNho();
								chrome.Click(4, "[data-nt-switch-case='{\\\"v\\\":\\\"default\\\"}']", num3);
								DelayThaoTacNho();
								if (ckbTuDongTraLoiCauHoi && chrome.CheckExistElement("textarea", 5.0) == 1)
								{
									DelayThaoTacNho();
									num4 = chrome.CountElement("textarea");
									chrome.ScrollSmooth("document.querySelector('textarea')");
									DelayThaoTacNho();
									for (int i = 0; i < num4; i++)
									{
										if (list.Count == 0)
										{
											list = CloneList(lstCauTraLoi);
										}
										text2 = list[rd.Next(0, list.Count)];
										text2 = MCommon.Common.SpinText(text2, rd);
										list.Remove(text2);
										chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, "#root > div > div > div:nth-child(2) > div:nth-child(" + (i + 2) + ") > div > textarea", text2, 0.1);
										DelayThaoTacNho();
									}
									if (chrome.Click(4, "[use=\"primary\"]") == 1)
									{
										DelayThaoTacNho(2);
									}
								}
								num++;
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
								if (num >= num2)
								{
									break;
								}
								chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
								goto IL_0150;
							}
							num3++;
						}
						break;
					}
				}
			end_IL_00b1:;
			}
			catch
			{
			}
			return num;
		}

		public int HDThamGiaNhomTuKhoav2(int indexRow, string statusProxy, Chrome chrome, int nudSoLuongFrom, int nudSoLuongTo, int nudDelayFrom, int nudDelayTo, List<string> lstTuKhoa, bool ckbTuDongTraLoiCauHoi, List<string> lstCauTraLoi, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_08dd, IL_08ea
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = chrome.chrome.Manage().Window.Size.Width;
			int num3 = chrome.chrome.Manage().Window.Size.Height;
			chrome.chrome.Manage().Window.Size = new Size(500, 700);
			lstTuKhoa = MCommon.Common.RemoveEmptyItems(lstTuKhoa);
			lstCauTraLoi = MCommon.Common.RemoveEmptyItems(lstCauTraLoi);
			List<string> list = CloneList(lstCauTraLoi);
			try
			{
				int num4 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
				string text = "";
				int num5 = 0;
				while (true)
				{
				IL_0163:
					chrome.GotoURL("https://www.facebook.com");
					chrome.DelayTime(2.0);
					ClosePopup(chrome);
					while (lstTuKhoa.Count > 0)
					{
						text = lstTuKhoa[rd.Next(0, lstTuKhoa.Count)];
						text = MCommon.Common.SpinText(text, rd);
						lstTuKhoa.Remove(text);
						num5 = 0;
						while (chrome.CheckExistElement("[type=\"search\"]", 5.0) == 1)
						{
							chrome.Click(4, "[type=\"search\"]");
							chrome.DelayTime(1.0);
							chrome.SendKeys(4, "[type=\"search\"]", text, isClick: false);
							chrome.DelayTime(1.0);
							chrome.SendEnter(4, "[type=\"search\"]");
							chrome.DelayTime(1.0);
							if (chrome.CheckExistElement("a[href*=\"/search/groups/\"]", 30.0) != 1)
							{
								break;
							}
							chrome.ScrollSmoothIfNotExistOnScreen("document.querySelector('a[href*=\"/search/groups/\"]')");
							chrome.DelayTime(1.0);
							chrome.Click(4, "a[href*=\"/search/groups/\"]");
							chrome.DelayTime(1.0);
							chrome.Scroll(500, 0);
							chrome.DelayTime(3.0);
							if (chrome.CheckExistElement("[role=\"article\"] [role=\"button\"]", 15.0) != 1)
							{
								break;
							}
							while (true)
							{
								int num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
								if (num6 == 1)
								{
									break;
								}
								if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
								{
									return -1;
								}
								if (!(chrome.ExecuteScript("return document.querySelectorAll('[role=\"article\"] [role=\"button\"]')[" + num5 + "]+''").ToString() != ""))
								{
									goto IL_0163;
								}
								if (Base.rd.Next(1, 100) % 1 != 0)
								{
									goto IL_08bc;
								}
								chrome.ScrollSmooth("document.querySelectorAll('[role=\"article\"] [role=\"button\"]')[" + num5 + "]");
								chrome.DelayTime(1.0);
								while (chrome.Click(4, "[role=\"article\"] [role=\"button\"]", num5) != 1)
								{
								}
								DelayThaoTacNho(2);
								if (Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[role=\"dialog\"]>div:nth-child(3)>div:nth-child(2)>div>div:nth-child(2)>div').length").ToString()) > 0)
								{
									if (ckbTuDongTraLoiCauHoi)
									{
										CommonChrome.AnswerQuestionWhenJoinGroupWWW(chrome, lstCauTraLoi);
										if (chrome.CheckExistElement("[role=\"dialog\"]>div:nth-child(3)>div:nth-child(3)>div:nth-child(3) [role=\"button\"]") == 1)
										{
											chrome.Click(4, "[role=\"dialog\"]>div:nth-child(3)>div:nth-child(3)>div:nth-child(3) [role=\"button\"]");
											chrome.DelayTime(1.0);
										}
									}
									else
									{
										chrome.Click(4, "[role=\"dialog\"]>div:nth-child(3)>div:nth-child(3)>div:nth-child(2) [role=\"button\"]");
										chrome.DelayTime(2.0);
										chrome.Click(4, "[role=\"dialog\"]>div:nth-child(3)>div >div:nth-child(2) [role=\"button\"]");
									}
								}
								num++;
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num4})...");
								if (num < num4)
								{
									chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
									continue;
								}
								goto end_IL_0125;
							}
						}
					IL_08bc:;
					}
					break;
				}
			end_IL_0125:;
			}
			catch
			{
			}
			chrome.chrome.Manage().Window.Size = new Size(num2, num3);
			return num;
		}

		public int HDHuyKetBan(int indexRow, string statusProxy, Chrome chrome, string token, string cookie, int typeHuyKetBan, int nudSoLuongFrom, int nudSoLuongTo, List<string> lstUidNhap, int nudDelayFrom, int nudDelayTo, List<string> lstUidKhongHuyKetBan, string proxy, int typeProxy, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_04aa, IL_04b7
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
			string useragent = chrome.GetUseragent().Split('$')[0];
			cookie = chrome.GetCookieFromChrome();
			if (token == "" || !CommonRequest.CheckLiveToken(cookie, token, useragent, proxy, typeProxy))
			{
				token = CommonChrome.GetTokenEAAAAZ(chrome);
			}
			List<string> list = GetIdFriend(token, cookie, useragent, proxy, typeProxy);
			if (typeHuyKetBan == 1)
			{
				list = MCommon.Common.GetIntersectItemBetweenTwoList(list, lstUidNhap);
			}
			if (lstUidKhongHuyKetBan.Count > 0)
			{
				list = MCommon.Common.GetExceptItemBetweenTwoList(list, lstUidKhongHuyKetBan);
			}
			if (typeHuyKetBan == 1)
			{
				num2 = list.Count;
			}
			if (num2 > 0)
			{
				string text = "";
				try
				{
					if (list.Count == 0)
					{
						return num;
					}
					while (list.Count != 0)
					{
						text = list[rd.Next(0, list.Count)];
						list.Remove(text);
						int num3;
						do
						{
							chrome.GotoURL("https://m.facebook.com/removefriend.php?friend_id=" + text + "&unref=bd_profile_button");
							DelayThaoTacNho();
							num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						}
						while (num3 == 1);
						if (new List<int> { -3, -2, -1, 2 }.Contains(num3))
						{
							return -1;
						}
						if (chrome.CheckExistElement("[name=\"confirm\"]", 10.0) == 1)
						{
							DelayThaoTacNho();
							chrome.Click(2, "confirm");
							num++;
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
							if (num >= num2)
							{
								break;
							}
							chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
						}
					}
				}
				catch
				{
				}
			}
			return num;
		}

		public int HDHuyKetBan2(int indexRow, string statusProxy, Chrome chrome, string token, string cookie, int typeHuyKetBan, int nudSoLuongFrom, int nudSoLuongTo, List<string> lstUidNhap, int nudDelayFrom, int nudDelayTo, List<string> lstUidKhongHuyKetBan, string proxy, int typeProxy, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_02ec, IL_02f9, IL_04ed, IL_04fa, IL_0772, IL_077f
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
			string useragent = chrome.GetUseragent().Split('$')[0];
			cookie = chrome.GetCookieFromChrome();
			if (token == "" || !CommonRequest.CheckLiveToken(cookie, token, useragent, proxy, typeProxy))
			{
				token = CommonChrome.GetTokenEAAAAZ(chrome);
			}
			List<string> list = new List<string>();
			if (typeHuyKetBan == 1)
			{
				list = GetIdFriend(token, cookie, useragent, proxy, typeProxy);
				list = MCommon.Common.GetIntersectItemBetweenTwoList(list, lstUidNhap);
			}
			if (num2 > 0)
			{
				string item = "";
				try
				{
					if (typeHuyKetBan == 0)
					{
						try
						{
							while (true)
							{
							IL_01f6:
								chrome.GotoURL("https://m.facebook.com/friends/center/friends");
								DelayThaoTacNho();
								int num3 = 0;
								while (chrome.ScrollSmooth("document.querySelectorAll('[data-sigil=\"are-friends-popup\"]')[" + num3 + "]") == 1)
								{
									chrome.DelayTime(1.0);
									try
									{
										item = chrome.ExecuteScript("return JSON.parse(document.querySelectorAll('[data-sigil=\"undoable-action\"] [data-sigil=\"touchable check m-cancel-request\"]')[" + num3 + "].getAttribute('data-store')).id").ToString();
									}
									catch
									{
									}
									if (!lstUidKhongHuyKetBan.Contains(item))
									{
										chrome.Click(4, "[data-sigil=\"are-friends-popup\"]", num3);
										chrome.DelayTime(1.0);
										chrome.ExecuteScript("document.querySelector('[data-sigil=\"touchable touchable mflyout-remove-on-click m-unfriend-request\"]').click()");
										int num4 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
										if (num4 == 1)
										{
											goto IL_01f6;
										}
										if (new List<int> { -3, -2, -1, 2 }.Contains(num4))
										{
											return -1;
										}
										num++;
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
										if (num == num2)
										{
											break;
										}
										chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
									}
									num3++;
								}
								break;
							}
						}
						catch
						{
						}
					}
					else
					{
						while (list.Count != 0)
						{
							item = list[rd.Next(0, list.Count)];
							list.Remove(item);
							int num5;
							do
							{
								chrome.GotoURL("https://m.facebook.com/removefriend.php?friend_id=" + item + "&unref=bd_profile_button");
								DelayThaoTacNho();
								num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							}
							while (num5 == 1);
							if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
							{
								return -1;
							}
							if (chrome.CheckExistElement("[name=\"confirm\"]", 10.0) == 1)
							{
								DelayThaoTacNho();
								chrome.Click(2, "confirm");
								num++;
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
								if (num >= num2)
								{
									break;
								}
								chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
							}
						}
					}
				}
				catch
				{
				}
			}
			return num;
		}

		public int HDHuyLoiMoiKetBan(int indexRow, string statusProxy, Chrome chrome, int nudSoLuongFrom, int nudSoLuongTo, int nudDelayFrom, int nudDelayTo, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_03ca, IL_03d7
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
			int num3 = 0;
			int num4 = 0;
			try
			{
				int num5;
				do
				{
					chrome.GotoURL("https://m.facebook.com/friends/center/requests/outgoing/");
					DelayThaoTacNho();
					num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
				}
				while (num5 == 1);
				if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
				{
					return -1;
				}
				if (chrome.CheckExistElement("[data-sigil=\"context-layer-root content-pane\"]", 10.0) == 1)
				{
					if (Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"undoable-action\"]').length").ToString()) == 0)
					{
						return num;
					}
					while (num < num2)
					{
						if (chrome.CheckChromeClosed())
						{
							return -2;
						}
						if (chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"undoable-action\"]')[" + num4 + "].getAttribute('data-sigil')").ToString() != null)
						{
							DelayThaoTacNho();
							chrome.ScrollSmooth("document.querySelectorAll('[data-sigil=\"touchable check m-cancel-request\"]')[" + num4 + "]");
							DelayThaoTacNho();
							chrome.Click(4, "[data-sigil=\"touchable check m-cancel-request\"]", num4);
							num++;
							num4++;
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
							chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
							continue;
						}
						break;
					}
				}
			}
			catch
			{
			}
			return num;
		}

		public List<string> GetNameFriend(string token, string proxy, int typeProxy)
		{
			//Discarded unreachable code: IL_00f3, IL_0108, IL_010f, IL_011c
			List<string> list = new List<string>();
			try
			{
				RequestXNet requestXNet = new RequestXNet("", "", proxy, typeProxy);
				string json = requestXNet.RequestGet("https://graph.facebook.com/v3.0/me/friends?access_token=" + token + "&limit=5000&fields=id,name");
				JObject jObject = JObject.Parse(json);
				foreach (JToken item in (IEnumerable<JToken>)jObject["data"])
				{
					list.Add(item["name"].ToString());
				}
			}
			catch
			{
			}
			return list;
		}

		public int HDMoiBanBeVaoNhom(int indexRow, string statusProxy, Chrome chrome, string token, int nudSoLuongFrom, int nudSoLuongTo, int nudDelayFrom, int nudDelayTo, List<string> lstId, int typeInvite, string proxy, int typeProxy, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0857, IL_0864
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			string text = "";
			int num4 = 0;
			int num5 = 0;
			int num6 = 0;
			try
			{
				int num7 = 0;
				while (num7 < lstId.Count)
				{
					SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong}({num7 + 1}/{lstId.Count})...");
					num6 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
					while (true)
					{
					IL_0157:
						chrome.GotoURL("https://m.facebook.com/groups/members/search/?group_id=" + lstId[num7]);
						DelayThaoTacNho(1);
						int num8 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num8 == 1)
						{
							continue;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num8))
						{
							return -1;
						}
						if (typeInvite == 0)
						{
							string useragent = chrome.GetUseragent().Split('$')[0];
							string cookieFromChrome = chrome.GetCookieFromChrome();
							if (token == "" || !CommonRequest.CheckLiveToken(cookieFromChrome, token, useragent, proxy, typeProxy))
							{
								token = CommonChrome.GetTokenEAAAAZ(chrome);
							}
							List<string> nameFriend = GetNameFriend(token, proxy, typeProxy);
							if (chrome.CheckExistElement("[data-sigil=\" tokenizer-input focus-receiver\"]", 5.0) == 1)
							{
								while (nameFriend.Count > 0)
								{
									num8 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
									if (num8 == 1)
									{
										goto IL_0157;
									}
									if (new List<int> { -3, -2, -1, 2 }.Contains(num8))
									{
										return -1;
									}
									text = nameFriend[rd.Next(0, nameFriend.Count)];
									nameFriend.Remove(text);
									num4 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"tokenizer-input-container\"]>div>span').length").ToString());
									chrome.SendKeys(4, "[data-sigil=\" tokenizer-input focus-receiver\"]", text);
									chrome.DelayTime(0.5);
									chrome.SendEnter(4, "[data-sigil=\" tokenizer-input focus-receiver\"]");
									num5 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"tokenizer-input-container\"]>div>span').length").ToString());
									if (num4 == num5)
									{
										chrome.ClearText(4, "[data-sigil=\" tokenizer-input focus-receiver\"]");
									}
									if (num5 == num6)
									{
										break;
									}
								}
								chrome.Click(4, "[data-testid=\"addSelectedButton\"]");
								DelayThaoTacNho(3);
								if (chrome.CheckExistElement("#addMembersInfoArea>span", 5.0) == 1)
								{
									num += Convert.ToInt32(Regex.Match(chrome.ExecuteScript("return document.querySelector('#addMembersInfoArea>span').innerText").ToString(), "(.*?) ").Groups[1].Value);
								}
							}
						}
						else
						{
							while (true)
							{
								if (chrome.CheckExistElement("[data-sigil=\"touchable efs-item\"]", 10.0) == 1)
								{
									num2 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"touchable efs-item\"]').length").ToString());
									if (num >= num6)
									{
										break;
									}
									num8 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
									if (num8 == 1)
									{
										goto IL_0157;
									}
									if (new List<int> { -3, -2, -1, 2 }.Contains(num8))
									{
										return -1;
									}
									int num9 = 0;
									while (true)
									{
										if (num9 >= num2)
										{
											chrome.Refresh();
											break;
										}
										chrome.Click(4, "[data-sigil=\"touchable efs-item\"]");
										num++;
										if (num < num6)
										{
											chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
											num9++;
											continue;
										}
										goto end_IL_00b6;
									}
									continue;
								}
								num3++;
								if (num3 != 1)
								{
									chrome.Refresh();
									continue;
								}
								goto end_IL_00b6;
							}
						}
						num7++;
						break;
					}
				}
			end_IL_00b6:;
			}
			catch
			{
			}
			return num;
		}

		public int HDPhanHoiTinNhan(int indexRow, string statusProxy, Chrome chrome, int nudSoLuongFrom, int nudSoLuongTo, int nudDelayFrom, int nudDelayTo, List<string> lstTinNhan, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0861, IL_086e
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
			int num3 = 0;
			string text = "";
			List<string> list = CloneList(lstTinNhan);
			try
			{
				while (true)
				{
				IL_00cd:
					if (CommonChrome.GoToMessagesUnread(chrome) == -2)
					{
						return -2;
					}
					int num4 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num4 == 1)
					{
						continue;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num4))
					{
						return -1;
					}
					int num5 = 0;
					while (true)
					{
						if (num5 < 5 && chrome.CheckExistElement("#see_older_threads", 3.0) == 1)
						{
							num3 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('#threadlist_rows a').length").ToString()) - 1;
							if (num3 >= num2)
							{
								break;
							}
							chrome.Click(1, "see_older_threads");
							DelayThaoTacNho();
							num5++;
							continue;
						}
						num3 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('#threadlist_rows a').length").ToString());
						if (num3 != 0)
						{
							break;
						}
						return num;
					}
					for (int i = 0; i < num3; i++)
					{
						if (num >= num2)
						{
							break;
						}
						num4 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num4 == 1)
						{
							goto IL_00cd;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num4))
						{
							return -1;
						}
						chrome.Click(4, "#threadlist_rows a", i);
						DelayThaoTacNho();
						if (chrome.CheckExistElement("[data-sigil=\"m-textarea-input photo-textarea\"]", 10.0) == 1)
						{
							if (list.Count == 0)
							{
								list = CloneList(lstTinNhan);
							}
							text = list[rd.Next(0, list.Count)];
							list.Remove(text);
							text = MCommon.Common.SpinText(text, rd);
							text = GetIconFacebook.ProcessString(text, rd);
							string newValue = chrome.ExecuteScript("return document.title.split('-')[0]").ToString();
							text = text.Replace("[u]", newValue);
							if (!MCommon.Common.CheckStringIsContainIcon(text))
							{
								chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, "[data-sigil=\"m-textarea-input photo-textarea\"]", text + " ", 0.1);
								DelayThaoTacNho();
							}
							else
							{
								chrome.ExecuteScript("document.querySelector('[data-sigil=\"m-textarea-input photo-textarea\"]').value=\"" + text + "\"");
								chrome.DelayTime(1.0);
								chrome.SendKeys(4, "[data-sigil=\"m-textarea-input photo-textarea\"]", " ");
								DelayThaoTacNho();
							}
							num4 = chrome.CheckExistElements(5.0, "[name=\"Send\"]", "[name=\"send\"]");
							if (num4 == 1)
							{
								chrome.Click(4, "[name=\"Send\"]");
							}
							else
							{
								chrome.Click(4, "[name=\"send\"]");
							}
							if (chrome.CheckExistElement("[data-sigil=\"context-layer-root content-pane\"]>div>span>div", 5.0) != 1)
							{
								num++;
							}
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
							chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
							if (CommonChrome.GoToMessagesUnread(chrome) == -2)
							{
								return -2;
							}
						}
					}
					break;
				}
			}
			catch
			{
			}
			return num;
		}

		public int HDXemWatch(int indexRow, string statusProxy, Chrome chrome, int nudSoLuongFrom, int nudSoLuongTo, int nudTimeWatchFrom, int nudTimeWatchTo, bool isLike, int countLikeFrom, int countLikeTo, bool isShareWall, int countShareFrom, int countShareTo, bool isComment, List<string> lstComment, int countCommentFrom, int countCommentTo, bool isFollow, int soLuongFollowFrom, int soLuongFollowTo, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0fe8, IL_0ff5
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			int num5 = 0;
			int num6 = 0;
			int num7 = 0;
			int num8 = 0;
			int num9 = 0;
			int num10 = 0;
			if (isLike)
			{
				num7 = rd.Next(countLikeFrom, countLikeTo + 1);
			}
			lstComment = MCommon.Common.RemoveEmptyItems(lstComment);
			List<string> list = CloneList(lstComment);
			string text = "";
			if (isComment)
			{
				num8 = rd.Next(countCommentFrom, countCommentTo + 1);
			}
			if (isShareWall)
			{
				num9 = rd.Next(countShareFrom, countShareTo + 1);
			}
			if (isFollow)
			{
				num10 = rd.Next(soLuongFollowFrom, soLuongFollowTo + 1);
			}
			try
			{
				int num11 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
				while (true)
				{
				IL_01cf:
					if (CommonChrome.GoToWatch(chrome) == -2)
					{
						return -2;
					}
					int num12 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num12 == 1)
					{
						continue;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num12))
					{
						return -1;
					}
					if (chrome.CheckExistElement("[data-sigil=\"m-video-play-button playInlineVideo\"]", 10.0) != 1)
					{
						break;
					}
					while (num < num11)
					{
						num12 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num12 == 1)
						{
							goto IL_01cf;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num12))
						{
							return -1;
						}
						if (rd.Next(1, 100) % 5 == 0)
						{
							continue;
						}
						object obj;
						switch (chrome.CheckExistElements(2.0, "#mobile_video_feed_pagelet > div > div:nth-child(2) > div", "#mobile_video_feed_pagelet > div > div > div"))
						{
							default:
								obj = "#mobile_video_feed_pagelet > div > div > div";
								break;
							case 1:
								obj = "#mobile_video_feed_pagelet > div > div:nth-child(2) > div";
								break;
							case 0:
								goto end_IL_01af;
						}
						string text2 = (string)obj;
						chrome.ScrollSmooth("document.querySelectorAll('" + text2 + "')[" + num2 + "].querySelector('[data-sigil=\"playInlineVideo\"]')");
						DelayThaoTacNho(1);
						chrome.ClickWithAction(4, text2, num2, 4, "[data-sigil=\"playInlineVideo\"]");
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong}({num}/{num11})...");
						chrome.DelayTime(rd.Next(nudTimeWatchFrom, nudTimeWatchTo + 1));
						if (isLike && num3 < num7 && rd.Next(1, 100) % 2 == 0)
						{
							DelayThaoTacNho(2);
							if (chrome.CheckExistElementv2("document.querySelectorAll('" + text2 + "')[" + num2 + "].querySelector('[data-sigil=\"touchable ufi-inline-like like-reaction-flyout\"]')") == 1)
							{
								chrome.ScrollSmooth("document.querySelectorAll('[data-sigil=\"touchable ufi-inline-like like-reaction-flyout\"]')[" + num2 + "]");
								DelayThaoTacNho();
								chrome.Click(4, "[data-sigil=\"touchable ufi-inline-like like-reaction-flyout\"]", num2);
								DelayThaoTacNho(2);
								num3++;
							}
						}
						if (isShareWall && num5 < num9 && rd.Next(1, 100) % 2 == 0 && chrome.CheckExistElementv2("document.querySelectorAll('[data-sigil=\"share-popup\"]')[" + num2 + "]") == 1)
						{
							chrome.Click(4, "[data-sigil=\"share-popup\"]", num2);
							DelayThaoTacNho();
							switch (chrome.CheckExistElements(5.0, "#share-one-click-button", "#share-post-one-click-button"))
							{
								case 1:
									chrome.Click(1, "share-one-click-button");
									DelayThaoTacNho();
									break;
								case 2:
									chrome.Click(1, "share-post-one-click-button");
									DelayThaoTacNho();
									break;
							}
							num5++;
							DelayThaoTacNho(2);
						}
						if (isComment && rd.Next(1, 100) % 2 == 0)
						{
							if (list.Count == 0)
							{
								list = CloneList(lstComment);
							}
							if (chrome.CheckExistElementv2("document.querySelectorAll('[data-store*=\"unit_position\"]')[" + num2 + "].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')") == 1)
							{
								chrome.Click(4, "[data-store*=\"unit_position\"]", num2, 4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]");
								DelayThaoTacNho();
								if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 10.0) == 1)
								{
									text = list[rd.Next(0, list.Count)];
									list.Remove(text);
									text = MCommon.Common.SpinText(text, rd);
									string nameFromPost = CommonChrome.GetNameFromPost(chrome);
									text = text.Replace("[u]", nameFromPost);
									text = GetIconFacebook.ProcessString(text, rd);
									string text3 = "[data-sigil=\"textarea mufi-composer m-textarea-input\"]";
									if (MCommon.Common.CheckStringIsContainIcon(text))
									{
										text = text.Replace("\r\n", "*r*n").Replace("\n", "*r*n");
										text = text.Replace("*r*n", "\\r\\n").Replace("\"", "\\\"");
										chrome.Click(4, text3);
										chrome.ExecuteScript("document.querySelector('" + text3 + "').value=\"" + text + "\"");
										chrome.SendKeys(4, text3, " ", 0.1, isClick: false);
									}
									else
									{
										chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, text3, text + " ", 0.1);
									}
									DelayThaoTacNho();
									chrome.Click(4, "[name=\"submit\"]");
									DelayThaoTacNho(2);
									if (CommonChrome.CheckFacebookBlocked(chrome))
									{
										return -4;
									}
									chrome.GotoBackPage();
									num4++;
								}
							}
						}
						if (isFollow && rd.Next(0, 100) % 2 == 0 && num6 < num10 && chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"story-div story-popup-metadata feed-ufi-metadata\"]>div>header>div:nth-child(2)>div>div>div>div>div:nth-child(3)>div')[" + num2 + "].getAttribute('id')+''").ToString() != "null")
						{
							chrome.Click(4, "[data-sigil=\"story-div story-popup-metadata feed-ufi-metadata\"]>div>header>div:nth-child(2)>div>div>div>div>div:nth-child(3)>div", num2);
							chrome.DelayTime(1.0);
						}
						num2++;
						if (num2 == 3)
						{
							chrome.Refresh();
							num2 = 0;
						}
						num++;
					}
					break;
				}
			end_IL_01af:;
			}
			catch
			{
			}
			return num;
		}

		public int HDDocThongBao(int indexRow, string statusProxy, Chrome chrome, int nudSoLuongFrom, int nudSoLuongTo, int typeDocThongBao, int nudDelayFrom, int nudDelayTo, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0a45, IL_0a58
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			try
			{
				int num2 = 0;
				int num3 = 0;
				int num4 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
				while (true)
				{
					if (CommonChrome.GoToNotifications(chrome) == -2)
					{
						return -2;
					}
					num2 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num2 == 1)
					{
						continue;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num2))
					{
						return -1;
					}
					num3 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('.touchable-notification').length+''").ToString());
					if (num3 <= 0)
					{
						return num;
					}
					if (typeDocThongBao == 0)
					{
						while (true)
						{
							num2 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							if (num2 == 1)
							{
								break;
							}
							if (new List<int> { -3, -2, -1, 2 }.Contains(num2))
							{
								return -1;
							}
							chrome.ScrollSmooth("document.querySelectorAll('.touchable-notification a')[" + num2 + "]");
							DelayThaoTacNho();
							if (chrome.Click(4, ".touchable-notification a", num2) == 1)
							{
								chrome.DelayThaoTacNho();
								CommonChrome.ScrollRandom(chrome);
							}
							num2++;
							num++;
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num4})...");
							if (num < num4)
							{
								chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
								chrome.Click(4, "[data-sigil=\"MBackNavBarClick\"]");
								DelayThaoTacNho(2);
								if (num <= 5 && chrome.CheckExistElement("#notifications_jewel > a", 10.0) == 1)
								{
									chrome.Click(4, "#notifications_jewel > a");
									DelayThaoTacNho(2);
								}
								if (num != num3)
								{
									goto IL_062b;
								}
								num2 += num;
								if (chrome.CheckExistElement("#MNotificationFlyoutContent > div > ol > li > a", 10.0) == 1)
								{
									chrome.Click(4, "#MNotificationFlyoutContent > div > ol > li > a");
									chrome.DelayTime(2.0);
									if (chrome.CheckExistElement(".touchable-notification", 5.0) == 1)
									{
										int num5 = Convert.ToInt32(chrome.ExecuteScript("return (document.querySelectorAll('.touchable-notification').length+'')").ToString());
										if (num5 != num3)
										{
											num3 = num5;
											goto IL_062b;
										}
									}
								}
							}
							goto end_IL_007c;
						IL_062b:
							if (num < num4)
							{
								continue;
							}
							goto end_IL_007c;
						}
						continue;
					}
					List<int> list = new List<int>();
					for (int i = 0; i < num4; i++)
					{
						list.Add(i);
					}
					list = MCommon.Common.ShuffleList(list);
					while (num2 < num4)
					{
						if (CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3) != 0)
						{
							return -1;
						}
						int num6 = list[0];
						if (num6 >= num3)
						{
							if (chrome.CheckExistElement("#MNotificationFlyoutContent > div > ol > li > a", 10.0) != 1)
							{
								break;
							}
							chrome.Click(4, "#MNotificationFlyoutContent > div > ol > li > a");
							chrome.DelayTime(2.0);
							if (chrome.CheckExistElement(".touchable-notification", 5.0) != 1)
							{
								break;
							}
							int num7 = Convert.ToInt32(chrome.ExecuteScript("return (document.querySelectorAll('.touchable-notification').length+'')").ToString());
							if (num7 == num3)
							{
								break;
							}
							chrome.Click(4, ".touchable-notification a", num6 + 5);
						}
						else
						{
							chrome.Click(4, ".touchable-notification a", num6);
						}
						num2++;
						num++;
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num4})...");
						chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
						list.RemoveAt(0);
						chrome.GotoBackPage();
						DelayThaoTacNho();
						if (chrome.CheckExistElement("#notifications_jewel > a", 10.0) == 1)
						{
							chrome.Click(4, "#notifications_jewel > a");
							DelayThaoTacNho();
						}
						if (num >= num4)
						{
							break;
						}
					}
					break;
				}
			end_IL_007c:;
			}
			catch
			{
				return -1;
			}
			return num;
		}

		private int CheckFacebookLogout(Chrome chrome, string uid, string pass, string fa2, bool isSendRequest = false)
		{
			int result = 0;
			CommonChrome.CheckStatusAccount(chrome, isSendRequest);
			switch (chrome.Status)
			{
				case StatusChromeAccount.ChromeClosed:
					result = -2;
					break;
				case StatusChromeAccount.LoginWithUserPass:
				case StatusChromeAccount.LoginWithSelectAccount:
					{
						string text = CommonChrome.LoginFacebookUsingUidPassNew(chrome, uid, pass, fa2, "https://m.facebook.com/", 2);
						result = ((text == "1") ? 1 : 2);
						break;
					}
				case StatusChromeAccount.Checkpoint:
					result = -1;
					break;
				case StatusChromeAccount.NoInternet:
					result = -3;
					break;
			}
			return result;
		}

		public int HDXemStory(int indexRow, string statusProxy, Chrome chrome, int nudSoLuongFrom, int nudSoLuongTo, int nudDelayFrom, int nudDelayTo, bool ckbInteract, string typeReaction, bool ckbComment, List<string> lstComment, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_07ae, IL_07bb
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			string text = "";
			try
			{
				while (true)
				{
				IL_0094:
					if (CommonChrome.GoToHome(chrome) == -2)
					{
						return -2;
					}
					int num2 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num2 == 1)
					{
						continue;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num2))
					{
						return -1;
					}
					int num3 = rd.Next(nudSoLuongFrom, nudSoLuongTo + 1);
					int num4 = 0;
					string text2 = "0";
					List<string> list = new List<string>();
					list = CloneList(lstComment);
					if (chrome.CheckExistElement("[data-sigil=\"m-stories-rectangular-item-title\"]", 10.0) != 1)
					{
						break;
					}
					num4 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"m-stories-rectangular-item-title\"]').length").ToString());
					if (num4 <= 0)
					{
						break;
					}
					chrome.Click(4, "[data-sigil=\"m-stories-rectangular-item-title\"]", 1);
					DelayThaoTacNho();
					while (num < num3)
					{
						num2 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num2 == 1)
						{
							goto IL_0094;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num2))
						{
							return -1;
						}
						if (chrome.CheckExistElement("[data-sigil=\"m-stories-next-button\"]") != 1)
						{
							break;
						}
						if (chrome.CheckExistElement("[data-sigil=\"m-video-play-button playInlineVideo\"]", 1.0) == 1)
						{
							chrome.ClickWithAction(4, "[data-sigil=\"m-video-play-button playInlineVideo\"]");
						}
						chrome.DelayTime(rd.Next(nudDelayFrom, nudDelayTo + 1));
						if (ckbInteract)
						{
							text2 = typeReaction[rd.Next(0, typeReaction.Length)].ToString();
							chrome.Click(4, "[data-sigil=\"m-stories-reply-reaction-li\"]", Convert.ToInt32(text2));
							DelayThaoTacNho();
						}
						if (ckbComment)
						{
							if (list.Count == 0)
							{
								list = CloneList(lstComment);
							}
							text = list[rd.Next(0, list.Count)];
							list.Remove(text);
							text = MCommon.Common.SpinText(text, rd);
							text = text.Replace("[u]", CommonChrome.GetNameFromStory(chrome));
							DelayThaoTacNho();
							switch (setting_general.GetValueInt("tocDoGoVanBan"))
							{
								case 0:
									chrome.SendKeys(Base.rd, 4, "[data-sigil=\"m-stories-reply-input\"]", text, 0.1);
									break;
								case 1:
									chrome.SendKeys(4, "[data-sigil=\"m-stories-reply-input\"]", text, 0.1);
									break;
								case 2:
									chrome.SendKeys(4, "[data-sigil=\"m-stories-reply-input\"]", text);
									break;
							}
							DelayThaoTacNho();
							chrome.SendEnter(4, "[data-sigil=\"m-stories-reply-input\"]");
						}
						num++;
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num3})...");
						DelayThaoTacNho();
						if (chrome.CheckExistElement("[data-sigil=\"m-stories-next-button\"]") == 1)
						{
							chrome.Click(4, "[data-sigil=\"m-stories-next-button\"]");
							continue;
						}
						break;
					}
					break;
				}
			}
			catch
			{
			}
			return num;
		}

		private int HDXemStoryChiDinh(int indexRow, string statusProxy, Chrome chrome, JSON_Settings settings, string tenHanhDong)
		{
			//Discarded unreachable code: IL_0458, IL_0465
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int result = 0;
			string text = "";
			try
			{
				List<string> valueList = settings.GetValueList("txtLinkStory");
				bool valueBool = settings.GetValueBool("ckbInteract");
				string value = settings.GetValue("typeReaction");
				bool valueBool2 = settings.GetValueBool("ckbComment");
				List<string> valueList2 = settings.GetValueList("txtComment");
				List<string> list = MCommon.Common.CloneList(valueList2);
				for (int i = 0; i < valueList.Count; i++)
				{
					SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({i + 1}/{valueList.Count})...");
					string text2 = valueList[i];
					chrome.GotoURL(text2.Replace("https://www.facebook.com/", "https://m.facebook.com/"));
					int num = chrome.CheckExistElements(8.0, "[data-sigil=\"m-stories-tap-overlay\"]", "[href=\"/help/?ref=404\"]");
					if (num != 1)
					{
						continue;
					}
					chrome.Click(4, "[data-sigil=\"m-stories-tap-overlay\"]");
					text2 = chrome.GetURL();
					string nameFromStory = CommonChrome.GetNameFromStory(chrome);
					for (int j = 0; j < 300; j++)
					{
						if (chrome.CheckExistElement("[data-sigil=\"m-video-play-button playInlineVideo\"]", 3.0) == 1)
						{
							chrome.Click(4, "[data-sigil=\"m-video-play-button playInlineVideo\"]");
						}
						if (chrome.GetURL() != text2 || nameFromStory != CommonChrome.GetNameFromStory(chrome))
						{
							break;
						}
						chrome.DelayTime(1.0);
					}
				}
				chrome.GotoURL("https://m.facebook.com/");
			}
			catch
			{
			}
			return result;
		}

		private int HDDangStory(int indexRow, string statusProxy, Chrome chrome, JSON_Settings settings, string tenHanhDong)
		{
			//Discarded unreachable code: IL_05de, IL_05eb
			int result = 0;
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cEmail");
			string text = "#";
			try
			{
				string value = settings.GetValue("txtPathAnh");
				string[] files = Directory.GetFiles(value);
				chrome.GotoURL("https://m.facebook.com/");
				chrome.DelayRandom(2, 3);
				text = chrome.ExecuteScript("var link='#';var x=document.querySelector('#m-stories-owner-bucket');if(x.hasAttribute('data-href')) link=x.getAttribute('data-href'); link=link.split('?')[0]; return link").ToString();
				if ((text == "#" || text == "") && chrome.CheckExistElement("#m-stories-production-input") == 1)
				{
					chrome.SendKeys(1, "m-stories-production-input", files[rd.Next(files.Length)], isClick: false);
					chrome.DelayTime(3.0);
					chrome.Click(4, "[data-sigil=\"touchable m-stories-production-share-button\"]");
					chrome.DelayTime(3.0);
					for (int i = 0; i < 10; i++)
					{
						text = chrome.ExecuteScript("var link='#';var x=document.querySelector('#m-stories-owner-bucket');if(x.hasAttribute('data-href')) link=x.getAttribute('data-href'); link=link.split('?')[0]; return link").ToString();
						if (text != "" && text != "#")
						{
							break;
						}
						chrome.DelayTime(3.0);
						chrome.Refresh();
					}
					if (text != "" && text != "#")
					{
						chrome.GotoURL("https://m.facebook.com/stories/settings/");
						if (chrome.CheckExistElement("[value=\"public\"]", 5.0) == 1)
						{
							chrome.DelayTime(2.0);
							string uRL = chrome.GetURL();
							chrome.ExecuteScript("document.querySelector('[value=\"public\"]').click()");
							chrome.DelayTime(2.0);
							chrome.ExecuteScript("document.querySelector('[data-sigil=\"touchable m-stories-privacy-selector-change-confirm\"]').click()");
							chrome.DelayTime(2.0);
							chrome.ExecuteScript("document.querySelector('[data-sigil=\"m-stories-settings-back-button\"]').click()");
							for (int j = 0; j < 10; j++)
							{
								if (chrome.GetURL() != uRL)
								{
									chrome.DelayTime(3.0);
									break;
								}
								chrome.DelayTime(1.0);
							}
						}
					}
				}
				text = ((text != "#") ? ("https://m.facebook.com" + text) : "");
				File.AppendAllText("LinkStory.txt", cellAccount + "|" + cellAccount2 + "|" + text + "\r\n");
			}
			catch
			{
			}
			return result;
		}

		public int HDXacNhanKetBan(int indexRow, string statusProxy, Chrome chrome, int soLuongFrom, int soLuongTo, int delayFrom, int delayTo, Random rd, string tenHanhDong = "", bool ckbChiKetBanTenCoDau = false, bool ckbOnlyAddFriendWithMutualFriends = false)
		{
			//Discarded unreachable code: IL_083f, IL_0852
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			try
			{
				int num5 = rd.Next(soLuongFrom, soLuongTo + 1);
				while (true)
				{
				IL_00b1:
					if (chrome.GotoURL("https://m.facebook.com/friends/center/requests/all") == -2)
					{
						return -2;
					}
					chrome.DelayRandom(3, 5);
					int num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num6 == 1)
					{
						continue;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
					{
						return -1;
					}
					if (num5 <= 0)
					{
						break;
					}
					int num7 = 0;
					switch (chrome.CheckExistElements(10.0, "#friends_center_main>div>header>h3>span", "[data-sigil=\"m-friend-center-req-badge\"]"))
					{
						case 1:
							num7 = Convert.ToInt32(chrome.ExecuteScript("var dem='0';var x= document.querySelector('#friends_center_main>div>header>h3>span');if(x!=null) dem=x.innerText; return dem;").ToString().Replace(",", "")
								.Replace(".", ""));
							break;
						case 2:
							num7 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelector('[data-sigil=\"m-friend-center-req-badge\"]').innerText").ToString().Replace(",", "")
								.Replace(".", ""));
							break;
					}
					if (num7 <= 0)
					{
						break;
					}
					num4 = ((num5 < 100) ? 5 : 10);
					int num8 = -1;
					while (num < num7)
					{
						num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num6 == 1)
						{
							goto IL_00b1;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
						{
							return -1;
						}
						num8++;
						if (Convert.ToBoolean(chrome.ExecuteScript("return document.querySelectorAll('[data-sigil*=\"m-optimistic-response-root\"]')[" + num8 + "]==null?'false':'true'")))
						{
							chrome.ScrollSmoothIfNotExistOnScreen("document.querySelectorAll('button[data-sigil=\"touchable confirm-request\"]')[" + num8 + "]");
							chrome.DelayTime(1.0);
							bool flag = true;
							if (ckbChiKetBanTenCoDau)
							{
								string ten = chrome.ExecuteScript("return document.querySelectorAll('[data-sigil*=\"m-optimistic-response-root\"] h3,[data-sigil*=\"m-optimistic-response-root\"] h1')[" + num8 + "].innerText").ToString();
								if (!MCommon.Common.IsVNName(ten))
								{
									flag = false;
								}
							}
							if (flag && ckbOnlyAddFriendWithMutualFriends)
							{
								string pValue = chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"m-add-friend-source-replaceable\"]')[" + num8 + "].innerText").ToString();
								flag = MCommon.Common.IsContainNumber(pValue);
							}
							if (!flag)
							{
								continue;
							}
							chrome.Click(4, "button[data-sigil=\"touchable confirm-request\"]", num8);
							DelayThaoTacNho();
							if (CommonChrome.SkipNotifyWhenAddFriend(chrome))
							{
								num3++;
								if (num3 >= num4)
								{
									break;
								}
							}
							else
							{
								num3 = 0;
							}
							num++;
							if (tenHanhDong == "")
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang xác nhận kết bạn") + $" ({num}/{num5})...");
							}
							else
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num5})...");
							}
							if (num >= num5)
							{
								break;
							}
							if (chrome.CheckChromeClosed())
							{
								return -2;
							}
							delayFrom = ((delayFrom > 2) ? (delayFrom - 2) : 0);
							delayTo = ((delayTo > 2) ? (delayTo - 2) : 0);
							chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
						}
						else
						{
							num2++;
							if (num2 == 5)
							{
								break;
							}
						}
					}
					break;
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDXacNhanKetBanv2(int indexRow, string statusProxy, Chrome chrome, int soLuongFrom, int soLuongTo, int delayFrom, int delayTo, Random rd, string tenHanhDong = "", bool ckbChiKetBanTenCoDau = false, bool ckbOnlyAddFriendWithMutualFriends = false)
		{
			//Discarded unreachable code: IL_0754, IL_0767
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			int num5 = chrome.chrome.Manage().Window.Size.Width;
			int num6 = chrome.chrome.Manage().Window.Size.Height;
			try
			{
				int num7 = rd.Next(soLuongFrom, soLuongTo + 1);
				while (true)
				{
				IL_00fb:
					if (chrome.GotoURL("https://www.facebook.com/friends/requests") == -2)
					{
						return -2;
					}
					chrome.chrome.Manage().Window.Size = new Size(500, 700);
					chrome.DelayRandom(3, 5);
					ClosePopup(chrome);
					int num8 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num8 == 1)
					{
						continue;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num8))
					{
						return -1;
					}
					if (num7 <= 0)
					{
						break;
					}
					while (num < num7)
					{
						num8 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num8 == 1)
						{
							goto IL_00fb;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num8))
						{
							return -1;
						}
						int num9 = chrome.CheckExistElements(5.0, "[role=\"navigation\"] [role=\"grid\"] > div:nth-child(2) div [role=\"button\"]:nth-child(1) [dir=\"auto\"]", "[role=\"navigation\"] [role=\"grid\"] > div:nth-child(3) div [role=\"button\"]:nth-child(1) [dir=\"auto\"]");
						if (num9 == 0)
						{
							break;
						}
						if (chrome.ScrollSmooth("document.querySelectorAll('[role=\"navigation\"] [role=\"grid\"] > div:nth-child(" + (num9 + 1) + ") div [role=\"button\"]:nth-child(1) [dir=\"auto\"]')[0]") == 1)
						{
							chrome.DelayTime(1.0);
							bool flag = true;
							if (ckbChiKetBanTenCoDau)
							{
								string ten = chrome.ExecuteScript("return document.querySelectorAll('[role=\"navigation\"] [role=\"gridcell\"]>span')[0].innerText").ToString();
								if (!MCommon.Common.IsVNName(ten))
								{
									flag = false;
								}
							}
							if (flag && ckbOnlyAddFriendWithMutualFriends)
							{
								string text = chrome.ExecuteScript("return document.querySelectorAll('[role=\"navigation\"] [role=\"row\"] [role=\"link\"] [dir=\"auto\"] [role=\"grid\"]')[0].innerText").ToString();
								flag = ((!(text == "")) ? true : false);
							}
							if (flag)
							{
								chrome.Click(4, "[role=\"navigation\"] [role=\"grid\"] > div:nth-child(" + (num9 + 1) + ") div [role=\"button\"]:nth-child(1) [dir=\"auto\"]");
								DelayThaoTacNho();
								if (CommonChrome.SkipNotifyWhenAddFriend(chrome))
								{
									num3++;
									if (num3 >= num4)
									{
										break;
									}
								}
								else
								{
									num3 = 0;
								}
								num++;
								if (tenHanhDong == "")
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang xác nhận kết bạn") + $" ({num}/{num7})...");
								}
								else
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num7})...");
								}
								if (num >= num7)
								{
									break;
								}
								if (chrome.CheckChromeClosed())
								{
									return -2;
								}
								delayFrom = ((delayFrom > 2) ? (delayFrom - 2) : 0);
								delayTo = ((delayTo > 2) ? (delayTo - 2) : 0);
								chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
							}
							else
							{
								chrome.ExecuteScript("document.querySelectorAll('[role=\"navigation\"] [role=\"grid\"] > div:nth-child(3) div')[0].remove()");
							}
						}
						else
						{
							num2++;
							if (num2 == 5)
							{
								break;
							}
						}
					}
					break;
				}
			}
			catch
			{
				num = -1;
			}
			chrome.chrome.Manage().Window.Size = new Size(num5, num6);
			return num;
		}

		public int HDKetBanTheoTuKhoa(int indexRow, string statusProxy, Chrome chrome, List<string> lstTuKhoa, int countFriendFrom, int countFriendTo, int delayFrom, int delayTo, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_02fa, IL_030e, IL_0623, IL_0636
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = -1;
			int num3 = 0;
			int num4 = 0;
			try
			{
				lstTuKhoa = MCommon.Common.RemoveEmptyItems(lstTuKhoa);
				string tuKhoa = lstTuKhoa[rd.Next(0, lstTuKhoa.Count)];
				int num5 = rd.Next(countFriendFrom, countFriendTo + 1);
				while (true)
				{
				IL_00ea:
					if (CommonChrome.GoToSearchFriend(chrome, tuKhoa, setting_general.GetValueInt("tocDoGoVanBan")) == -2)
					{
						return -2;
					}
					int num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num6 == 1)
					{
						continue;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
					{
						return -1;
					}
					if (chrome.CheckExistElement("#BrowseResultsContainer", 5.0) != 1)
					{
						break;
					}
					CommonChrome.ScrollRandom(chrome);
					bool flag = false;
					while (num < num5)
					{
						num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num6 == 1)
						{
							goto IL_00ea;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
						{
							return -1;
						}
						num2++;
						try
						{
							flag = Convert.ToBoolean(chrome.ExecuteScript("return (document.querySelectorAll('[data-nt-switch-case=\\'{\\\"v\":\\\"CAN_REQUEST\\\"}\\']')[" + num2 + "].getAttribute('style')==null)+''"));
						}
						catch
						{
							flag = false;
						}
						if (flag)
						{
							num4 = 0;
							if (Base.rd.Next(1, 100) % 2 == 0)
							{
								chrome.ScrollSmooth("document.querySelectorAll('[data-nt-switch-case=\\'{\\\"v\\\":\\\"CAN_REQUEST\\\"}\\']')[" + num2 + "]");
								DelayThaoTacNho();
								chrome.Click(4, "[data-nt-switch-case='{\\\"v\\\":\\\"CAN_REQUEST\\\"}']>div", num2);
								DelayThaoTacNho();
								num3 = (CommonChrome.SkipNotifyWhenAddFriend(chrome) ? (num3 + 1) : 0);
								if (num3 >= 3)
								{
									break;
								}
								num++;
								if (tenHanhDong == "")
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang kết bạn theo từ khóa") + $" ({num}/{num5})...");
								}
								else
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong}({num}/{num5})...");
								}
								if (chrome.CheckChromeClosed())
								{
									return -2;
								}
								delayFrom = ((delayFrom > 2) ? (delayFrom - 2) : 0);
								delayTo = ((delayTo > 2) ? (delayTo - 2) : 0);
								chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
							}
						}
						else
						{
							num4++;
							if (num4 == 50)
							{
								break;
							}
						}
					}
					break;
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDKetBanGoiY(int indexRow, string statusProxy, Chrome chrome, int soLuongFrom, int soLuongTo, int delayFrom, int delayTo, bool ckbChiKetBanTenCoDau, bool ckbOnlyAddFriendWithMutualFriends, int maxError, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0606, IL_0619
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = -1;
			int num3 = 0;
			int num4 = 0;
			try
			{
				int num5 = rd.Next(soLuongFrom, soLuongTo + 1);
				while (true)
				{
				IL_00b1:
					if (CommonChrome.GoToFriendSuggest(chrome) == -2)
					{
						return -2;
					}
					int num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num6 == 1)
					{
						continue;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
					{
						return -1;
					}
					while (num < num5)
					{
						num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num6 == 1)
						{
							goto IL_00b1;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
						{
							return -1;
						}
						num2++;
						if (Convert.ToBoolean(chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"m-add-friend-button-container\"]>div>div>div>a')[" + num2 + "]==null?'false':'true'")))
						{
							chrome.ScrollSmoothIfNotExistOnScreen("document.querySelectorAll('[data-sigil=\"m-add-friend-button-container\"]>div>div>div>a')[" + num2 + "]");
							chrome.DelayTime(1.0);
							bool flag = true;
							if (ckbChiKetBanTenCoDau)
							{
								string ten = chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"undoable-action\"]>div:nth-child(2)>div>div>h3>a,[data-sigil=\"undoable-action\"]>div:nth-child(2)>div>div>h1>a')[" + num2 + "].innerText").ToString();
								if (!MCommon.Common.IsVNName(ten))
								{
									flag = false;
								}
							}
							if (flag && ckbOnlyAddFriendWithMutualFriends)
							{
								string pValue = chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"m-add-friend-source-replaceable\"]')[" + num2 + "].innerText").ToString();
								flag = MCommon.Common.IsContainNumber(pValue);
							}
							if (!flag)
							{
								continue;
							}
							chrome.Click(4, "[data-sigil=\"m-add-friend-button-container\"]>div>div>div>a", num2);
							DelayThaoTacNho();
							if (CommonChrome.SkipNotifyWhenAddFriend(chrome))
							{
								num3++;
								if (num3 >= maxError)
								{
									break;
								}
							}
							else
							{
								num3 = 0;
							}
							num++;
							if (tenHanhDong == "")
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang kết bạn gợi ý") + $" ({num}/{num5})...");
							}
							else
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num5})...");
							}
							if (chrome.CheckChromeClosed())
							{
								return -2;
							}
							delayFrom = ((delayFrom > 2) ? (delayFrom - 2) : 0);
							delayTo = ((delayTo > 2) ? (delayTo - 2) : 0);
							chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
						}
						else
						{
							num4++;
							if (num4 == 3)
							{
								break;
							}
						}
					}
					break;
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public List<string> GetListIdGroup(string useragent, string token, string cookie, string proxy, int typeProxy)
		{
			//Discarded unreachable code: IL_00da, IL_00ef, IL_00f6, IL_0103
			List<string> list = new List<string>();
			try
			{
				RequestXNet requestXNet = new RequestXNet(cookie, useragent, proxy, typeProxy);
				string json = requestXNet.RequestGet("https://graph.facebook.com/v3.0/me/groups?access_token=" + token + "&limit=5000&fields=id,name").ToString();
				JObject jObject = JObject.Parse(json);
				foreach (JToken item in (IEnumerable<JToken>)jObject["data"])
				{
					list.Add(item["id"].ToString());
				}
			}
			catch
			{
			}
			return list;
		}

		public List<string> GetIdFriend(string token, string cookie, string useragent, string proxy, int typeProxy)
		{
			//Discarded unreachable code: IL_01ea, IL_01f7
			List<string> list = new List<string>();
			try
			{
				string value = Regex.Match(cookie + ";", "c_user=(.*?);").Groups[1].Value;
				RequestXNet requestXNet = new RequestXNet(cookie, useragent, proxy, typeProxy);
				requestXNet.request.AddHeader("Authorization", "OAuth " + token);
				string json = requestXNet.RequestGet("https://graph.facebook.com/?ids=" + value + "&pretty=0&fields=friends.limit(5000){id}");
				JObject jObject = JObject.Parse(json);
				JToken jToken = jObject[value]["friends"];
				if (jToken["data"].Count() > 0)
				{
					for (int i = 0; i < jToken["data"].Count(); i++)
					{
						string item = jToken["data"][i]["id"].ToString();
						list.Add(item);
					}
				}
			}
			catch
			{
			}
			return list;
		}

		public List<string> CloneList(List<string> lstFrom)
		{
			//Discarded unreachable code: IL_004b, IL_0058
			List<string> list = new List<string>();
			try
			{
				for (int i = 0; i < lstFrom.Count; i++)
				{
					list.Add(lstFrom[i]);
				}
			}
			catch
			{
			}
			return list;
		}

		private void DelayThaoTacNho(int timeAdd = 0)
		{
			MCommon.Common.DelayTime(rd.Next(timeAdd + 1, timeAdd + 4));
		}

		public int HDBackupData(string id, int indexRow, string statusProxy, Chrome chrome, string token, bool isNgaySinh, bool isAnh, bool isBackupNangCao, int soLuongAnh, bool isNhanTin, bool isBinhLuan, int numberMonth, bool isCreateHtml, string proxy, int typeProxy, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0432, IL_0447, IL_07b6, IL_07cb, IL_0941, IL_0956, IL_0a20, IL_0a35, IL_0d7e, IL_0d92
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int result = 0;
			try
			{
				if (chrome.CheckChromeClosed())
				{
					return -2;
				}
				string template_backup = Base.template_backup;
				string useragent = chrome.GetUseragent().Split('$')[0];
				string cookie = chrome.GetCookieFromChrome();
				if (token == "" || !CommonRequest.CheckLiveToken(cookie, token, useragent, proxy, typeProxy))
				{
					token = CommonChrome.GetTokenEAAAAZ(chrome);
				}
				string text = chrome.ExecuteScript("return (document.cookie+';').match(new RegExp('c_user=(.*?);'))[1]").ToString();
				MCommon.Common.CreateFolder("backup\\" + text);
				bool flag = false;
				if (token != "")
				{
					string text2 = "";
					string text3 = "";
					if (isNgaySinh)
					{
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang backup ngày sinh..."));
						string birthday = CommonChrome.GetBirthday(chrome, token);
						if (birthday == "")
						{
							CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", "Token die!");
							flag = true;
						}
						else
						{
							text2 = birthday.Split('|')[1];
							text3 = birthday.Split('|')[2];
							lock (_lockbackup)
							{
								File.WriteAllText("backup\\" + text + "\\ngaysinh.txt", birthday);
							}
						}
					}
					if (!flag && isAnh)
					{
						CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", Language.GetValue("Đang backup a\u0309nh") + "...");
						List<string> listImageBackup = new List<string>();
						int iThread = 0;
						object _lock_countSuccess = new object();
						int countSuccess = 0;
						List<string> myListUidNameFriend = CommonRequest.GetMyListUidNameFriend(cookie, token, useragent, proxy, typeProxy);
						int totalFriend = myListUidNameFriend.Count;
						List<string> lstQuery = GhepFileList(myListUidNameFriend);
						int count = lstQuery.Count;
						new Thread((ThreadStart)delegate
						{
							while (iThread > 0)
							{
								CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", string.Format(Language.GetValue("Đang backup ảnh: {0}/{1}..."), countSuccess, totalFriend));
								Thread.Sleep(100);
							}
						}).Start();
						if (lstQuery.Count > 0)
						{
							int num = ((lstQuery.Count > 10) ? 10 : lstQuery.Count);
							int num2 = 0;
							while (num2 < lstQuery.Count)
							{
								if (iThread < num)
								{
									Interlocked.Increment(ref iThread);
									int stt = num2++;
									new Thread((ThreadStart)delegate
									{
										string text5 = lstQuery[stt];
										List<string> list = CommonRequest.BackupImageOne(text5, cookie, token, useragent, proxy, typeProxy, soLuongAnh, isBackupNangCao);
										if (list.Count > 0)
										{
											lock (listImageBackup)
											{
												listImageBackup.AddRange(list);
											}
										}
										lock (_lock_countSuccess)
										{
											countSuccess += text5.Split(',').Length;
										}
										Interlocked.Decrement(ref iThread);
									}).Start();
								}
								else
								{
									Thread.Sleep(100);
								}
							}
							while (iThread > 0)
							{
								Thread.Sleep(100);
							}
							if (listImageBackup.Count > 0)
							{
								lock (_lock2)
								{
									Directory.CreateDirectory("backup\\" + text);
									File.WriteAllLines("backup\\" + text + "\\" + text + ".txt", listImageBackup);
								}
							}
							else
							{
								CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", Language.GetValue("Không backup đươ\u0323c!"));
							}
						}
						else
						{
							CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", Language.GetValue("Không backup đươ\u0323c!"));
						}
					}
					if (!flag && isNhanTin)
					{
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang backup nhắn tin..."));
						List<string> myListUidMessage = CommonChrome.GetMyListUidMessage(chrome);
						lock (_lock4)
						{
							File.WriteAllLines("backup\\" + text + "\\banbeinbox.txt", myListUidMessage);
						}
					}
					if (!flag && isBinhLuan)
					{
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang backup bình luận..."));
						List<string> myListComments = CommonChrome.GetMyListComments(chrome, numberMonth);
						lock (_lock3)
						{
							File.WriteAllLines("backup\\" + text + "\\lscomment.txt", myListComments);
						}
					}
					if (!flag && isCreateHtml)
					{
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang tạo File html..."));
						CreateHTML(text, template_backup);
					}
					SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đã backup xong!"));
					if (!flag)
					{
						string text4 = DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss");
						CommonSQL.UpdateMultiFieldToAccount(id, "uid|token|name|birthday|backup|info", text + "|" + token + "|" + text3 + "|" + text2 + "|" + text4 + "|Live", isAllowEmptyValue: false);
						SetCellAccount(indexRow, "cUid", text);
						SetCellAccount(indexRow, "cToken", token);
						SetCellAccount(indexRow, "cName", text3, isAllowEmptyValue: false);
						SetCellAccount(indexRow, "cBirthday", text2);
						SetCellAccount(indexRow, "cInfo", "Live");
						SetCellAccount(indexRow, "cBackup", text4);
					}
				}
			}
			catch
			{
				result = -1;
			}
			return result;
		}

		private void ShowTrangThai(string content)
		{
			plTrangThai.Invoke((MethodInvoker)delegate
			{
				if (!plTrangThai.Visible)
				{
					plTrangThai.Visible = true;
				}
			});
			lblTrangThai.Invoke((MethodInvoker)delegate
			{
				lblTrangThai.Text = content;
			});
		}

		private void HideTrangThai()
		{
			plTrangThai.Invoke((MethodInvoker)delegate
			{
				if (plTrangThai.Visible)
				{
					plTrangThai.Visible = false;
				}
			});
		}

		public int HDDangStatus(int indexRow, string statusProxy, Chrome chrome, string token, int soLuongFrom, int soLuongTo, int khoangCachFrom, int khoangCachTo, bool isVanBan, bool isUseBackground, bool isAnh, string pathFolderAnh, int soLuongAnhFrom, int soLuongAnhTo, bool isVideo, string pathFolderVideo, int soLuongVideoFrom, int soLuongVideoTo, Random rd, bool isTag, int typeUidTag, List<string> lstUidTag, int nudUidFrom, int nudUidTo, string tenHanhDong, string id_HanhDong)
		{
			//Discarded unreachable code: IL_0766, IL_077b, IL_0fa7, IL_0fb4, IL_1020, IL_102c, IL_110a, IL_1116, IL_11ff, IL_1212, IL_122c, IL_1239
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			try
			{
				int num2 = rd.Next(soLuongFrom, soLuongTo + 1);
				while (num < num2)
				{
					try
					{
						if (chrome.CheckChromeClosed())
						{
							return -2;
						}
						if (isTag && typeUidTag == 0)
						{
							lstUidTag = CommonChrome.GetMyListUidFriend(chrome);
						}
						int num3;
						do
						{
							chrome.GotoURL("https://m.facebook.com/me");
							num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						}
						while (num3 == 1);
						if (new List<int> { -3, -2, -1, 2 }.Contains(num3))
						{
							return -1;
						}
						string text = "";
						switch (chrome.CheckExistElements(10.0, "[data-sigil=\"show_composer\"]", "#timelineBody > div > div > div > div:nth-child(2)"))
						{
							case 1:
								text = "[data-sigil=\"show_composer\"]";
								break;
							case 2:
								text = "#timelineBody > div > div > div > div:nth-child(2)";
								break;
						}
						if (!(text != ""))
						{
							continue;
						}
						chrome.DelayTime(1.0);
						chrome.Click(4, text);
						chrome.DelayTime(2.0);
						if (chrome.CheckExistElement("[data-sigil=\"touchable aaa_public\"]") == 1)
						{
							chrome.Click(4, "[data-sigil=\"touchable aaa_public\"]");
						}
						if (chrome.CheckExistElement("[data-sigil=\"aaa_tooltip_text mflyout-remove-on-click\"]") == 1)
						{
							chrome.Click(4, "[data-sigil=\"aaa_tooltip_text mflyout-remove-on-click\"]");
						}
						string text2 = "";
						switch (chrome.CheckExistElements(10.0, "[data-sigil=\"composer-textarea m-textarea-input\"]", "[data-sigil=\"m-textarea-input composer-textarea\"]"))
						{
							case 1:
								text2 = "[data-sigil=\"composer-textarea m-textarea-input\"]";
								break;
							case 2:
								text2 = "[data-sigil=\"m-textarea-input composer-textarea\"]";
								break;
						}
						if (!(text2 != ""))
						{
							continue;
						}
						if (chrome.CheckExistElement("input[value=\"300645083384735\"]") != 1)
						{
							chrome.DelayTime(1.0);
							chrome.Click(4, "#m_composer_privacy_selector #m_privacy_button_text_id");
							if (chrome.CheckExistElement("input[value=\"300645083384735\"]", 5.0) == 1)
							{
								chrome.DelayTime(1.0);
								chrome.ExecuteScript("document.querySelector('input[value=\"300645083384735\"]').click();");
							}
							else
							{
								chrome.ExecuteScript("document.querySelector('[data-sigil=\"dialog-cancel-button\"]').click()");
							}
						}
						if (isVanBan)
						{
							string item = "";
							lock (dicDangStatus_NoiDung)
							{
								if (dicDangStatus_NoiDung[id_HanhDong].Count == 0)
								{
									dicDangStatus_NoiDung[id_HanhDong] = CloneList(dicDangStatus_NoiDungGoc[id_HanhDong]);
								}
								item = dicDangStatus_NoiDung[id_HanhDong][rd.Next(0, dicDangStatus_NoiDung[id_HanhDong].Count)];
								dicDangStatus_NoiDung[id_HanhDong].Remove(item);
							}
							item = MCommon.Common.SpinText(item, rd);
							if (isTag)
							{
								string text3 = "";
								int num4 = rd.Next(nudUidFrom, nudUidTo + 1);
								for (int i = 0; i < num4; i++)
								{
									if (lstUidTag.Count == 0)
									{
										break;
									}
									text3 = lstUidTag[rd.Next(0, lstUidTag.Count)];
									lstUidTag.Remove(text3);
									item = item + " @[" + text3 + ":]";
								}
							}
							if (item.Trim() != "")
							{
								string text4 = chrome.ExecuteScript("return document.title.split('-')[0]").ToString().Trim();
								string newValue = text4.Substring(text4.LastIndexOf(' ') + 1).Trim();
								item = item.Replace("[full_name]", text4);
								item = item.Replace("[name]", newValue);
								item = GetIconFacebook.ProcessString(item, rd);
								if (!MCommon.Common.CheckStringIsContainIcon(item))
								{
									chrome.SendKeys(4, text2, item);
									chrome.DelayTime(1.0);
								}
								else
								{
									item = item.Replace("\r\n", "*rr*nn").Replace("\n", "*rr*nn");
									item = item.Replace("*rr*nn", "\\r\\n").Replace("\"", "\\\"");
									for (int j = 0; j < 10; j++)
									{
										chrome.ExecuteScript("document.querySelector('" + text2 + "').value=\"" + item + "\"");
										chrome.DelayTime(2.0);
										if (chrome.ExecuteScript("return document.querySelector('" + text2 + "').value+''").ToString() != "")
										{
											break;
										}
									}
									chrome.Click(4, text2);
								}
								if (isUseBackground && !isAnh && !isVideo)
								{
									int num5 = chrome.CountElement("#structured_composer_form div[aria-label]");
									if (num5 > 0)
									{
										chrome.Click(4, "#structured_composer_form div[aria-label]", rd.Next(1, num5));
										chrome.DelayThaoTacNho();
									}
								}
							}
						}
						int num6 = 0;
						if (isAnh)
						{
							List<string> list = Directory.GetFiles(pathFolderAnh).ToList();
							if (list.Count > 0)
							{
								List<string> list2 = CloneList(list);
								string text5 = "";
								int num7 = rd.Next(soLuongAnhFrom, soLuongAnhTo + 1);
								for (int k = 0; k < num7; k++)
								{
									if (list2.Count == 0)
									{
										break;
									}
									text5 = list2[rd.Next(0, list2.Count)];
									list2.Remove(text5);
									chrome.SendKeys(1, "photo_input", text5);
									num6++;
									MCommon.Common.DelayTime(2.0);
								}
							}
						}
						if (isVideo)
						{
							List<string> list3 = Directory.GetFiles(pathFolderVideo).ToList();
							if (list3.Count > 0)
							{
								List<string> list4 = CloneList(list3);
								string text6 = "";
								int num8 = rd.Next(soLuongVideoFrom, soLuongVideoTo + 1);
								for (int l = 0; l < num8; l++)
								{
									if (list4.Count == 0)
									{
										break;
									}
									text6 = list4[rd.Next(0, list4.Count)];
									list4.Remove(text6);
									chrome.SendKeys(1, "video_input", text6);
									num6++;
									MCommon.Common.DelayTime(2.0);
								}
							}
						}
						try
						{
							for (int m = 0; m < 120; m++)
							{
								if (Convert.ToInt32(chrome.ExecuteScript("return (document.querySelectorAll('#structured_composer_form img').length+'')").ToString()) == num6)
								{
									break;
								}
								MCommon.Common.DelayTime(1.0);
							}
						}
						catch
						{
						}
						for (int n = 0; n < 10; n++)
						{
							chrome.DelayTime(5.0);
							string text7 = "";
							try
							{
								text7 = chrome.ExecuteScript("return (document.querySelector('[data-sigil=\"touchable submit_composer\"]').value)").ToString();
							}
							catch
							{
								break;
							}
						}
						if (chrome.Click(4, "#composer-main-view-id > div > div > div:nth-child(3) > div button") != 1)
						{
							continue;
						}
						for (int num9 = 0; num9 < 300; num9++)
						{
							MCommon.Common.DelayTime(1.0);
							try
							{
								if (!Convert.ToBoolean(chrome.ExecuteScript("var x='false'; if(document.querySelector('[data-sigil=\"inprogress\"]')!=null) x=(document.querySelector('[data-sigil=\"inprogress\"]').getAttribute('style')=='')+''; return x")))
								{
									break;
								}
							}
							catch
							{
								break;
							}
						}
						num++;
						if (CommonChrome.CheckFacebookBlocked(chrome))
						{
							return -4;
						}
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
						if (num < num2)
						{
							chrome.DelayRandom(khoangCachFrom, khoangCachTo);
							continue;
						}
						return num;
					}
					catch
					{
						num = -1;
					}
				}
			}
			catch
			{
			}
			return num;
		}

		public int HDTuongTacNewsfeed(int indexRow, string statusProxy, Chrome chrome, int timeFrom, int timeTo, int delayFrom, int delayTo, bool isLike, int countLikeFrom, int countLikeTo, bool isComment, int countCommentFrom, int countCommentTo, bool isCommentText, List<string> lstComment, bool isSendAnh, string txtAnh, Random rd, string tenHanhDong = "", bool isShareWall = false, int countShareFrom = 0, int countShareTo = 0)
		{
			//Discarded unreachable code: IL_0fab, IL_0fe2
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int result = 0;
			try
			{
				if (chrome.CheckChromeClosed())
				{
					return -2;
				}
				while (CommonChrome.GoToHome(chrome) == 1)
				{
					int num = 0;
					int num2 = 0;
					int num3 = 0;
					int num4 = 0;
					int num5 = 0;
					int num6 = 0;
					if (isLike)
					{
						num4 = rd.Next(countLikeFrom, countLikeTo + 1);
					}
					lstComment = MCommon.Common.RemoveEmptyItems(lstComment);
					List<string> list = CloneList(lstComment);
					string text = "";
					if (isComment)
					{
						num5 = rd.Next(countCommentFrom, countCommentTo + 1);
					}
					if (isShareWall)
					{
						num6 = rd.Next(countShareFrom, countShareTo + 1);
					}
					int num7 = 0;
					int num8 = rd.Next(timeFrom, timeTo + 1);
					int tickCount = Environment.TickCount;
					string text2 = "";
					List<string> lstFrom = new List<string>();
					List<string> list2 = new List<string>();
					if (isSendAnh)
					{
						lstFrom = Directory.GetFiles(txtAnh).ToList();
						list2 = CloneList(lstFrom);
					}
					while (Environment.TickCount - tickCount < num8 * 1000)
					{
						int num9 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num9 == 1)
						{
							goto IL_009d;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num9))
						{
							return -1;
						}
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong}(Like:{num}/{num4}, Comment:{num2}/{num5}, Share:{num3}/{num6})...");
						if (chrome.CheckExistElementv2($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num7}]") != 1)
						{
							continue;
						}
						num9 = chrome.CheckExistElementOnScreen("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num7 + "].querySelector('[data-sigil=\"ufi-inline-actions\"] a')");
						switch (num9)
						{
							case -1:
							case 1:
								if (chrome.ScrollSmooth(num9 * rd.Next(chrome.GetSizeChrome().Y / 2, chrome.GetSizeChrome().Y)) != 2)
								{
									break;
								}
								goto end_IL_007c;
							case 0:
								if (isLike && num < num4 && rd.Next(1, 100) % 2 == 0 && Convert.ToBoolean(chrome.CheckExistElementv2("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num7 + "].querySelector('[data-sigil=\"ufi-inline-actions\"] a')")) && Convert.ToBoolean(chrome.ExecuteScript("var output='false';var x=document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num7 + "].querySelector('[data-sigil=\"ufi-inline-actions\"] a');  if(x!=null) output=(JSON.parse(x.getAttribute('data-store')).reaction==0)+''; return output;").ToString()) && chrome.Click(4, "[data-store*=\"linkdata\"]", num7, 4, "[data-sigil=\"ufi-inline-actions\"] a") == 1)
								{
									num++;
									DelayThaoTacNho();
								}
								if (isComment && (isCommentText || isSendAnh) && num2 < num5 && rd.Next(1, 100) % 2 == 0 && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num7}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")))
								{
									chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num7 + "].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')");
									chrome.DelayTime(1.0);
									chrome.Click(4, "[data-store*=\"linkdata\"]", num7, 4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]");
									DelayThaoTacNho();
									if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
									{
										chrome.ScrollSmooth("document.querySelector('[data-sigil =\"textarea mufi-composer m-textarea-input\"]')");
										if (isSendAnh)
										{
											if (list2.Count == 0)
											{
												list2 = CloneList(lstFrom);
											}
											text2 = list2[rd.Next(0, list2.Count)];
											list2.Remove(text2);
											chrome.SendKeys(4, "[data-sigil=\"m-raw-file-input\"]", text2);
											int tickCount2 = Environment.TickCount;
											do
											{
												chrome.DelayTime(1.0);
											}
											while (Environment.TickCount - tickCount2 < 30000 && chrome.CheckExistElement("[data-sigil=\"touchable\"]>img") != 1);
										}
										if (isCommentText)
										{
											if (list.Count == 0)
											{
												list = CloneList(lstComment);
											}
											text = list[rd.Next(0, list.Count)];
											list.Remove(text);
											text = MCommon.Common.SpinText(text, rd);
											string nameFromPost = CommonChrome.GetNameFromPost(chrome);
											text = text.Replace("[u]", nameFromPost);
											text = GetIconFacebook.ProcessString(text, rd);
											string text3 = "[data-sigil=\"textarea mufi-composer m-textarea-input\"]";
											if (MCommon.Common.CheckStringIsContainIcon(text))
											{
												text = text.Replace("\r\n", "*r*n").Replace("\n", "*r*n");
												text = text.Replace("*r*n", "\\r\\n").Replace("\"", "\\\"");
												chrome.Click(4, text3);
												chrome.ExecuteScript("document.querySelector('" + text3 + "').value=\"" + text + "\"");
												chrome.SendKeys(4, text3, " ", 0.1, isClick: false);
											}
											else
											{
												chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, text3, text + " ", 0.1);
											}
											DelayThaoTacNho(1);
										}
										for (int i = 0; i < 10; i++)
										{
											if (chrome.Click(2, "submit") == 1)
											{
												break;
											}
											MCommon.Common.DelayTime(1.0);
										}
										DelayThaoTacNho(2);
										if (CommonChrome.CheckFacebookBlocked(chrome))
										{
											return -4;
										}
									}
									chrome.GotoBackPage();
									DelayThaoTacNho();
								}
								if (isShareWall && num3 < num6 && rd.Next(1, 100) % 2 == 0 && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num7}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")) && chrome.Click(4, "[data-store*=\"linkdata\"]", num7, 4, "[data-sigil=\"share-popup\"]") == 1)
								{
									switch (chrome.CheckExistElements(5.0, "#share-one-click-button", "#share-post-one-click-button"))
									{
										case 1:
											DelayThaoTacNho();
											chrome.Click(1, "share-one-click-button");
											DelayThaoTacNho();
											num3++;
											break;
										case 2:
											DelayThaoTacNho();
											chrome.Click(1, "share-post-one-click-button");
											DelayThaoTacNho();
											num3++;
											break;
									}
								}
								num7++;
								break;
							default:
								num7++;
								break;
						}
						MCommon.Common.DelayTime(rd.Next(delayFrom, delayTo + 1));
					}
					break;
				IL_009d:;
				}
			end_IL_007c:;
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(chrome, ex, "Error HDTuongTacNewsfeed");
				result = -1;
			}
			return result;
		}

		public int HDTuongTacNewsfeedv2(int indexRow, string statusProxy, Chrome chrome, int timeFrom, int timeTo, int delayFrom, int delayTo, bool isLike, int countLikeFrom, int countLikeTo, string type, bool isComment, int countCommentFrom, int countCommentTo, List<string> lstComment, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0ae0, IL_0b17
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int result = 0;
			int num = chrome.chrome.Manage().Window.Size.Width;
			int num2 = chrome.chrome.Manage().Window.Size.Height;
			chrome.chrome.Manage().Window.Size = new Size(500, 700);
			try
			{
				if (chrome.CheckChromeClosed())
				{
					return -2;
				}
				while (chrome.GotoURLIfNotExist("https://www.facebook.com") == 1)
				{
					int num3 = 0;
					int num4 = 0;
					int num5 = 0;
					int num6 = 0;
					int num7 = 0;
					int num8 = 0;
					if (isLike)
					{
						num6 = rd.Next(countLikeFrom, countLikeTo + 1);
					}
					lstComment = MCommon.Common.RemoveEmptyItems(lstComment);
					List<string> list = CloneList(lstComment);
					string text = "";
					if (isComment)
					{
						num7 = rd.Next(countCommentFrom, countCommentTo + 1);
					}
					ClosePopup(chrome);
					int num9 = 0;
					int num10 = 0;
					int num11 = rd.Next(timeFrom, timeTo + 1);
					int tickCount = Environment.TickCount;
					while (Environment.TickCount - tickCount < num11 * 1000)
					{
						int num12 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num12 == 1)
						{
							goto IL_0111;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num12))
						{
							return -1;
						}
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong}(Like:{num3}/{num6}, Comment:{num4}/{num7}, Share:{num5}/{num8})...");
						if (chrome.CheckExistElementv2($"document.querySelectorAll('[role=\"feed\"]>[data-pagelet]')[{num9}]") == 1)
						{
							num12 = chrome.CheckExistElementOnScreen("document.querySelectorAll('[role=\"article\"] div[data-visualcompletion=\"ignore-dynamic\"] >div>div>div>div:nth-child(2)>div>div:nth-child(1)>[role=\"button\"]')[" + num9 * 2 + "]");
							switch (num12)
							{
								case -1:
								case 1:
									if (chrome.ScrollSmooth(num12 * rd.Next(chrome.GetSizeChrome().Y / 2, chrome.GetSizeChrome().Y)) != 2)
									{
										break;
									}
									goto end_IL_00f0;
								case 0:
									if (isLike && num3 < num6 && rd.Next(1, 100) % 2 == 0 && chrome.ExecuteScript("return document.querySelectorAll('[role=\"article\"] div[data-visualcompletion=\"ignore-dynamic\"] >div>div>div>div:nth-child(2)>div>div:nth-child(1)>[role=\"button\"]')[" + num9 * 2 + "].querySelectorAll('span')[2].getAttribute('style')+''").ToString() == "null")
									{
										chrome.ScrollSmooth("document.querySelectorAll('[role=\"article\"] div[data-visualcompletion=\"ignore-dynamic\"] >div>div>div>div:nth-child(2)>div>div:nth-child(1)>[role=\"button\"]')[" + num9 * 2 + "]");
										chrome.DelayTime(1.0);
										int num13 = Convert.ToInt32(type[rd.Next(0, type.Length)]) - 48;
										chrome.ExecuteScript("document.querySelectorAll('[role=\"article\"] div[data-visualcompletion=\"ignore-dynamic\"] >div>div>div>div:nth-child(2)>div>div:nth-child(1)>[role=\"button\"]')[" + (num9 * 2 + 1) + "].click()");
										if (chrome.Click(4, "[role=\"dialog\"] [role=\"toolbar\"] [role=\"button\"]", num13 + 1) == 1)
										{
											num3++;
											DelayThaoTacNho();
										}
									}
									if (isComment && num4 < num7 && rd.Next(1, 100) % 2 == 0 && Convert.ToBoolean(chrome.ExecuteScript($"return document.querySelectorAll('[role=\"feed\"]>[data-pagelet] div:nth-child(4)>[data-visualcompletion=\"ignore-dynamic\"]')[{num9}].querySelectorAll('div:nth-child(2)>div>div>[role=\"button\"]')[2] !=null").ToString()))
									{
										chrome.ScrollSmooth($"document.querySelectorAll('[role=\"feed\"]>[data-pagelet] div:nth-child(4)>[data-visualcompletion=\"ignore-dynamic\"]')[{num9}].querySelectorAll('div:nth-child(2)>div>div>[role=\"button\"]')[2]");
										chrome.DelayTime(1.0);
										if (list.Count == 0)
										{
											list = CloneList(lstComment);
										}
										text = list[rd.Next(0, list.Count)];
										list.Remove(text);
										text = MCommon.Common.SpinText(text, rd);
										if (chrome.Click(4, "[role=\"feed\"]>[data-pagelet] div:nth-child(4)>[data-visualcompletion=\"ignore-dynamic\"]", num9, 4, "div:nth-child(2)>div>div>[role=\"button\"]", 2) == 1)
										{
											DelayThaoTacNho();
											if (chrome.CheckExistElementv2("document.querySelectorAll('[role=\"article\"] div[data-visualcompletion=\"ignore-dynamic\"] >div>div>div>div:nth-child(2)>div>div:nth-child(1) [role=\"textbox\"]')[" + num9 + "]", 10.0) == 1)
											{
												chrome.DelayTime(1.0);
												chrome.ScrollSmooth("document.querySelectorAll('[role=\"article\"] div[data-visualcompletion=\"ignore-dynamic\"] >div>div>div>div:nth-child(2)>div>div:nth-child(1) [role=\"textbox\"]')[" + num9 + "]");
												chrome.DelayTime(1.0);
												text = text.Replace("[u]", CommonChrome.GetNameFromPost(chrome));
												chrome.SendKeysv2(4, "[role=\"article\"] div[data-visualcompletion=\"ignore-dynamic\"] >div>div>div>div:nth-child(2)>div>div:nth-child(1) [role=\"textbox\"]", num9, 0, "", 0, text);
												DelayThaoTacNho();
												chrome.SendEnter(4, "[role=\"article\"] div[data-visualcompletion=\"ignore-dynamic\"] >div>div>div>div:nth-child(2)>div>div:nth-child(1) [role=\"textbox\"]", num9);
											}
											DelayThaoTacNho();
											num4++;
										}
									}
									num9++;
									break;
								default:
									num9++;
									break;
							}
							MCommon.Common.DelayTime(rd.Next(delayFrom, delayTo + 1));
						}
						else
						{
							num10++;
							if (num10 >= 3)
							{
								break;
							}
							CommonChrome.ScrollRandom(chrome);
						}
					}
					break;
				IL_0111:;
				}
			end_IL_00f0:;
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(chrome, ex, "Error HDTuongTacNewsfeedv2");
				result = -1;
			}
			chrome.chrome.Manage().Window.Size = new Size(num, num2);
			return result;
		}

		public int HDTuongTacBaiVietNhomv2(int indexRow, string statusProxy, Chrome chrome, int timeFrom, int timeTo, int delayFrom, int delayTo, bool isLike, int countLikeFrom, int countLikeTo, string type, bool isComment, int countCommentFrom, int countCommentTo, List<string> lstComment, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0ba3, IL_0bda
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int result = 0;
			int num = chrome.chrome.Manage().Window.Size.Width;
			int num2 = chrome.chrome.Manage().Window.Size.Height;
			chrome.chrome.Manage().Window.Size = new Size(500, 700);
			try
			{
				if (chrome.CheckChromeClosed())
				{
					return -2;
				}
				while (chrome.GotoURLIfNotExist("https://www.facebook.com/groups/feed/") == 1)
				{
					int num3 = 0;
					int num4 = 0;
					int num5 = 0;
					int num6 = 0;
					int num7 = 0;
					int num8 = 0;
					if (isLike)
					{
						num6 = rd.Next(countLikeFrom, countLikeTo + 1);
					}
					lstComment = MCommon.Common.RemoveEmptyItems(lstComment);
					List<string> list = CloneList(lstComment);
					string text = "";
					if (isComment)
					{
						num7 = rd.Next(countCommentFrom, countCommentTo + 1);
					}
					ClosePopup(chrome);
					chrome.Scroll(300, 0);
					int num9 = 0;
					int num10 = 0;
					int num11 = rd.Next(timeFrom, timeTo + 1);
					int tickCount = Environment.TickCount;
					while (Environment.TickCount - tickCount < num11 * 1000)
					{
						int num12 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num12 == 1)
						{
							goto IL_0111;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num12))
						{
							return -1;
						}
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong}(Like:{num3}/{num6}, Comment:{num4}/{num7}, Share:{num5}/{num8})...");
						if (chrome.CheckExistElementv2($"document.querySelectorAll('[role=\"feed\"]>[data-pagelet]')[{num9}]") == 1)
						{
							num12 = chrome.CheckExistElementOnScreen("document.querySelectorAll('[role=\"article\"] div[data-visualcompletion=\"ignore-dynamic\"] >div>div>div>div:nth-child(2)>div>div:nth-child(1)>[role=\"button\"]')[" + num9 * 2 + "]");
							switch (num12)
							{
								case -1:
								case 1:
									if (chrome.ScrollSmooth(num12 * rd.Next(chrome.GetSizeChrome().Y / 2, chrome.GetSizeChrome().Y)) != 2)
									{
										break;
									}
									goto end_IL_00f0;
								case 0:
									if (isLike && num3 < num6 && rd.Next(1, 100) % 2 == 0 && chrome.ExecuteScript("return document.querySelectorAll('[role=\"article\"] div[data-visualcompletion=\"ignore-dynamic\"] >div>div>div>div:nth-child(2)>div>div:nth-child(1)>[role=\"button\"]')[" + num9 * 2 + "].querySelectorAll('span')[2].getAttribute('style')+''").ToString() == "null")
									{
										chrome.ScrollSmooth("document.querySelectorAll('[role=\"article\"] div[data-visualcompletion=\"ignore-dynamic\"] >div>div>div>div:nth-child(2)>div>div:nth-child(1)>[role=\"button\"]')[" + num9 * 2 + "]");
										chrome.DelayTime(1.0);
										int num13 = Convert.ToInt32(type[rd.Next(0, type.Length)]) - 48;
										chrome.ExecuteScript("document.querySelectorAll('[role=\"article\"] div[data-visualcompletion=\"ignore-dynamic\"] >div>div>div>div:nth-child(2)>div>div:nth-child(1)>[role=\"button\"]')[" + (num9 * 2 + 1) + "].click()");
										if (chrome.Click(4, "[role=\"dialog\"] [role=\"toolbar\"] [role=\"button\"]", num13 + 1) == 1)
										{
											num3++;
											DelayThaoTacNho();
										}
									}
									if (isComment && num4 < num7 && rd.Next(1, 100) % 2 == 0 && Convert.ToBoolean(chrome.ExecuteScript($"return document.querySelectorAll('[role=\"feed\"]>[data-pagelet] div:nth-child(4)>[data-visualcompletion=\"ignore-dynamic\"]')[{num9}].querySelectorAll('div:nth-child(2)>div>div>[role=\"button\"]')[2] !=null").ToString()))
									{
										chrome.ScrollSmooth($"document.querySelectorAll('[role=\"feed\"]>[data-pagelet] div:nth-child(4)>[data-visualcompletion=\"ignore-dynamic\"]')[{num9}].querySelectorAll('div:nth-child(2)>div>div>[role=\"button\"]')[2]");
										chrome.DelayTime(1.0);
										if (list.Count == 0)
										{
											list = CloneList(lstComment);
										}
										text = list[rd.Next(0, list.Count)];
										list.Remove(text);
										text = MCommon.Common.SpinText(text, rd);
										if (chrome.Click(4, "[role=\"feed\"]>[data-pagelet] div:nth-child(4)>[data-visualcompletion=\"ignore-dynamic\"]", num9, 4, "div:nth-child(2)>div>div>[role=\"button\"]", 2) == 1)
										{
											DelayThaoTacNho();
											if (chrome.CheckExistElementv2("document.querySelectorAll('[role=\"feed\"]>[data-pagelet] div:nth-child(4)>[data-visualcompletion=\"ignore-dynamic\"] form [role=\"textbox\"]')[" + num9 + "]", 10.0) == 1)
											{
												chrome.DelayTime(1.0);
												chrome.ScrollSmooth("document.querySelectorAll('[role=\"feed\"]>[data-pagelet] div:nth-child(4)>[data-visualcompletion=\"ignore-dynamic\"] form [role=\"textbox\"]')[" + num9 + "]");
												chrome.DelayTime(1.0);
												text = text.Replace("[u]", CommonChrome.GetNameFromPost(chrome));
												chrome.SendKeys(4, "[role=\"feed\"]>[data-pagelet] div:nth-child(4)>[data-visualcompletion=\"ignore-dynamic\"] form [role=\"textbox\"]", num9, text);
												DelayThaoTacNho();
												chrome.SendEnter(4, "[role=\"feed\"]>[data-pagelet] div:nth-child(4)>[data-visualcompletion=\"ignore-dynamic\"] form [role=\"textbox\"]", num9);
											}
											DelayThaoTacNho();
											if (chrome.CountElement("[role=\"dialog\"]") > 1 && !Convert.ToBoolean(chrome.ExecuteScript("return document.querySelectorAll('[role=\"dialog\"]')[1].querySelector('[role=\"button\"]').innerHTML==''").ToString()))
											{
												chrome.Click(4, "[role=\"dialog\"]", 1, 4, "[role=\"button\"]");
												num9++;
												break;
											}
											num4++;
										}
									}
									num9++;
									break;
								default:
									num9++;
									break;
							}
							MCommon.Common.DelayTime(rd.Next(delayFrom, delayTo + 1));
						}
						else
						{
							num10++;
							if (num10 >= 3)
							{
								break;
							}
							CommonChrome.ScrollRandom(chrome);
						}
					}
					break;
				IL_0111:;
				}
			end_IL_00f0:;
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(chrome, ex, "Error HDTuongTacNewsfeedv2");
				result = -1;
			}
			chrome.chrome.Manage().Window.Size = new Size(num, num2);
			return result;
		}

		public int HDBuffLikeComment(int indexRow, string statusProxy, Chrome chrome, int timeFrom, int timeTo, int delayFrom, int delayTo, int soLuongUidFrom, int soLuongUidTo, bool isTuDongXoa, bool isLike, bool isComment, bool isCommentText, bool isTag, int soLuongTagFrom, int soLuongTagTo, int typeComment, bool isSendAnh, string pathFolderImage, bool isSendVideo, string pathFolderVideo, List<string> lstId, Random rd, string tenHanhDong = "", bool isShareWall = false, bool isDeleteComment = false, string id_HanhDong = "")
		{
			//Discarded unreachable code: IL_02a9, IL_02be, IL_0aa6, IL_0abb, IL_162d, IL_1642, IL_196d, IL_1982, IL_1b01, IL_1b14
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			try
			{
				string text = "";
				string text2 = "";
				string text3 = "";
				List<string> lstFrom = new List<string>();
				List<string> list = new List<string>();
				if (isSendAnh)
				{
					lstFrom = Directory.GetFiles(pathFolderImage).ToList();
					list = CloneList(lstFrom);
				}
				List<string> lstFrom2 = new List<string>();
				List<string> list2 = new List<string>();
				if (isSendVideo)
				{
					lstFrom2 = Directory.GetFiles(pathFolderVideo).ToList();
					list2 = CloneList(lstFrom2);
				}
				List<string> list3 = new List<string>();
				if (isTag)
				{
					list3 = CommonChrome.GetMyListUidFriend(chrome);
				}
				string text4 = "";
				int num2 = rd.Next(soLuongUidFrom, soLuongUidTo + 1);
				if (num2 > lstId.Count)
				{
					num2 = lstId.Count;
				}
				lstId = CollectionHelper.ShuffleList(lstId);
				for (int num3 = 0; num3 < num2; num3++)
				{
					if (isTuDongXoa)
					{
						lock (dicIdBaiViet)
						{
							if (dicIdBaiViet[id_HanhDong].Count == 0)
							{
								break;
							}
							text4 = dicIdBaiViet[id_HanhDong][rd.Next(0, dicIdBaiViet[id_HanhDong].Count)];
							dicIdBaiViet[id_HanhDong].Remove(text4);
							goto IL_02d6;
						}
					}
					text4 = lstId[num3];
					goto IL_02d6;
				IL_02d6:
					if (!isSendVideo)
					{
						int num4;
						do
						{
							chrome.GotoURL("https://m.facebook.com/" + text4);
							chrome.DelayTime(2.0);
							num4 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						}
						while (num4 == 1);
						if (new List<int> { -3, -2, -1, 2 }.Contains(num4))
						{
							return -1;
						}
						if (chrome.CheckExistElement("[data-sigil=\"m-feed-voice-subtitle\"]", 5.0) == 1 || chrome.CheckExistElement("[data-sigil=\"timestamp\"]", 5.0) == 1)
						{
							if (Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"m-feed-voice-subtitle\"] > a').length+''")) > 1)
							{
								chrome.Click(4, "[data-sigil=\"m-feed-voice-subtitle\"] > a");
								chrome.DelayTime(2.0);
							}
							if (chrome.CheckExistElement("[data-sigil=\"m-video-play-button playInlineVideo\"]") == 1)
							{
								chrome.ScrollSmooth("document.querySelector('[data-sigil=\"m-video-play-button playInlineVideo\"]')");
								DelayThaoTacNho();
								chrome.ClickWithAction(4, "[data-sigil=\"m-video-play-button playInlineVideo\"]");
								DelayThaoTacNho();
							}
							chrome.DelayTime(rd.Next(timeFrom, timeTo + 1));
							if (isLike)
							{
								if (chrome.CheckExistElement("footer > div > div > div > a") == 1 && chrome.ExecuteScript("return JSON.parse(document.querySelector('footer > div > div > div > a').getAttribute('data-store')).reaction").ToString() == "0")
								{
									chrome.ScrollSmooth("document.querySelector('footer > div > div > div > a')");
									DelayThaoTacNho();
									chrome.Click(4, "footer > div > div > div > a");
								}
								DelayThaoTacNho();
							}
							if ((isComment || isSendAnh) && chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
							{
								int num5 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"textarea mufi-composer m-textarea-input\"]').length").ToString());
								for (int i = 0; i < num5; i++)
								{
									if (Convert.ToBoolean(chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"m-composer\"]>form')[" + i + "].getAttribute('id').includes('reply')")))
									{
										continue;
									}
									chrome.ScrollSmooth("document.querySelectorAll('[data-sigil =\"textarea mufi-composer m-textarea-input\"]')[" + i + "]");
									DelayThaoTacNho();
									if (isSendAnh)
									{
										DelayThaoTacNho();
										if (list.Count == 0)
										{
											list = CloneList(lstFrom);
										}
										text2 = list[rd.Next(0, list.Count)];
										list.Remove(text2);
										chrome.SendKeys(4, "[data-sigil=\"m-raw-file-input\"]", text2);
										int tickCount = Environment.TickCount;
										do
										{
											chrome.DelayTime(1.0);
										}
										while (Environment.TickCount - tickCount < 30000 && chrome.CheckExistElement("[data-sigil=\"touchable\"]>img") != 1);
										DelayThaoTacNho();
									}
									if (!isComment)
									{
										continue;
									}
									lock (dicBuffLikeComment_Comment)
									{
										if (dicBuffLikeComment_Comment[id_HanhDong].Count != 0)
										{
											goto IL_09fd;
										}
										if (!isDeleteComment)
										{
											dicBuffLikeComment_Comment[id_HanhDong] = CloneList(dicBuffLikeComment_CommentGoc[id_HanhDong]);
											goto IL_09fd;
										}
										goto end_IL_096d;
									IL_09fd:
										text = ((typeComment != 1) ? dicBuffLikeComment_Comment[id_HanhDong][0] : dicBuffLikeComment_Comment[id_HanhDong][rd.Next(0, dicBuffLikeComment_Comment[id_HanhDong].Count)]);
										dicBuffLikeComment_Comment[id_HanhDong].Remove(text);
										goto IL_0abc;
									end_IL_096d:;
									}
									break;
								IL_0abc:
									if (isTag)
									{
										string text5 = "";
										int num6 = rd.Next(soLuongTagFrom, soLuongTagTo + 1);
										for (int j = 0; j < num6; j++)
										{
											if (list3.Count == 0)
											{
												break;
											}
											text5 = list3[rd.Next(0, list3.Count)];
											list3.Remove(text5);
											text = text + " @[" + text5 + ":]";
										}
									}
									text = MCommon.Common.SpinText(text, rd);
									string nameFromPost = CommonChrome.GetNameFromPost(chrome);
									text = text.Replace("[u]", nameFromPost);
									text = GetIconFacebook.ProcessString(text, rd);
									string text6 = "[data-sigil=\"textarea mufi-composer m-textarea-input\"]";
									if (MCommon.Common.CheckStringIsContainIcon(text))
									{
										text = text.Replace("\r\n", "*r*n").Replace("\n", "*r*n");
										text = text.Replace("*r*n", "\\r\\n").Replace("\"", "\\\"");
										chrome.Click(4, text6, i);
										chrome.ExecuteScript("document.querySelectorAll('" + text6 + "')[" + i + "].value=\"" + text + "\"");
										chrome.SendKeys(4, text6, i, " ", isClick: false);
									}
									else
									{
										chrome.SendKeys(4, text6, i, text + " ");
									}
									chrome.DelayTime(2.0);
									for (int k = 0; k < 10; k++)
									{
										if (chrome.Click(2, "submit", i) == 1)
										{
											break;
										}
										MCommon.Common.DelayTime(1.0);
									}
									DelayThaoTacNho(2);
									if (CommonChrome.CheckFacebookBlocked(chrome))
									{
										return -4;
									}
									break;
								}
							}
							if (isShareWall && chrome.CheckExistElement("[data-sigil=\"share-popup\"]") == 1)
							{
								chrome.ScrollSmooth("document.querySelector('[data-sigil=\"share-popup\"]')");
								DelayThaoTacNho();
								chrome.Click(4, "[data-sigil=\"share-popup\"]");
								switch (chrome.CheckExistElements(5.0, "#share-one-click-button", "#share-post-one-click-button"))
								{
									case 1:
										DelayThaoTacNho();
										chrome.Click(1, "share-one-click-button");
										DelayThaoTacNho();
										break;
									case 2:
										DelayThaoTacNho();
										chrome.Click(1, "share-post-one-click-button");
										DelayThaoTacNho();
										break;
								}
							}
						}
					}
					else
					{
						chrome.GotoURL("https://www.facebook.com/" + text4);
						DelayThaoTacNho();
						if (chrome.CountElement("[role=\"navigation\"]") < 2 || 1 == 0)
						{
							bool flag = true;
							int num7 = chrome.CheckExistElements(30.0, "form[action=\"/ajax/ufi/modify.php\"]>div>div>div:nth-child(2)>div>span:nth-child(2) a", "form[action=\"/ajax/ufi/modify.php\"]>div>div>div>div:nth-child(3)>div>div:nth-child(2)>div>div>div:nth-child(2)>div:nth-child(2)>div>span:nth-child(2)");
							if (num7 == 1)
							{
								chrome.Click(4, "form[action=\"/ajax/ufi/modify.php\"]>div>div>div:nth-child(2)>div>span:nth-child(2) a");
								chrome.DelayTime(1.0);
								chrome.HoverElement(4, "form[action=\"/ajax/ufi/modify.php\"] form>ul>li:nth-child(2)", 1.0);
							}
							else
							{
								chrome.Click(4, "form[action=\"/ajax/ufi/modify.php\"]>div>div>div>div:nth-child(3)>div>div:nth-child(2)>div>div>div:nth-child(2)>div:nth-child(2)>div>span:nth-child(2)");
								chrome.DelayTime(1.0);
								if (chrome.CheckExistElement(".UFICommentPhotoIcon", 5.0) == 1)
								{
									chrome.HoverElement(4, ".UFICommentPhotoIcon", 3.0);
								}
								else
								{
									flag = false;
								}
							}
							if (flag)
							{
								if (isSendVideo)
								{
									DelayThaoTacNho();
									if (list2.Count == 0)
									{
										list2 = CloneList(lstFrom2);
									}
									text3 = list2[rd.Next(0, list2.Count)];
									list2.Remove(text3);
									chrome.SendKeys(4, "[type=\"file\"]", text3);
									int tickCount2 = Environment.TickCount;
									do
									{
										chrome.DelayTime(1.0);
									}
									while (Environment.TickCount - tickCount2 < 90000 && chrome.CheckExistElement("[typesetting=\"inline\"]") == 1);
								}
								if (isComment)
								{
									DelayThaoTacNho();
									lock (dicBuffLikeComment_Comment)
									{
										if (dicBuffLikeComment_Comment[id_HanhDong].Count == 0)
										{
											dicBuffLikeComment_Comment[id_HanhDong] = CloneList(dicBuffLikeComment_CommentGoc[id_HanhDong]);
										}
										text = dicBuffLikeComment_Comment[id_HanhDong][rd.Next(0, dicBuffLikeComment_Comment[id_HanhDong].Count)];
										dicBuffLikeComment_Comment[id_HanhDong].Remove(text);
									}
									chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, "[role=\"textbox\"]", text, 0.1);
									DelayThaoTacNho();
								}
								chrome.SendEnter(4, "[role=\"textbox\"]");
								DelayThaoTacNho(3);
							}
						}
						else if (chrome.CheckExistElement("[role=\"textbox\"]", 5.0) == 1)
						{
							if (isSendVideo)
							{
								DelayThaoTacNho();
								if (list2.Count == 0)
								{
									list2 = CloneList(lstFrom2);
								}
								text3 = list2[rd.Next(0, list2.Count)];
								list2.Remove(text3);
								chrome.SendKeys(4, "[type=\"file\"]", text3);
								int tickCount3 = Environment.TickCount;
								do
								{
									chrome.DelayTime(1.0);
								}
								while (Environment.TickCount - tickCount3 < 90000 && chrome.CheckExistElement("[typesetting=\"inline\"]") == 1);
							}
							if (isComment)
							{
								DelayThaoTacNho();
								lock (dicBuffLikeComment_Comment)
								{
									if (dicBuffLikeComment_Comment[id_HanhDong].Count == 0)
									{
										dicBuffLikeComment_Comment[id_HanhDong] = CloneList(dicBuffLikeComment_CommentGoc[id_HanhDong]);
									}
									text = dicBuffLikeComment_Comment[id_HanhDong][rd.Next(0, dicBuffLikeComment_Comment[id_HanhDong].Count)];
									dicBuffLikeComment_Comment[id_HanhDong].Remove(text);
								}
								text = MCommon.Common.SpinText(text, rd);
								chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, "[role=\"textbox\"]", text, 0.1);
								DelayThaoTacNho();
							}
							chrome.SendEnter(4, "[role=\"textbox\"]");
							chrome.DelayTime(3.0);
						}
					}
					num++;
					SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
					chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDBuffViewVideo(int indexRow, string statusProxy, Chrome chrome, int timeFrom, int timeTo, List<string> lstId, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0331, IL_0344
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			try
			{
				if (chrome.CheckChromeClosed())
				{
					return -2;
				}
				int count = lstId.Count;
				int num2 = 0;
				while (num2 < count)
				{
					int num3;
					do
					{
						chrome.GotoURL("https://m.facebook.com/" + lstId[num2]);
						DelayThaoTacNho(2);
						num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					}
					while (num3 == 1);
					if (new List<int> { -3, -2, -1, 2 }.Contains(num3))
					{
						return -1;
					}
					chrome.ScrollSmooth("document.querySelector('[data-sigil=\"m-video-play-button playInlineVideo\"]')");
					DelayThaoTacNho();
					chrome.ClickWithAction(4, "[data-sigil=\"m-video-play-button playInlineVideo\"]");
					num++;
					int num4 = rd.Next(timeFrom, timeTo + 1);
					int tickCount = Environment.TickCount;
					while (true)
					{
						if ((Environment.TickCount - tickCount) / 1000 - num4 >= 0)
						{
							num2++;
							break;
						}
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{count}): {{time}}s...".Replace("{time}", (num4 - (Environment.TickCount - tickCount) / 1000).ToString()));
						MCommon.Common.DelayTime(0.5);
						if (!isStop)
						{
							continue;
						}
						goto end_IL_007c;
					}
				}
			end_IL_007c:;
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDSeedingByVideo(int indexRow, string statusProxy, Chrome chrome, int delayFrom, int delayTo, bool isComment, string txtComment, int typeNganCach, bool isSendVideo, string pathFolderVideo, List<string> lstId, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0bc8, IL_0bdb
			int num = 0;
			try
			{
				if (chrome.CheckChromeClosed())
				{
					return -2;
				}
				CommonChrome.GoToHome(chrome);
				string text = "";
				string text2 = "";
				List<string> list = new List<string>();
				list = ((typeNganCach != 0) ? txtComment.Split(new string[1] { "\n|\n" }, StringSplitOptions.RemoveEmptyEntries).ToList() : txtComment.Split(new string[1] { "\n" }, StringSplitOptions.RemoveEmptyEntries).ToList());
				List<string> list2 = new List<string>();
				list = MCommon.Common.RemoveEmptyItems(list);
				list2 = CloneList(list);
				List<string> lstFrom = new List<string>();
				List<string> list3 = new List<string>();
				if (isSendVideo)
				{
					lstFrom = Directory.GetFiles(pathFolderVideo).ToList();
					list3 = CloneList(lstFrom);
				}
				int count = lstId.Count;
				for (int i = 0; i < count; i++)
				{
					string text3 = lstId[i];
					chrome.GotoURL("https://www.facebook.com/" + text3);
					DelayThaoTacNho();
					if (chrome.CheckExistElement("#userNavigationLabel") == 1 || 1 == 0)
					{
						bool flag = true;
						int num2 = chrome.CheckExistElements(30.0, "form[action=\"/ajax/ufi/modify.php\"]>div>div>div:nth-child(2)>div>span:nth-child(2) a", "form[action=\"/ajax/ufi/modify.php\"]>div>div>div>div:nth-child(3)>div>div:nth-child(2)>div>div>div:nth-child(2)>div:nth-child(2)>div>span:nth-child(2)");
						if (num2 != 0)
						{
							if (num2 == 1)
							{
								chrome.ScrollSmooth("document.querySelector('form[action=\"/ajax/ufi/modify.php\"]>div>div>div:nth-child(2)>div>span:nth-child(2) a')");
								DelayThaoTacNho();
								chrome.Click(4, "form[action=\"/ajax/ufi/modify.php\"]>div>div>div:nth-child(2)>div>span:nth-child(2) a");
								chrome.DelayTime(1.0);
								chrome.HoverElement(4, "form[action=\"/ajax/ufi/modify.php\"] form>ul>li:nth-child(2)", 1.0);
							}
							else
							{
								chrome.ScrollSmooth("document.querySelector('form[action=\"/ajax/ufi/modify.php\"]>div>div>div>div:nth-child(3)>div>div:nth-child(2)>div>div>div:nth-child(2)>div:nth-child(2)>div>span:nth-child(2)')");
								DelayThaoTacNho();
								chrome.Click(4, "form[action=\"/ajax/ufi/modify.php\"]>div>div>div>div:nth-child(3)>div>div:nth-child(2)>div>div>div:nth-child(2)>div:nth-child(2)>div>span:nth-child(2)");
								chrome.DelayTime(1.0);
								if (chrome.CheckExistElement(".UFICommentPhotoIcon", 5.0) == 1)
								{
									chrome.HoverElement(4, ".UFICommentPhotoIcon", 3.0);
								}
								else
								{
									flag = false;
								}
							}
							if (flag)
							{
								if (isSendVideo)
								{
									DelayThaoTacNho();
									if (list3.Count == 0)
									{
										list3 = CloneList(lstFrom);
									}
									text2 = list3[rd.Next(0, list3.Count)];
									list3.Remove(text2);
									chrome.SendKeys(4, "[type=\"file\"]", text2);
									int tickCount = Environment.TickCount;
									do
									{
										chrome.DelayTime(1.0);
									}
									while (Environment.TickCount - tickCount < 90000 && chrome.CheckExistElement("[typesetting=\"inline\"]") == 1);
								}
								if (isComment)
								{
									chrome.ScrollSmooth("document.querySelector('[role=\"textbox\"]')");
									DelayThaoTacNho();
									if (list2.Count == 0)
									{
										list2 = CloneList(list);
									}
									text = list2[rd.Next(0, list2.Count)];
									list2.Remove(text);
									text = MCommon.Common.SpinText(text, rd);
									switch (setting_general.GetValueInt("tocDoGoVanBan"))
									{
										case 0:
											chrome.SendKeys(Base.rd, 4, "[role=\"textbox\"]", text, 0.1);
											break;
										case 1:
											chrome.SendKeys(4, "[role=\"textbox\"]", text, 0.1);
											break;
										case 2:
											chrome.SendKeys(4, "[role=\"textbox\"]", text);
											break;
									}
									DelayThaoTacNho();
								}
								chrome.SendEnter(4, "[role=\"textbox\"]");
								DelayThaoTacNho(3);
							}
						}
					}
					else if (chrome.CheckExistElement("[role=\"textbox\"]", 5.0) == 1)
					{
						if (isSendVideo)
						{
							chrome.ScrollSmooth("document.querySelector('[type=\"file\"]')");
							DelayThaoTacNho();
							if (list3.Count == 0)
							{
								list3 = CloneList(lstFrom);
							}
							text2 = list3[rd.Next(0, list3.Count)];
							list3.Remove(text2);
							chrome.SendKeys(4, "[type=\"file\"]", text2);
							int tickCount2 = Environment.TickCount;
							do
							{
								chrome.DelayTime(1.0);
							}
							while (Environment.TickCount - tickCount2 < 90000 && chrome.CheckExistElement("[typesetting=\"inline\"]") == 1);
						}
						if (isComment)
						{
							chrome.ScrollSmooth("document.querySelector('[role=\"textbox\"]')");
							DelayThaoTacNho();
							if (list2.Count == 0)
							{
								list2 = CloneList(list);
							}
							text = list2[rd.Next(0, list2.Count)];
							list2.Remove(text);
							text = MCommon.Common.SpinText(text, rd);
							switch (setting_general.GetValueInt("tocDoGoVanBan"))
							{
								case 0:
									chrome.SendKeys(Base.rd, 4, "[role=\"textbox\"]", text, 0.1);
									break;
								case 1:
									chrome.SendKeys(4, "[role=\"textbox\"]", text, 0.1);
									break;
								case 2:
									chrome.SendKeys(4, "[role=\"textbox\"]", text);
									break;
							}
							DelayThaoTacNho();
						}
						chrome.SendEnter(4, "[role=\"textbox\"]");
						DelayThaoTacNho(3);
					}
					num++;
					SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{count})...");
					chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDBuffFollowCaNhan(int indexRow, string statusProxy, Chrome chrome, int delayFrom, int delayTo, List<string> lstId, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0405, IL_0418
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			try
			{
				if (chrome.CheckChromeClosed())
				{
					return -2;
				}
				int count = lstId.Count;
				for (int i = 0; i < count; i++)
				{
					int num2;
					do
					{
						chrome.GotoURL("https://m.facebook.com/" + lstId[i]);
						DelayThaoTacNho(2);
						num2 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					}
					while (num2 == 1);
					if (new List<int> { -3, -2, -1, 2 }.Contains(num2))
					{
						return -1;
					}
					string cssSelector = chrome.GetCssSelector("a", "href", "subscriptions/add");
					if (cssSelector != "")
					{
						if (chrome.Click(4, cssSelector) != 1)
						{
							chrome.GotoURL("https://m.facebook.com/" + chrome.GetAttributeValue(cssSelector, "href"));
						}
					}
					else if (chrome.CheckExistElement("#pages_follow_action_id") == 1)
					{
						chrome.ScrollSmooth("document.querySelector('#pages_follow_action_id')");
						DelayThaoTacNho();
						chrome.Click(1, "pages_follow_action_id");
					}
					num++;
					SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{count})...");
					chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDBuffFollowLikePage(int indexRow, string statusProxy, Chrome chrome, int delayFrom, int delayTo, List<string> lstId, bool isLike, bool isFollow, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_05e3, IL_05f6
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			try
			{
				if (chrome.CheckChromeClosed())
				{
					return -2;
				}
				int count = lstId.Count;
				string text = "";
				string text2 = "";
				bool flag = false;
				for (int i = 0; i < count; i++)
				{
					flag = false;
					int num2;
					do
					{
						chrome.GotoURL("https://m.facebook.com/" + lstId[i]);
						DelayThaoTacNho();
						num2 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					}
					while (num2 == 1);
					if (new List<int> { -3, -2, -1, 2 }.Contains(num2))
					{
						return -1;
					}
					if (isLike)
					{
						text = chrome.GetURL();
						if (chrome.CheckExistElement("#msite-pages-header-contents", 10.0) == 1)
						{
							chrome.ScrollSmooth("document.querySelector('[style=\"flex-grow:0;flex-shrink:1;margin:0 0 5px 0\"]')");
							DelayThaoTacNho();
							chrome.ExecuteScript("document.querySelector('[style=\"flex-grow:0;flex-shrink:1;margin:0 0 5px 0\"]').click()");
							DelayThaoTacNho(2);
							text2 = chrome.GetURL();
							if (text == text2)
							{
								flag = true;
								DelayThaoTacNho();
							}
						}
					}
					else if (isFollow)
					{
						text = chrome.GetURL();
						if (chrome.CheckExistElement("[data-sigil=\"header-launchpad-more-button\"]>div", 5.0) == 1)
						{
							chrome.ScrollSmooth("document.querySelector('[data-sigil=\"header-launchpad-more-button\"]>div')");
							DelayThaoTacNho();
							chrome.Click(4, "[data-sigil=\"header-launchpad-more-button\"]>div");
							DelayThaoTacNho();
							num2 = chrome.CheckExistElements(5.0, "#page > div > div > div > div > div > div > div > div:nth-child(1) > div > div > div > div._2ti7", "#page > div > div > div > div > div > div > div > div:nth-child(2) > div > div > div > div._2ti7");
							if (num2 == 1)
							{
								chrome.Click(4, "#page > div > div > div > div > div > div > div > div:nth-child(1) > div > div > div > div._2ti7");
								DelayThaoTacNho(2);
								text2 = chrome.GetURL();
								if (text == text2)
								{
									flag = true;
								}
							}
							else
							{
								chrome.Click(4, "#page > div > div > div > div > div > div > div > div:nth-child(2) > div > div > div > div._2ti7");
								DelayThaoTacNho(2);
								text2 = chrome.GetURL();
								if (text == text2)
								{
									flag = true;
								}
							}
						}
					}
					if (flag)
					{
						num++;
					}
					SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{count})...");
					chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDBaiVietNewsfeed(int indexRow, string statusProxy, Chrome chrome, int countPostFrom, int countPostTo, int delayFrom, int delayTo, bool isLike, bool isComment, bool isCommentText, List<string> lstComment, bool isSendAnh, string txtAnh, Random rd, string tenHanhDong = "", bool isShareWall = false)
		{
			//Discarded unreachable code: IL_0fb0, IL_0fc3
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			try
			{
				int num2 = -1;
				lstComment = MCommon.Common.RemoveEmptyItems(lstComment);
				List<string> list = CloneList(lstComment);
				string text = "";
				int num3 = 0;
				int num4 = rd.Next(countPostFrom, countPostTo + 1);
				string text2 = "";
				List<string> lstFrom = new List<string>();
				List<string> list2 = new List<string>();
				if (isSendAnh)
				{
					lstFrom = Directory.GetFiles(txtAnh).ToList();
					list2 = CloneList(lstFrom);
				}
				while (true)
				{
				IL_013c:
					if (CommonChrome.GoToHome(chrome) == -2)
					{
						return -2;
					}
					int num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num5 == 1)
					{
						continue;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
					{
						return -1;
					}
					int num6 = 0;
					if (!Convert.ToBoolean(chrome.ExecuteScript("return (document.querySelectorAll('[data-store*=\"linkdata\"]').length>0)+''").ToString()))
					{
						break;
					}
					while (num < num4)
					{
						num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num5 == 1)
						{
							goto IL_013c;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
						{
							return -1;
						}
						num2++;
						if (chrome.CheckExistElementv2($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num2}]") != 1)
						{
							break;
						}
						num6 = 0;
						if (Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num2}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")) || Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num2}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")) || Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num2}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")))
						{
							num6++;
						}
						chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num2 + "]");
						DelayThaoTacNho();
						if (isLike && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num2}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")))
						{
							chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num2 + "].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')");
							num6++;
							if (Convert.ToBoolean(chrome.ExecuteScript($"var output='false';var x=document.querySelectorAll('[data-store*=\"linkdata\"]')[{num2}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a');  if(x!=null) output=(JSON.parse(x.getAttribute('data-store')).reaction==0)+''; return output;").ToString()))
							{
								DelayThaoTacNho();
								chrome.Click(4, "[data-store*=\"linkdata\"]", num2, 4, "[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a");
								DelayThaoTacNho();
							}
						}
						if (isComment && (isCommentText || isSendAnh) && rd.Next(1, 100) % 2 == 0 && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num2}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")))
						{
							chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num2 + "].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')");
							chrome.DelayTime(1.0);
							chrome.Click(4, "[data-store*=\"linkdata\"]", num2, 4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]");
							DelayThaoTacNho();
							if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
							{
								chrome.ScrollSmooth("document.querySelector('[data-sigil =\"textarea mufi-composer m-textarea-input\"]')");
								if (isSendAnh)
								{
									if (list2.Count == 0)
									{
										list2 = CloneList(lstFrom);
									}
									text2 = list2[rd.Next(0, list2.Count)];
									list2.Remove(text2);
									chrome.SendKeys(4, "[data-sigil=\"m-raw-file-input\"]", text2);
									int tickCount = Environment.TickCount;
									do
									{
										chrome.DelayTime(1.0);
									}
									while (Environment.TickCount - tickCount < 30000 && chrome.CheckExistElement("[data-sigil=\"touchable\"]>img") != 1);
								}
								if (isCommentText)
								{
									if (list.Count == 0)
									{
										list = CloneList(lstComment);
									}
									text = list[rd.Next(0, list.Count)];
									list.Remove(text);
									text = MCommon.Common.SpinText(text, rd);
									string nameFromPost = CommonChrome.GetNameFromPost(chrome);
									text = text.Replace("[u]", nameFromPost);
									text = GetIconFacebook.ProcessString(text, rd);
									string text3 = "[data-sigil=\"textarea mufi-composer m-textarea-input\"]";
									if (MCommon.Common.CheckStringIsContainIcon(text))
									{
										text = text.Replace("\r\n", "*r*n").Replace("\n", "*r*n");
										text = text.Replace("*r*n", "\\r\\n").Replace("\"", "\\\"");
										chrome.Click(4, text3);
										chrome.ExecuteScript("document.querySelector('" + text3 + "').value=\"" + text + "\"");
										chrome.SendKeys(4, text3, " ", 0.1, isClick: false);
									}
									else
									{
										chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, text3, text + " ", 0.1);
									}
									DelayThaoTacNho(1);
								}
								for (int i = 0; i < 10; i++)
								{
									if (chrome.Click(2, "submit") == 1)
									{
										break;
									}
									MCommon.Common.DelayTime(1.0);
								}
								DelayThaoTacNho(2);
								if (CommonChrome.CheckFacebookBlocked(chrome))
								{
									return -4;
								}
							}
							chrome.GotoBackPage();
							DelayThaoTacNho();
						}
						if (isShareWall && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num2}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")))
						{
							chrome.Click(4, "[data-store*=\"linkdata\"]", num2, 4, "[data-sigil=\"share-popup\"]");
							switch (chrome.CheckExistElements(5.0, "#share-one-click-button", "#share-post-one-click-button"))
							{
								case 1:
									DelayThaoTacNho();
									chrome.Click(1, "share-one-click-button");
									DelayThaoTacNho();
									break;
								case 2:
									DelayThaoTacNho();
									chrome.Click(1, "share-post-one-click-button");
									DelayThaoTacNho();
									break;
							}
						}
						if (num6 > 0)
						{
							num3 = 0;
							num++;
							if (tenHanhDong == "")
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang tương tác") + $" newsfeed ({num}/{num4})...");
							}
							else
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num4})...");
							}
						}
						else
						{
							num3++;
							if (num3 == 5)
							{
								break;
							}
						}
						chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
					}
					break;
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDBaiVietTrenTuong(int indexRow, string statusProxy, Chrome chrome, int countPostFrom, int countPostTo, int delayFrom, int delayTo, bool isLike, bool isComment, bool isCommentText, List<string> lstComment, bool isSendAnh, string txtAnh, Random rd, string tenHanhDong = "", bool isShareWall = false)
		{
			//Discarded unreachable code: IL_0d1b, IL_0d2e
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			try
			{
				int num2 = -1;
				lstComment = MCommon.Common.RemoveEmptyItems(lstComment);
				List<string> list = CloneList(lstComment);
				string text = "";
				int num3 = 0;
				int num4 = rd.Next(countPostFrom, countPostTo + 1);
				string text2 = "";
				List<string> lstFrom = new List<string>();
				List<string> list2 = new List<string>();
				if (isSendAnh)
				{
					lstFrom = Directory.GetFiles(txtAnh).ToList();
					list2 = CloneList(lstFrom);
				}
				while (true)
				{
				IL_013c:
					chrome.GotoURL("https://m.facebook.com/me");
					int num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num5 == 1)
					{
						continue;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
					{
						return -1;
					}
					int num6 = 0;
					if (!Convert.ToBoolean(chrome.ExecuteScript("return (document.querySelectorAll('[data-store*=\"linkdata\"]').length>0)+''").ToString()))
					{
						break;
					}
					while (num < num4)
					{
						num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num5 == 1)
						{
							goto IL_013c;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
						{
							return -1;
						}
						num2++;
						if (chrome.CheckExistElementv2($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num2}]") != 1)
						{
							break;
						}
						num6 = 0;
						if (Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num2}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")) || Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num2}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")) || Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num2}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")))
						{
							num6++;
						}
						chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num2 + "]");
						DelayThaoTacNho();
						if (isLike && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num2}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")))
						{
							chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num2 + "].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')");
							num6++;
							if (Convert.ToBoolean(chrome.ExecuteScript($"var output='false';var x=document.querySelectorAll('[data-store*=\"linkdata\"]')[{num2}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a');  if(x!=null) output=(JSON.parse(x.getAttribute('data-store')).reaction==0)+''; return output;").ToString()))
							{
								DelayThaoTacNho();
								chrome.Click(4, "[data-store*=\"linkdata\"]", num2, 4, "[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a");
								DelayThaoTacNho();
							}
						}
						if (isComment && (isCommentText || isSendAnh) && rd.Next(1, 100) % 2 == 0 && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num2}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")))
						{
							chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num2 + "].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')");
							chrome.DelayTime(1.0);
							chrome.Click(4, "[data-store*=\"linkdata\"]", num2, 4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]");
							DelayThaoTacNho();
							if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
							{
								chrome.ScrollSmooth("document.querySelector('[data-sigil =\"textarea mufi-composer m-textarea-input\"]')");
								if (isSendAnh)
								{
									if (list2.Count == 0)
									{
										list2 = CloneList(lstFrom);
									}
									text2 = list2[rd.Next(0, list2.Count)];
									list2.Remove(text2);
									chrome.SendKeys(4, "[data-sigil=\"m-raw-file-input\"]", text2);
									int tickCount = Environment.TickCount;
									do
									{
										chrome.DelayTime(1.0);
									}
									while (Environment.TickCount - tickCount < 30000 && chrome.CheckExistElement("[data-sigil=\"touchable\"]>img") != 1);
								}
								if (isCommentText)
								{
									if (list.Count == 0)
									{
										list = CloneList(lstComment);
									}
									text = list[rd.Next(0, list.Count)];
									list.Remove(text);
									text = MCommon.Common.SpinText(text, rd);
									string nameFromPost = CommonChrome.GetNameFromPost(chrome);
									text = text.Replace("[u]", nameFromPost);
									text = GetIconFacebook.ProcessString(text, rd);
									string text3 = "[data-sigil=\"textarea mufi-composer m-textarea-input\"]";
									if (MCommon.Common.CheckStringIsContainIcon(text))
									{
										text = text.Replace("\r\n", "*r*n").Replace("\n", "*r*n");
										text = text.Replace("*r*n", "\\r\\n").Replace("\"", "\\\"");
										chrome.Click(4, text3);
										chrome.ExecuteScript("document.querySelector('" + text3 + "').value=\"" + text + "\"");
										chrome.SendKeys(4, text3, " ", 0.1, isClick: false);
									}
									else
									{
										chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, text3, text + " ", 0.1);
									}
									DelayThaoTacNho(1);
								}
								for (int i = 0; i < 10; i++)
								{
									if (chrome.Click(2, "submit") == 1)
									{
										break;
									}
									MCommon.Common.DelayTime(1.0);
								}
								DelayThaoTacNho(2);
								if (CommonChrome.CheckFacebookBlocked(chrome))
								{
									return -4;
								}
							}
							chrome.GotoBackPage();
							DelayThaoTacNho();
						}
						if (num6 > 0)
						{
							num3 = 0;
							num++;
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num4})...");
						}
						else
						{
							num3++;
							if (num3 == 5)
							{
								break;
							}
						}
						chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
					}
					break;
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		private void NewFeed(Chrome chrome, int countPostFrom, int countPostTo, bool isInteract, int typeInteract, bool isComment, List<string> lstComment, bool isShareWall, int delayFrom, int delayTo, Random rd)
		{
			List<string> list = new List<string>();
			list = CloneList(lstComment);
			int num = 0;
			if (chrome.GetURL() != "https://www.facebook.com/")
			{
				chrome.GotoURL("https://www.facebook.com/");
			}
			chrome.DelayTime(3.0);
			int num2 = rd.Next(countPostFrom, countPostTo + 1);
			for (int i = 0; i < num2; i++)
			{
				if (chrome.CheckExistElementv2("document.querySelectorAll('[role=\"feed\"]>div')[" + i + "]", 3.0) != 1)
				{
					break;
				}
				if (chrome.CheckExistElementOnScreen("document.querySelectorAll('[role=\"feed\"]>div')[" + i + "]") != 0)
				{
					chrome.ScrollSmooth("document.querySelectorAll('[role=\"feed\"]>div')[" + i + "]");
					DelayThaoTacNho();
				}
				if (isInteract)
				{
					string text = "";
					string text2 = "[role=\"feed\"]>div:nth-child(" + (i + 2) + ") div[data-visualcompletion=\"ignore-dynamic\"]>div>div>div>div:nth-child(1)>span";
					string text3 = "[role=\"feed\"]>div:nth-child(" + (i + 2) + ") div[data-visualcompletion=\"ignore-dynamic\"]>div>div>div>div:nth-child(2)>span";
					int num3 = chrome.CheckExistElements(0.0, text2, text3);
					switch (num3)
					{
						case 1:
							text = text2;
							break;
						case 2:
							text = text3;
							break;
					}
					if (num3 != 0)
					{
						DelayThaoTacNho();
						if (chrome.CheckExistElementOnScreen("document.querySelector('" + text + "')") != 0)
						{
							chrome.ScrollSmooth("document.querySelector('" + text + "')");
							DelayThaoTacNho();
						}
						chrome.HoverElement(4, text, 0.0);
						string text4 = "body>div>div>div>div[role=\"dialog\"]>span:nth-child(" + typeInteract + ")";
						if (chrome.CheckExistElement(text4, 3.0) == 1)
						{
							chrome.DelayTime(0.1);
							chrome.Click(4, text4);
							DelayThaoTacNho();
						}
					}
				}
				if (isComment)
				{
					string text5 = "";
					string text6 = "[role=\"feed\"]>div:nth-child(" + (i + 2) + ") div[data-visualcompletion=\"ignore-dynamic\"]>div>div>div>div:nth-child(1)>span:nth-child(2)>div";
					string text7 = "[role=\"feed\"]>div:nth-child(" + (i + 2) + ") div[data-visualcompletion=\"ignore-dynamic\"]>div>div>div>div:nth-child(2)>span:nth-child(2)>div";
					int num4 = chrome.CheckExistElements(0.0, text6, text7);
					switch (num4)
					{
						case 1:
							text5 = text6;
							break;
						case 2:
							text5 = text7;
							break;
					}
					if (num4 != 0)
					{
						if (list.Count == 0)
						{
							list = CloneList(lstComment);
						}
						string text8 = lstComment[rd.Next(0, lstComment.Count)];
						list.Remove(text8);
						string text9 = "[role=\"feed\"]>div:nth-child(" + (i + 2) + ") [data-contents=\"true\"]";
						if (chrome.CheckExistElement(text9) != 1)
						{
							DelayThaoTacNho();
							if (chrome.CheckExistElementOnScreen("document.querySelector('" + text5 + "')") != 0)
							{
								chrome.ScrollSmooth("document.querySelector('" + text5 + "')");
								DelayThaoTacNho();
							}
							chrome.Click(4, text5);
						}
						if (chrome.CheckExistElement(text9, 5.0) == 1)
						{
							DelayThaoTacNho();
							if (chrome.CheckExistElementOnScreen("document.querySelector('" + text9 + "')") != 0)
							{
								chrome.ScrollSmooth("document.querySelector('" + text9 + "')");
								DelayThaoTacNho();
							}
							switch (setting_general.GetValueInt("tocDoGoVanBan"))
							{
								case 0:
								case 1:
									chrome.SendKeys(4, text9, chrome.CountElement(text9) - 1, text8, 0.1, isClick: true, rd.Next(1, 3));
									break;
								case 2:
									chrome.SendKeys(4, text9, chrome.CountElement(text9) - 1, text8);
									break;
							}
							DelayThaoTacNho(1);
							chrome.SendEnter(4, text9);
							DelayThaoTacNho(2);
						}
					}
				}
				if (isShareWall)
				{
					string text10 = "";
					string text11 = "[role=\"feed\"]>div:nth-child(" + (i + 2) + ") div[data-visualcompletion=\"ignore-dynamic\"]>div>div>div>div:nth-child(1)>div[aria-label]";
					string text12 = "[role=\"feed\"]>div:nth-child(" + (i + 2) + ") div[data-visualcompletion=\"ignore-dynamic\"]>div>div>div>div:nth-child(2)>div[aria-label]";
					int num5 = chrome.CheckExistElements(0.0, text12, text11);
					switch (num5)
					{
						case 1:
							text10 = text12;
							break;
						case 2:
							text10 = text11;
							break;
					}
					if (num5 != 0)
					{
						int num6 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-pagelet=\"root\"]').length+''").ToString());
						if (chrome.CheckExistElementOnScreen("document.querySelector('" + text10 + "')") != 0)
						{
							chrome.ScrollSmooth("document.querySelector('" + text10 + "')");
							DelayThaoTacNho();
						}
						if (chrome.Click(4, text10) == 1)
						{
							for (int j = 0; j < 5; j++)
							{
								int num7 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-pagelet=\"root\"]').length+''").ToString());
								if (num7 > num6)
								{
									DelayThaoTacNho();
									if (chrome.Click(4, "[data-testid=\"Keycommand_wrapper_ModalLayer\"] [data-visualcompletion=\"ignore-dynamic\"] >div") == 1)
									{
										i++;
									}
									break;
								}
								chrome.DelayTime(1.0);
							}
						}
					}
				}
				num++;
				chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
			}
		}

		public int HDBaiVietBanBe(int indexRow, string statusProxy, Chrome chrome, string token, string cookie, int soLuongBanFrom, int soLuongBanTo, int soLuongBaiFrom, int soLuongBaiTo, int delayFrom, int delayTo, bool isLike, bool isComment, bool isCommentText, List<string> lstComment, bool isSendAnh, string txtAnh, string proxy, int typeProxy, Random rd, string tenHanhDong = "", bool isShareWall = false, int typeNganCach = 0)
		{
			//Discarded unreachable code: IL_124c, IL_1278
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = 0;
			try
			{
				int num3 = rd.Next(soLuongBanFrom, soLuongBanTo + 1);
				int num4 = 0;
				string text = "";
				lstComment = MCommon.Common.RemoveEmptyItems(lstComment);
				List<string> list = new List<string>();
				list = CloneList(lstComment);
				string text2 = "";
				List<string> lstFrom = new List<string>();
				List<string> list2 = new List<string>();
				if (isSendAnh)
				{
					lstFrom = Directory.GetFiles(txtAnh).ToList();
					list2 = CloneList(lstFrom);
				}
				while (true)
				{
					if (CommonChrome.GoToFriend(chrome) == -2)
					{
						return -2;
					}
					int num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num5 == 1)
					{
						continue;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
					{
						return -1;
					}
					if (num3 == 0)
					{
						break;
					}
					int num6 = chrome.CountElement("[data-sigil=\"undoable-action\"]");
					if (num6 > 5)
					{
						CommonChrome.ScrollRandom(chrome);
					}
					num6 = chrome.CountElement("[data-sigil=\"undoable-action\"]");
					if (num6 <= 0)
					{
						break;
					}
					int index = Base.rd.Next(0, num6);
					chrome.ScrollSmooth("document.querySelectorAll('[data-sigil=\"undoable-action\"]>div:nth-child(1)>a')[" + index + "]");
					DelayThaoTacNho();
					chrome.Click(4, "[data-sigil=\"undoable-action\"]>div:nth-child(1)>a", index);
					DelayThaoTacNho(2);
					num++;
					num2 = 0;
					int num7 = rd.Next(soLuongBaiFrom, soLuongBaiTo + 1);
					int num8 = 0;
					int num9 = -1;
					while (true)
					{
						if (num2 < num7)
						{
							num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							if (num5 == 1)
							{
								break;
							}
							if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
							{
								return -1;
							}
							num9++;
							if (chrome.CheckExistElementv2($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}]") == 1)
							{
								if (Base.rd.Next(1, 100) % 2 != 0)
								{
									continue;
								}
								num8 = 0;
								if (Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")) || Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")) || Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")))
								{
									num8++;
								}
								chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num9 + "]");
								DelayThaoTacNho(2);
								if (isLike && Base.rd.Next(1, 100) % 3 == 0 && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")))
								{
									chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num9 + "].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')");
									num8++;
									if (Convert.ToBoolean(chrome.ExecuteScript($"var output='false';var x=document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a');  if(x!=null) output=(JSON.parse(x.getAttribute('data-store')).reaction==0)+''; return output;").ToString()))
									{
										DelayThaoTacNho();
										chrome.Click(4, "[data-store*=\"linkdata\"]", num9, 4, "[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a");
										DelayThaoTacNho();
									}
								}
								if (isComment && (isCommentText || isSendAnh) && rd.Next(1, 100) % 2 == 0 && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")))
								{
									chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num9 + "].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')");
									chrome.DelayTime(1.0);
									chrome.Click(4, "[data-store*=\"linkdata\"]", num9, 4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]");
									DelayThaoTacNho();
									if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
									{
										chrome.ScrollSmooth("document.querySelector('[data-sigil =\"textarea mufi-composer m-textarea-input\"]')");
										if (isSendAnh)
										{
											if (list2.Count == 0)
											{
												list2 = CloneList(lstFrom);
											}
											text2 = list2[rd.Next(0, list2.Count)];
											list2.Remove(text2);
											chrome.SendKeys(4, "[data-sigil=\"m-raw-file-input\"]", text2);
											int tickCount = Environment.TickCount;
											do
											{
												chrome.DelayTime(1.0);
											}
											while (Environment.TickCount - tickCount < 30000 && chrome.CheckExistElement("[data-sigil=\"touchable\"]>img") != 1);
										}
										if (isCommentText)
										{
											if (list.Count == 0)
											{
												list = CloneList(lstComment);
											}
											text = list[rd.Next(0, list.Count)];
											list.Remove(text);
											text = MCommon.Common.SpinText(text, rd);
											string nameFromPost = CommonChrome.GetNameFromPost(chrome);
											text = text.Replace("[u]", nameFromPost);
											text = GetIconFacebook.ProcessString(text, rd);
											string text3 = "[data-sigil=\"textarea mufi-composer m-textarea-input\"]";
											if (MCommon.Common.CheckStringIsContainIcon(text))
											{
												text = text.Replace("\r\n", "*r*n").Replace("\n", "*r*n");
												text = text.Replace("*r*n", "\\r\\n").Replace("\"", "\\\"");
												chrome.Click(4, text3);
												chrome.ExecuteScript("document.querySelector('" + text3 + "').value=\"" + text + "\"");
												chrome.SendKeys(4, text3, " ", 0.1, isClick: false);
											}
											else
											{
												chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, text3, text + " ", 0.1);
											}
											DelayThaoTacNho(1);
										}
										for (int i = 0; i < 10; i++)
										{
											if (chrome.Click(2, "submit") == 1)
											{
												break;
											}
											MCommon.Common.DelayTime(1.0);
										}
										DelayThaoTacNho(2);
										if (CommonChrome.CheckFacebookBlocked(chrome))
										{
											return -4;
										}
									}
									chrome.GotoBackPage();
									DelayThaoTacNho();
								}
								if (isShareWall && Base.rd.Next(1, 100) % 3 == 0 && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")))
								{
									num8++;
									chrome.Click(4, "[data-store*=\"linkdata\"]", num9, 4, "[data-sigil=\"share-popup\"]");
									switch (chrome.CheckExistElements(5.0, "#share-one-click-button", "#share-post-one-click-button"))
									{
										case 1:
											DelayThaoTacNho();
											chrome.Click(1, "share-one-click-button");
											DelayThaoTacNho();
											break;
										case 2:
											DelayThaoTacNho();
											chrome.Click(1, "share-post-one-click-button");
											DelayThaoTacNho();
											break;
									}
								}
								if (num8 > 0)
								{
									num4 = 0;
									num2++;
									if (tenHanhDong == "")
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang tương tác bạn bè") + $"({num}/{num3}:{num2}/{num7})...");
									}
									else
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num3}:{num2}/{num7})...");
									}
									if (chrome.CheckChromeClosed())
									{
										return -2;
									}
								}
								else
								{
									num4++;
									if (num4 == 3)
									{
										goto IL_1232;
									}
								}
								chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
								continue;
							}
						}
						goto IL_1232;
					IL_1232:
						if (num < num3)
						{
							break;
						}
						goto end_IL_0083;
					}
				}
			end_IL_0083:;
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(null, ex, "HDBaiVietBanBe");
			}
			return num;
		}

		public int HDTuongTacBanBe(int indexRow, string statusProxy, Chrome chrome, int soLuongBanFrom, int soLuongBanTo, int timeFrom, int timeTo, int delayFrom, int delayTo, bool isLike, int countLikeFrom, int countLikeTo, bool isComment, int countCommentFrom, int countCommentTo, bool isCommentText, List<string> lstComment, bool isSendAnh, string txtAnh, Random rd, string tenHanhDong = "", bool isShareWall = false, int countShareFrom = 0, int countShareTo = 0)
		{
			//Discarded unreachable code: IL_137b, IL_13a7
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			string text = "";
			List<int> list = new List<int>();
			List<string> lstFrom = new List<string>();
			List<string> list2 = new List<string>();
			try
			{
				int num2 = rd.Next(soLuongBanFrom, soLuongBanTo + 1);
				if (num2 != 0)
				{
					if (isSendAnh)
					{
						lstFrom = Directory.GetFiles(txtAnh).ToList();
						list2 = CloneList(lstFrom);
					}
					while (num < num2)
					{
						while (true)
						{
						IL_0117:
							if (CommonChrome.GoToFriend(chrome) == -2)
							{
								return -2;
							}
							int num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							if (num3 == 1)
							{
								continue;
							}
							if (new List<int> { -3, -2, -1, 2 }.Contains(num3))
							{
								return -1;
							}
							num++;
							int num4 = chrome.CountElement("[data-sigil=\"undoable-action\"]");
							if (num4 > 5)
							{
								CommonChrome.ScrollRandom(chrome);
							}
							num4 = chrome.CountElement("[data-sigil=\"undoable-action\"]");
							if (num4 <= 0)
							{
								break;
							}
							int num5;
							if (list.Count != num4)
							{
								num5 = Base.rd.Next(0, num4);
								if (!list.Contains(num5))
								{
									list.Add(num5);
									goto IL_030a;
								}
								int num6 = 0;
								do
								{
									num5 = Base.rd.Next(0, num4);
									num6++;
								}
								while (num6 != 10 && list.Contains(num5));
								if (!list.Contains(num5))
								{
									list.Add(num5);
									goto IL_030a;
								}
							}
							goto end_IL_00a8;
						IL_030a:
							chrome.ScrollSmooth("document.querySelectorAll('[data-sigil=\"undoable-action\"]>div:nth-child(1)>a')[" + num5 + "]");
							DelayThaoTacNho();
							chrome.Click(4, "[data-sigil=\"undoable-action\"]>div:nth-child(1)>a", num5);
							DelayThaoTacNho(2);
							int num7 = 0;
							int num8 = 0;
							int num9 = 0;
							int num10 = 0;
							int num11 = 0;
							int num12 = 0;
							if (isLike)
							{
								num10 = rd.Next(countLikeFrom, countLikeTo + 1);
							}
							lstComment = MCommon.Common.RemoveEmptyItems(lstComment);
							List<string> list3 = CloneList(lstComment);
							string text2 = "";
							if (isComment)
							{
								num11 = rd.Next(countCommentFrom, countCommentTo + 1);
							}
							if (isShareWall)
							{
								num12 = rd.Next(countShareFrom, countShareTo + 1);
							}
							int num13 = 0;
							int num14 = rd.Next(timeFrom, timeTo + 1);
							int tickCount = Environment.TickCount;
							while (Environment.TickCount - tickCount < num14 * 1000)
							{
								num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
								if (num3 == 1)
								{
									goto IL_0117;
								}
								if (new List<int> { -3, -2, -1, 2 }.Contains(num3))
								{
									return -1;
								}
								if (tenHanhDong == "")
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang tương tác bạn bè") + $" ({num}/{num2} => Like:{num7}/{num10}, Comment:{num8}/{num11}), Share:{num9}/{num12})...");
								}
								else
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2} => Like:{num7}/{num10}, Comment:{num8}/{num11}), Share:{num9}/{num12})...");
								}
								if (chrome.CheckExistElementv2($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num13}]") != 1)
								{
									continue;
								}
								num3 = chrome.CheckExistElementOnScreen("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num13 + "].querySelector('[data-sigil=\"ufi-inline-actions\"] a')");
								switch (num3)
								{
									case -1:
									case 1:
										if (chrome.ScrollSmooth(num3 * rd.Next(chrome.GetSizeChrome().Y / 2, chrome.GetSizeChrome().Y)) == 2)
										{
											break;
										}
										goto IL_131f;
									case 0:
										if (isLike && num7 < num10 && rd.Next(1, 100) % 2 == 0 && Convert.ToBoolean(chrome.CheckExistElementv2("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num13 + "].querySelector('[data-sigil=\"ufi-inline-actions\"] a')")) && Convert.ToBoolean(chrome.ExecuteScript("var output='false';var x=document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num13 + "].querySelector('[data-sigil=\"ufi-inline-actions\"] a');  if(x!=null) output=(JSON.parse(x.getAttribute('data-store')).reaction==0)+''; return output;").ToString()) && chrome.Click(4, "[data-store*=\"linkdata\"]", num13, 4, "[data-sigil=\"ufi-inline-actions\"] a") == 1)
										{
											num7++;
											DelayThaoTacNho();
										}
										if (isComment && (isCommentText || isSendAnh) && num8 < num11 && rd.Next(1, 100) % 2 == 0 && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num13}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")))
										{
											chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num13 + "].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')");
											chrome.DelayTime(1.0);
											chrome.Click(4, "[data-store*=\"linkdata\"]", num13, 4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]");
											DelayThaoTacNho();
											if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
											{
												chrome.ScrollSmooth("document.querySelector('[data-sigil =\"textarea mufi-composer m-textarea-input\"]')");
												if (isSendAnh)
												{
													if (list2.Count == 0)
													{
														list2 = CloneList(lstFrom);
													}
													text = list2[rd.Next(0, list2.Count)];
													list2.Remove(text);
													chrome.SendKeys(4, "[data-sigil=\"m-raw-file-input\"]", text);
													int tickCount2 = Environment.TickCount;
													do
													{
														chrome.DelayTime(1.0);
													}
													while (Environment.TickCount - tickCount2 < 30000 && chrome.CheckExistElement("[data-sigil=\"touchable\"]>img") != 1);
												}
												if (isCommentText)
												{
													if (list3.Count == 0)
													{
														list3 = CloneList(lstComment);
													}
													text2 = list3[rd.Next(0, list3.Count)];
													list3.Remove(text2);
													text2 = MCommon.Common.SpinText(text2, rd);
													string nameFromPost = CommonChrome.GetNameFromPost(chrome);
													text2 = text2.Replace("[u]", nameFromPost);
													text2 = GetIconFacebook.ProcessString(text2, rd);
													string text3 = "[data-sigil=\"textarea mufi-composer m-textarea-input\"]";
													if (MCommon.Common.CheckStringIsContainIcon(text2))
													{
														text2 = text2.Replace("\r\n", "*r*n").Replace("\n", "*r*n");
														text2 = text2.Replace("*r*n", "\\r\\n").Replace("\"", "\\\"");
														chrome.Click(4, text3);
														chrome.ExecuteScript("document.querySelector('" + text3 + "').value=\"" + text2 + "\"");
														chrome.SendKeys(4, text3, " ", 0.1, isClick: false);
													}
													else
													{
														chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, text3, text2 + " ", 0.1);
													}
													DelayThaoTacNho();
												}
												for (int i = 0; i < 10; i++)
												{
													if (chrome.Click(2, "submit") == 1)
													{
														break;
													}
													MCommon.Common.DelayTime(1.0);
												}
												DelayThaoTacNho(2);
												if (CommonChrome.CheckFacebookBlocked(chrome))
												{
													return -4;
												}
											}
											chrome.GotoBackPage();
											DelayThaoTacNho();
										}
										if (isShareWall && num9 < num12 && rd.Next(1, 100) % 2 == 0 && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num13}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")) && chrome.Click(4, "[data-store*=\"linkdata\"]", num13, 4, "[data-sigil=\"share-popup\"]") == 1)
										{
											switch (chrome.CheckExistElements(5.0, "#share-one-click-button", "#share-post-one-click-button"))
											{
												case 1:
													DelayThaoTacNho();
													chrome.Click(1, "share-one-click-button");
													DelayThaoTacNho();
													num9++;
													break;
												case 2:
													DelayThaoTacNho();
													chrome.Click(1, "share-post-one-click-button");
													DelayThaoTacNho();
													num9++;
													break;
											}
										}
										num13++;
										goto IL_131f;
									default:
										{
											num13++;
											goto IL_131f;
										}
									IL_131f:
										MCommon.Common.DelayTime(rd.Next(delayFrom, delayTo + 1));
										continue;
								}
								break;
							}
							break;
						}
					}
				}
			end_IL_00a8:;
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(null, ex, "HDTuongTacBanBe");
			}
			return num;
		}

		public int HDBaiVietNhom(int indexRow, string statusProxy, Chrome chrome, string token, string cookie, int soLuongNhomFrom, int soLuongNhomTo, int soLuongBaiVietFrom, int soLuongBaiVietTo, int delayFrom, int delayTo, bool isLike, bool isComment, List<string> lstComment, bool isVip, string proxy, int typeProxy, Random rd, string tenHanhDong = "", bool isShareWall = false, bool isSendAnh = false, string pathFolderImage = "")
		{
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = 0;
			int num3 = rd.Next(soLuongNhomFrom, soLuongNhomTo + 1);
			int num4 = 0;
			string text = "";
			lstComment = MCommon.Common.RemoveEmptyItems(lstComment);
			List<string> list = new List<string>();
			list = CloneList(lstComment);
			List<string> list2 = new List<string>();
			List<string> lstFrom = new List<string>();
			List<string> list3 = new List<string>();
			if (isSendAnh)
			{
				lstFrom = Directory.GetFiles(pathFolderImage).ToList();
				list3 = CloneList(lstFrom);
			}
			string text2 = "";
			while (true)
			{
			IL_0149:
				if (CommonChrome.GoToGroup(chrome) == -2)
				{
					return -2;
				}
				int num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
				if (num5 == 1)
				{
					continue;
				}
				if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
				{
					return -1;
				}
				CommonChrome.ScrollRandom(chrome);
				if (num3 == 0)
				{
					break;
				}
				list2 = chrome.ExecuteScript("var x=[];document.querySelectorAll('a').forEach(e=>{if(e.getAttribute('href')!=null && e.getAttribute('href').endsWith('ref=group_browse')) x.push(e.getAttribute('href'))}); return x.join('|')").ToString().Split('|')
					.ToList();
				if (list2.Count <= 0)
				{
					break;
				}
				int index = Base.rd.Next(0, list2.Count);
				chrome.ScrollSmooth("document.querySelector('[href=\"" + list2[index] + "\"]')");
				DelayThaoTacNho();
				chrome.Click(4, "[href=\"" + list2[index] + "\"]");
				DelayThaoTacNho(2);
				num++;
				num2 = 0;
				int num6 = rd.Next(soLuongBaiVietFrom, soLuongBaiVietTo + 1);
				int num7 = 0;
				while (num2 < num6)
				{
					bool flag = false;
					num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num5 == 1)
					{
						goto IL_0149;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
					{
						return -1;
					}
					num7++;
					if (chrome.CheckExistElementv2($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num7}]") != 1)
					{
						break;
					}
					if (Base.rd.Next(1, 100) % 2 != 0)
					{
						continue;
					}
					if (chrome.CheckChromeClosed())
					{
						return -2;
					}
					chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num7 + "]");
					chrome.DelayTime(1.0);
					if (isLike && Base.rd.Next(1, 100) % 3 == 0 && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num7}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")))
					{
						chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num7 + "].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')");
						if (Convert.ToBoolean(chrome.ExecuteScript($"var output='false';var x=document.querySelectorAll('[data-store*=\"linkdata\"]')[{num7}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a');  if(x!=null) output=(JSON.parse(x.getAttribute('data-store')).reaction==0)+''; return output;").ToString()))
						{
							chrome.Click(4, "[data-store*=\"linkdata\"]", num7, 4, "[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a");
							chrome.DelayTime(1.0);
							flag = true;
						}
					}
					if ((isComment || isSendAnh) && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num7}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")))
					{
						if (list.Count == 0)
						{
							list = CloneList(lstComment);
						}
						text = list[rd.Next(0, list.Count)];
						list.Remove(text);
						text = MCommon.Common.SpinText(text, rd);
						chrome.Click(4, "[data-store*=\"linkdata\"]", num7, 4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]");
						chrome.DelayTime(1.0);
						if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
						{
							chrome.ScrollSmooth("document.querySelector('[data-sigil =\"textarea mufi-composer m-textarea-input\"]')");
							if (isSendAnh)
							{
								if (list3.Count == 0)
								{
									list3 = CloneList(lstFrom);
								}
								text2 = list3[rd.Next(0, list3.Count)];
								list3.Remove(text2);
								chrome.SendKeys(4, "[data-sigil=\"m-raw-file-input\"]", text2);
								int tickCount = Environment.TickCount;
								do
								{
									chrome.DelayTime(1.0);
								}
								while (Environment.TickCount - tickCount < 30000 && chrome.CheckExistElement("[data-sigil=\"touchable\"]>img") != 1);
								chrome.DelayTime(1.0);
							}
							if (isComment)
							{
								if (list.Count == 0)
								{
									list = CloneList(lstComment);
								}
								text = list[rd.Next(0, list.Count)];
								list.Remove(text);
								text = MCommon.Common.SpinText(text, rd);
								string nameFromPost = CommonChrome.GetNameFromPost(chrome);
								text = text.Replace("[u]", nameFromPost);
								text = GetIconFacebook.ProcessString(text, rd);
								string text3 = "[data-sigil=\"textarea mufi-composer m-textarea-input\"]";
								if (MCommon.Common.CheckStringIsContainIcon(text))
								{
									text = text.Replace("\r\n", "*r*n").Replace("\n", "*r*n");
									text = text.Replace("*r*n", "\\r\\n").Replace("\"", "\\\"");
									chrome.Click(4, text3);
									chrome.ExecuteScript("document.querySelector('" + text3 + "').value=\"" + text + "\"");
									chrome.SendKeys(4, text3, " ", 0.1, isClick: false);
								}
								else
								{
									chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, text3, text + " ", 0.1);
								}
								chrome.DelayTime(1.0);
							}
							for (int i = 0; i < 10; i++)
							{
								if (chrome.Click(2, "submit") == 1)
								{
									break;
								}
								MCommon.Common.DelayTime(1.0);
							}
							if (CommonChrome.CheckFacebookBlocked(chrome))
							{
								return -4;
							}
							flag = true;
						}
						chrome.GotoBackPage();
						DelayThaoTacNho();
					}
					if (isShareWall && Base.rd.Next(1, 100) % 3 == 0 && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num7}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")))
					{
						chrome.Click(4, "[data-store*=\"linkdata\"]", num7, 4, "[data-sigil=\"share-popup\"]");
						switch (chrome.CheckExistElements(5.0, "#share-one-click-button", "#share-post-one-click-button"))
						{
							case 1:
								chrome.Click(1, "share-one-click-button");
								DelayThaoTacNho();
								flag = true;
								break;
							case 2:
								chrome.Click(1, "share-post-one-click-button");
								DelayThaoTacNho();
								flag = true;
								break;
						}
					}
					if (flag)
					{
						num4 = 0;
						num2++;
						if (tenHanhDong == "")
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang tương tác nhóm") + $" ({num}/{num3}:{num2}/{num6})...");
						}
						else
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num3}:{num2}/{num6})...");
						}
						if (chrome.CheckChromeClosed())
						{
							return -2;
						}
					}
					else
					{
						num4++;
						if (num4 == 3)
						{
							break;
						}
					}
					chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
				}
				if (num >= num3)
				{
					break;
				}
			}
			return num;
		}

		public int HDBaiVietNhomv2(int indexRow, string statusProxy, Chrome chrome, string token, string cookie, int soLuongNhomFrom, int soLuongNhomTo, int soLuongBaiVietFrom, int soLuongBaiVietTo, int delayFrom, int delayTo, bool isLike, bool isComment, int typeContent, List<string> lstPathPost, bool isCommentText, List<string> lstComment, string proxy, int typeProxy, Random rd, string tenHanhDong = "", bool isShareWall = false, bool isSendAnh = false, string pathFolderImage = "")
		{
			//Discarded unreachable code: IL_01cc, IL_01e1
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			string text = "";
			int num = 0;
			int num2 = 0;
			int num3 = rd.Next(soLuongNhomFrom, soLuongNhomTo + 1);
			int num4 = 0;
			string text2 = "";
			string text3 = "";
			List<string> list = new List<string>();
			List<string> list2 = new List<string>();
			List<string> lstFrom = new List<string>();
			List<string> list3 = new List<string>();
			BaiViet baiViet = new BaiViet();
			if (typeContent == 1)
			{
				lock (lstPathPostTemp)
				{
					if (lstPathPostTemp.Count == 0)
					{
						lstPathPostTemp = CloneList(lstPathPost);
					}
					text = lstPathPostTemp[rd.Next(0, lstPathPostTemp.Count)];
					lstPathPostTemp.Remove(text);
				}
				baiViet = CommonSQL.GetListBaiVietByID(text)[0];
			}
			else
			{
				lstComment = MCommon.Common.RemoveEmptyItems(lstComment);
				list2 = CloneList(lstComment);
				if (isSendAnh)
				{
					lstFrom = Directory.GetFiles(pathFolderImage).ToList();
					list3 = CloneList(lstFrom);
				}
			}
			while (true)
			{
			IL_0252:
				if (CommonChrome.GoToGroup(chrome) == -2)
				{
					return -2;
				}
				int num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
				if (num5 == 1)
				{
					continue;
				}
				if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
				{
					return -1;
				}
				CommonChrome.ScrollRandom(chrome);
				if (num3 == 0)
				{
					break;
				}
				list = chrome.ExecuteScript("var x=[];document.querySelectorAll('a').forEach(e=>{if(e.getAttribute('href')!=null && e.getAttribute('href').endsWith('ref=group_browse')) x.push(e.getAttribute('href'))}); return x.join('|')").ToString().Split('|')
					.ToList();
				if (list.Count <= 0)
				{
					break;
				}
				int index = Base.rd.Next(0, list.Count);
				chrome.ScrollSmooth("document.querySelector('[href=\"" + list[index] + "\"]')");
				DelayThaoTacNho();
				chrome.Click(4, "[href=\"" + list[index] + "\"]");
				DelayThaoTacNho(2);
				num++;
				num2 = 0;
				int num6 = rd.Next(soLuongBaiVietFrom, soLuongBaiVietTo + 1);
				int num7 = 0;
				int num8 = 0;
				while (num2 < num6)
				{
					num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num5 == 1)
					{
						goto IL_0252;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
					{
						return -1;
					}
					num8++;
					if (chrome.CheckExistElementv2($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}]") != 1)
					{
						break;
					}
					if (Base.rd.Next(1, 100) % 2 != 0)
					{
						continue;
					}
					num7 = 0;
					if (Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")) || Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")) || Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")))
					{
						num7++;
					}
					if (chrome.CheckChromeClosed())
					{
						return -2;
					}
					chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num8 + "]");
					DelayThaoTacNho();
					if (isLike && Base.rd.Next(1, 100) % 3 == 0 && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")))
					{
						chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num8 + "].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')");
						num7++;
						if (Convert.ToBoolean(chrome.ExecuteScript($"var output='false';var x=document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a');  if(x!=null) output=(JSON.parse(x.getAttribute('data-store')).reaction==0)+''; return output;").ToString()))
						{
							DelayThaoTacNho();
							chrome.Click(4, "[data-store*=\"linkdata\"]", num8, 4, "[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a");
							DelayThaoTacNho();
						}
					}
					if (isComment && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")))
					{
						num7++;
						chrome.Click(4, "[data-store*=\"linkdata\"]", num8, 4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]");
						DelayThaoTacNho();
						if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
						{
							if (isSendAnh || typeContent == 1)
							{
								List<string> list4 = new List<string>();
								DelayThaoTacNho();
								if (typeContent == 0)
								{
									if (list3.Count == 0)
									{
										list3 = CloneList(lstFrom);
									}
									text3 = list3[rd.Next(0, list3.Count)];
									list3.Remove(text3);
									list4.Add(text3);
								}
								else
								{
									list4.AddRange(baiViet.anh.TrimEnd('|').Split('|'));
								}
								if (list4.Count > 0)
								{
									text3 = list4[rd.Next(list4.Count)];
									chrome.ScrollSmooth("document.querySelector('[data-sigil=\"m-raw-file-input\"]')");
									chrome.DelayTime(1.0);
									chrome.SendKeys(4, "[data-sigil=\"m-raw-file-input\"]", text3);
									int tickCount = Environment.TickCount;
									do
									{
										chrome.DelayTime(1.0);
									}
									while (Environment.TickCount - tickCount < 30000 && chrome.CheckExistElement("[data-sigil=\"touchable\"]>img") != 1);
								}
							}
							if (isCommentText || typeContent == 1)
							{
								chrome.ScrollSmooth("document.querySelector('[data-sigil=\"m-raw-file-input\"]')");
								chrome.DelayTime(1.0);
								if (typeContent == 0)
								{
									if (list2.Count == 0)
									{
										list2 = CloneList(lstComment);
									}
									text2 = list2[rd.Next(0, list2.Count)];
									list2.Remove(text2);
								}
								else
								{
									text2 = baiViet.noiDung;
								}
								text2 = MCommon.Common.SpinText(text2, rd);
								string nameFromPost = CommonChrome.GetNameFromPost(chrome);
								text2 = text2.Replace("[u]", nameFromPost);
								chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, "[data-sigil =\"textarea mufi-composer m-textarea-input\"]", text2 + " ", 0.1);
								DelayThaoTacNho();
							}
							for (int i = 0; i < 10; i++)
							{
								if (chrome.Click(2, "submit") == 1)
								{
									break;
								}
								MCommon.Common.DelayTime(1.0);
							}
							DelayThaoTacNho(2);
							if (CommonChrome.CheckFacebookBlocked(chrome))
							{
								return -4;
							}
						}
						chrome.GotoBackPage();
						DelayThaoTacNho();
					}
					if (isShareWall && Base.rd.Next(1, 100) % 3 == 0 && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")))
					{
						num7++;
						chrome.Click(4, "[data-store*=\"linkdata\"]", num8, 4, "[data-sigil=\"share-popup\"]");
						switch (chrome.CheckExistElements(5.0, "#share-one-click-button", "#share-post-one-click-button"))
						{
							case 1:
								DelayThaoTacNho();
								chrome.Click(1, "share-one-click-button");
								DelayThaoTacNho();
								break;
							case 2:
								DelayThaoTacNho();
								chrome.Click(1, "share-post-one-click-button");
								DelayThaoTacNho();
								break;
						}
					}
					if (num7 > 0)
					{
						num4 = 0;
						num2++;
						if (tenHanhDong == "")
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang tương tác nhóm") + $" ({num}/{num3}:{num2}/{num6})...");
						}
						else
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num3}:{num2}/{num6})...");
						}
						if (chrome.CheckChromeClosed())
						{
							return -2;
						}
					}
					else
					{
						num4++;
						if (num4 == 3)
						{
							break;
						}
					}
					chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
				}
				if (num >= num3)
				{
					break;
				}
			}
			return num;
		}

		public int HDBaiVietFanpage(int indexRow, string statusProxy, Chrome chrome, int soLuongPageFrom, int soLuongPageTo, List<string> lstPage, int soLuongBaiFrom, int soLuongBaiTo, int delayFrom, int delayTo, bool isLike, bool isComment, bool isCommentText, List<string> lstComment, bool isSendAnh, string txtAnh, bool isLikePage, bool isViewVideo, int viewFrom, int viewTo, Random rd, string tenHanhDong = "", bool isShareWall = false)
		{
			//Discarded unreachable code: IL_12e8, IL_12fb
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = 0;
			string text = "";
			List<string> lstFrom = new List<string>();
			List<string> list = new List<string>();
			if (isSendAnh)
			{
				lstFrom = Directory.GetFiles(txtAnh).ToList();
				list = CloneList(lstFrom);
			}
			string text2 = "";
			List<string> list2 = new List<string>();
			lstComment = MCommon.Common.RemoveEmptyItems(lstComment);
			list2 = CloneList(lstComment);
			try
			{
				lstPage = MCommon.Common.RemoveEmptyItems(lstPage);
				int count = lstPage.Count;
				int num3 = rd.Next(soLuongPageFrom, soLuongPageTo + 1);
				for (int i = 0; i < count; i++)
				{
					if (num == num3)
					{
						break;
					}
					string text3 = lstPage[rd.Next(0, lstPage.Count)];
					lstPage.Remove(text3);
					while (true)
					{
					IL_01b0:
						chrome.GotoURL("https://m.facebook.com/" + text3 + "/posts");
						chrome.DelayTime(2.0);
						int num4 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num4 == 1)
						{
							continue;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num4))
						{
							return -1;
						}
						num++;
						chrome.Scroll(0, 1000);
						num2 = 0;
						int num5 = 0;
						int num6 = rd.Next(soLuongBaiFrom, soLuongBaiTo + 1);
						int num7 = 0;
						int num8 = -1;
						while (num2 < num6)
						{
							num4 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							if (num4 == 1)
							{
								goto IL_01b0;
							}
							if (new List<int> { -3, -2, -1, 2 }.Contains(num4))
							{
								return -1;
							}
							num8++;
							if (chrome.CheckExistElementv2($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}]") != 1)
							{
								break;
							}
							num7 = 0;
							if (Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}]!=null&&(document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null|| document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null || document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}].querySelector('[data-sigil=\"share-popup\"]')!=null))+''")))
							{
								num7++;
							}
							if (chrome.CheckChromeClosed())
							{
								return -2;
							}
							chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num8 + "]");
							DelayThaoTacNho(2);
							if (isViewVideo && chrome.CheckExistElementv2("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num8 + "].querySelector('[data-sigil=\"m-video-play-button playInlineVideo\"]')") == 1)
							{
								chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num8 + "].document.querySelector('[data-sigil=\"m-video-play-button playInlineVideo\"]')");
								DelayThaoTacNho();
								chrome.ClickWithAction(4, "[data-store*=\"linkdata\"]", num8, 4, "[data-sigil=\"m-video-play-button playInlineVideo\"]");
								chrome.DelayTime(rd.Next(viewFrom, viewTo + 1));
							}
							if (isLike && chrome.CheckExistElementv2($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')") == 1)
							{
								chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num8 + "].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')");
								num7++;
								if (Convert.ToBoolean(chrome.ExecuteScript($"var output='false';var x=document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a');  if(x!=null) output=(JSON.parse(x.getAttribute('data-store')).reaction==0)+''; return output;").ToString()))
								{
									chrome.Click(4, "[data-store*=\"linkdata\"]", num8, 4, "[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a");
									DelayThaoTacNho();
								}
							}
							if ((isComment || isSendAnh) && chrome.CheckExistElementv2($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')") == 1)
							{
								num7++;
								if (list2.Count == 0)
								{
									list2 = CloneList(lstComment);
								}
								text = list2[rd.Next(0, list2.Count)];
								list2.Remove(text);
								text = MCommon.Common.SpinText(text, rd);
								if (chrome.Click(4, "[data-store*=\"linkdata\"]", num8, 4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]") == 1)
								{
									DelayThaoTacNho();
									if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
									{
										chrome.ScrollSmooth("document.querySelector('[data-sigil =\"textarea mufi-composer m-textarea-input\"]')");
										DelayThaoTacNho();
										if (isSendAnh)
										{
											if (list.Count == 0)
											{
												list = CloneList(lstFrom);
											}
											text2 = list[rd.Next(0, list.Count)];
											list.Remove(text2);
											chrome.SendKeys(4, "[data-sigil=\"m-raw-file-input\"]", text2);
											int tickCount = Environment.TickCount;
											do
											{
												chrome.DelayTime(1.0);
											}
											while (Environment.TickCount - tickCount < 30000 && chrome.CheckExistElement("[data-sigil=\"touchable\"]>img") != 1);
											chrome.DelayTime(1.0);
										}
										if (isCommentText)
										{
											text = MCommon.Common.SpinText(text, rd);
											string nameFromPost = CommonChrome.GetNameFromPost(chrome);
											text = text.Replace("[u]", nameFromPost);
											text = GetIconFacebook.ProcessString(text, rd);
											string text4 = "[data-sigil=\"textarea mufi-composer m-textarea-input\"]";
											if (MCommon.Common.CheckStringIsContainIcon(text))
											{
												text = text.Replace("\r\n", "*r*n").Replace("\n", "*r*n");
												text = text.Replace("*r*n", "\\r\\n").Replace("\"", "\\\"");
												chrome.Click(4, text4);
												chrome.ExecuteScript("document.querySelector('" + text4 + "').value=\"" + text + "\"");
												chrome.SendKeys(4, text4, " ", 0.1, isClick: false);
											}
											else
											{
												chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, text4, text + " ", 0.1);
											}
										}
										DelayThaoTacNho();
										chrome.Click(4, "[name=\"submit\"]");
										DelayThaoTacNho(2);
										if (CommonChrome.CheckFacebookBlocked(chrome))
										{
											return -4;
										}
									}
									chrome.GotoBackPage();
									DelayThaoTacNho();
									chrome.Scroll(0, 1000);
								}
							}
							if (isShareWall && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")))
							{
								num7++;
								chrome.ScrollSmooth($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num8}].querySelector('[data-sigil=\"share-popup\"]')");
								DelayThaoTacNho();
								chrome.Click(4, "[data-store*=\"linkdata\"]", num8, 4, "[data-sigil=\"share-popup\"]");
								switch (chrome.CheckExistElements(5.0, "#share-one-click-button", "#share-post-one-click-button"))
								{
									case 1:
										DelayThaoTacNho();
										chrome.Click(1, "share-one-click-button");
										DelayThaoTacNho();
										break;
									case 2:
										DelayThaoTacNho();
										chrome.Click(1, "share-post-one-click-button");
										DelayThaoTacNho();
										break;
								}
							}
							if (num7 > 0)
							{
								num5 = 0;
								num2++;
								if (tenHanhDong == "")
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang tương tác") + $" page ({num}/{num3}:{num2}/{num6})...");
								}
								else
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num3}:{num2}/{num6})...");
								}
								if (chrome.CheckChromeClosed())
								{
									return -2;
								}
							}
							else
							{
								num5++;
								if (num5 == 3)
								{
									break;
								}
							}
							chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
						}
						break;
					}
					if (!isLikePage)
					{
						continue;
					}
					string uRL = chrome.GetURL();
					if (chrome.CheckExistElement("#msite-pages-header-contents", 10.0) == 1)
					{
						chrome.ScrollSmooth("document.querySelector('[style=\"flex-grow:0;flex-shrink:1;margin:0 0 5px 0\"]')");
						DelayThaoTacNho();
						chrome.ExecuteScript("document.querySelector('[style=\"flex-grow:0;flex-shrink:1;margin:0 0 5px 0\"]').click()");
						DelayThaoTacNho(2);
						string uRL2 = chrome.GetURL();
						if (uRL == uRL2)
						{
							DelayThaoTacNho();
						}
					}
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDBaiVietProfile(int indexRow, string statusProxy, Chrome chrome, int typeListUid, string pathFileUid, int soLuongUidFrom, int soLuongUidTo, int soLuongBaiFrom, int soLuongBaiTo, int delayFrom, int delayTo, bool isLike, bool isComment, string txtComment, int typeNganCach, Random rd, string tenHanhDong = "", bool isShareWall = false, bool isSendAnh = false, string pathFolderImage = "", bool isTuDongXoaUid = false, bool isRandomGoVanBan = false, string id_HanhDong = "")
		{
			//Discarded unreachable code: IL_042b, IL_0440, IL_0448, IL_045d, IL_14cf, IL_14e2
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = 0;
			string text = "";
			string text2 = "";
			List<string> list = new List<string>();
			if (typeListUid == 1)
			{
				list = File.ReadAllLines(pathFileUid).ToList();
				list = MCommon.Common.RemoveEmptyItems(list);
				if (list.Count == 0)
				{
					return 0;
				}
			}
			else if (!isTuDongXoaUid)
			{
				list = CloneList(dicUidBaivietProfile[id_HanhDong]);
			}
			List<string> list2 = new List<string>();
			list2 = ((typeNganCach != 0) ? txtComment.Split(new string[1] { "\n|\n" }, StringSplitOptions.RemoveEmptyEntries).ToList() : txtComment.Split(new string[1] { "\n" }, StringSplitOptions.RemoveEmptyEntries).ToList());
			List<string> list3 = new List<string>();
			list2 = MCommon.Common.RemoveEmptyItems(list2);
			list3 = CloneList(list2);
			List<string> lstFrom = new List<string>();
			List<string> list4 = new List<string>();
			if (isSendAnh)
			{
				lstFrom = Directory.GetFiles(pathFolderImage).ToList();
				list4 = CloneList(lstFrom);
			}
			int num3 = 0;
			try
			{
				int num4 = rd.Next(soLuongUidFrom, soLuongUidTo + 1);
				int num5 = 0;
				while (num5 < num4)
				{
					if (chrome.CheckChromeClosed())
					{
						return -2;
					}
					string text3 = "";
					if (isTuDongXoaUid)
					{
						lock (lock_baivietprofile)
						{
							if (typeListUid == 1)
							{
								list = File.ReadAllLines(pathFileUid).ToList();
								list = MCommon.Common.RemoveEmptyItems(list);
								if (list.Count == 0)
								{
									break;
								}
								text3 = list[rd.Next(0, list.Count)];
								list.Remove(text3);
								File.WriteAllLines(pathFileUid, list);
								goto IL_04ac;
							}
							lock (dicUidBaivietProfile)
							{
								if (dicUidBaivietProfile[id_HanhDong].Count == 0)
								{
									break;
								}
								text3 = dicUidBaivietProfile[id_HanhDong][rd.Next(0, dicUidBaivietProfile[id_HanhDong].Count)];
								dicUidBaivietProfile[id_HanhDong].Remove(text3);
								goto IL_04ac;
							}
						}
					}
					if (list.Count == 0)
					{
						break;
					}
					text3 = list[rd.Next(0, list.Count)];
					list.Remove(text3);
					goto IL_04ac;
				IL_04ac:
					do
					{
					IL_04ac_2:
						chrome.GotoURL("https://m.facebook.com/" + text3);
						chrome.DelayTime(2.0);
						int num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num6 == 1)
						{
							goto IL_04ac_2;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
						{
							return -1;
						}
						if (text3.EndsWith("posts"))
						{
							chrome.Scroll(0, 1000);
							chrome.DelayTime(1.0);
						}
						num++;
						num2 = 0;
						int num7 = rd.Next(soLuongBaiFrom, soLuongBaiTo + 1);
						int num8 = 0;
						int num9 = -1;
						while (num2 < num7)
						{
							num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							if (num6 != 1)
							{
								if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
								{
									return -1;
								}
								num9++;
								if (chrome.CheckExistElementv2($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}]") != 1)
								{
									break;
								}
								num8 = 0;
								if (Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")) || Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")) || Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")))
								{
									num8++;
								}
								if (chrome.CheckChromeClosed())
								{
									return -2;
								}
								chrome.ScrollSmoothIfNotExistOnScreen("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num9 + "]");
								DelayThaoTacNho(3);
								if (isLike && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")))
								{
									chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num9 + "].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')");
									num8++;
									if (Convert.ToBoolean(chrome.ExecuteScript($"var output='false';var x=document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a');  if(x!=null) output=(JSON.parse(x.getAttribute('data-store')).reaction==0)+''; return output;").ToString()))
									{
										DelayThaoTacNho();
										chrome.Click(4, "[data-store*=\"linkdata\"]", num9, 4, "[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a");
										DelayThaoTacNho();
									}
								}
								if ((isComment || isSendAnh) && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")))
								{
									num8++;
									chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num9 + "].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')");
									chrome.DelayTime(1.0);
									chrome.Click(4, "[data-store*=\"linkdata\"]", num9, 4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]");
									DelayThaoTacNho();
									if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
									{
										DelayThaoTacNho();
										chrome.ScrollSmooth("document.querySelector('[data-sigil =\"textarea mufi-composer m-textarea-input\"]')");
										if (isSendAnh)
										{
											DelayThaoTacNho();
											if (list4.Count == 0)
											{
												list4 = CloneList(lstFrom);
											}
											text2 = list4[rd.Next(0, list4.Count)];
											list4.Remove(text2);
											chrome.SendKeys(4, "[data-sigil=\"m-raw-file-input\"]", text2);
											int tickCount = Environment.TickCount;
											do
											{
												chrome.DelayTime(1.0);
											}
											while (Environment.TickCount - tickCount < 30000 && chrome.CheckExistElement("[data-sigil=\"touchable\"]>img") != 1);
											DelayThaoTacNho();
										}
										if (isComment)
										{
											DelayThaoTacNho();
											if (list3.Count == 0)
											{
												list3 = CloneList(list2);
											}
											text = list3[rd.Next(0, list3.Count)];
											list3.Remove(text);
											text = MCommon.Common.SpinText(text, rd);
											string nameFromPost = CommonChrome.GetNameFromPost(chrome);
											text = text.Replace("[u]", nameFromPost);
											text = GetIconFacebook.ProcessString(text, rd);
											string text4 = "[data-sigil=\"textarea mufi-composer m-textarea-input\"]";
											if (MCommon.Common.CheckStringIsContainIcon(text))
											{
												text = text.Replace("\r\n", "*r*n").Replace("\n", "*r*n");
												text = text.Replace("*r*n", "\\r\\n").Replace("\"", "\\\"");
												chrome.Click(4, text4);
												chrome.ExecuteScript("document.querySelector('" + text4 + "').value=\"" + text + "\"");
												chrome.SendKeys(4, text4, " ", 0.1, isClick: false);
											}
											else
											{
												chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, text4, text + " ", 0.1);
											}
											DelayThaoTacNho(1);
										}
										for (int i = 0; i < 10; i++)
										{
											if (chrome.Click(2, "submit") == 1)
											{
												break;
											}
											MCommon.Common.DelayTime(1.0);
										}
										DelayThaoTacNho(2);
										if (CommonChrome.CheckFacebookBlocked(chrome))
										{
											return -4;
										}
									}
									chrome.GotoBackPage();
									DelayThaoTacNho();
									if (text3.EndsWith("posts"))
									{
										chrome.Scroll(0, 1000);
										chrome.DelayTime(1.0);
									}
								}
								if (isShareWall && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")))
								{
									num8++;
									chrome.Click(4, "[data-store*=\"linkdata\"]", num9, 4, "[data-sigil=\"share-popup\"]");
									switch (chrome.CheckExistElements(5.0, "#share-one-click-button", "#share-post-one-click-button"))
									{
										case 1:
											DelayThaoTacNho();
											chrome.Click(1, "share-one-click-button");
											DelayThaoTacNho();
											break;
										case 2:
											DelayThaoTacNho();
											chrome.Click(1, "share-post-one-click-button");
											DelayThaoTacNho();
											break;
									}
								}
								if (num8 > 0)
								{
									num3 = 0;
									num2++;
									if (tenHanhDong == "")
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang tương tác") + $" profile ({num}/{num4}:{num2}/{num7})...");
									}
									else
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num4}:{num2}/{num7})...");
									}
									if (chrome.CheckChromeClosed())
									{
										return -2;
									}
								}
								else
								{
									num3++;
									if (num3 == 3)
									{
										break;
									}
								}
								chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
								continue;
							}
							goto IL_062e;
						}
						num5++;
						goto IL_14ba;
					IL_062e:;
					}
					while (num2 == 0);
					break;
				IL_14ba:;
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDSpamBaiViet(int indexRow, string statusProxy, Chrome chrome, int typeListUid, string pathFileUid, int soLuongUidFrom, int soLuongUidTo, int soLuongBaiFrom, int soLuongBaiTo, int delayFrom, int delayTo, bool isLike, bool isComment, bool isAutoDeleteComment, bool isBoQua, int soLuongBoQuaFrom, int soLuongBoQuaTo, bool isTheoThuTu, Random rd, string tenHanhDong = "", bool isShareWall = false, bool isSendAnh = false, string pathFolderImage = "", bool isTuDongXoaUid = false, bool isRandomGoVanBan = false, string id_HanhDong = "")
		{
			//Discarded unreachable code: IL_0311, IL_0326, IL_032e, IL_0343, IL_04c1, IL_04d6, IL_04de, IL_04f3, IL_0cc6, IL_0cdb, IL_14fb, IL_150e
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = 0;
			string text = "";
			string text2 = "";
			Queue<string> queue = new Queue<string>();
			List<string> list = new List<string>();
			if (typeListUid == 1)
			{
				list = File.ReadAllLines(pathFileUid).ToList();
				list = MCommon.Common.RemoveEmptyItems(list);
				if (list.Count == 0)
				{
					return 0;
				}
			}
			else if (!isTuDongXoaUid)
			{
				list = CloneList(dicUidSpamBaiViet[id_HanhDong]);
			}
			List<string> lstFrom = new List<string>();
			List<string> list2 = new List<string>();
			if (isSendAnh)
			{
				lstFrom = Directory.GetFiles(pathFolderImage).ToList();
				list2 = CloneList(lstFrom);
			}
			int num3 = 0;
			try
			{
				int num4 = rd.Next(soLuongUidFrom, soLuongUidTo + 1);
				int num5 = 0;
				while (num5 < num4)
				{
					if (chrome.CheckChromeClosed())
					{
						return -2;
					}
					string text3 = "";
					if (isTheoThuTu)
					{
						lock (lock_baivietprofile)
						{
							if (typeListUid == 1)
							{
								list = File.ReadAllLines(pathFileUid).ToList();
								list = MCommon.Common.RemoveEmptyItems(list);
								queue = new Queue<string>(list);
								if (list.Count == 0)
								{
									break;
								}
								text3 = queue.Dequeue();
								goto IL_0542;
							}
							lock (dicUidSpamBaiViet)
							{
								if (dicUidSpamBaiViet[id_HanhDong].Count == 0)
								{
									break;
								}
								queue = new Queue<string>(dicUidSpamBaiViet[id_HanhDong]);
								text3 = queue.Dequeue();
								goto IL_0542;
							}
						}
					}
					if (isTuDongXoaUid)
					{
						lock (lock_baivietprofile)
						{
							if (typeListUid == 1)
							{
								list = File.ReadAllLines(pathFileUid).ToList();
								list = MCommon.Common.RemoveEmptyItems(list);
								if (list.Count == 0)
								{
									break;
								}
								text3 = list[rd.Next(0, list.Count)];
								list.Remove(text3);
								File.WriteAllLines(pathFileUid, list);
								goto IL_0542;
							}
							lock (dicUidSpamBaiViet)
							{
								if (dicUidSpamBaiViet[id_HanhDong].Count == 0)
								{
									break;
								}
								text3 = dicUidSpamBaiViet[id_HanhDong][rd.Next(0, dicUidSpamBaiViet[id_HanhDong].Count)];
								dicUidSpamBaiViet[id_HanhDong].Remove(text3);
								goto IL_0542;
							}
						}
					}
					if (list.Count == 0)
					{
						break;
					}
					text3 = list[rd.Next(0, list.Count)];
					list.Remove(text3);
					goto IL_0542;
				IL_0542:
					do
					{
					IL_0542_2:
						chrome.GotoURL("https://m.facebook.com/" + text3);
						chrome.DelayTime(2.0);
						int num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num6 == 1)
						{
							goto IL_0542_2;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
						{
							return -1;
						}
						if (text3.EndsWith("posts"))
						{
							chrome.Scroll(0, 1000);
							chrome.DelayTime(1.0);
						}
						num++;
						num2 = 0;
						int num7 = rd.Next(soLuongBaiFrom, soLuongBaiTo + 1);
						int num8 = 0;
						int num9 = -1;
						if (isBoQua)
						{
							num8 = rd.Next(soLuongBoQuaFrom, soLuongBoQuaTo + 1);
							num9 += num8;
						}
						while (num2 < num7)
						{
							bool flag = false;
							num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							if (num6 == 1)
							{
								goto IL_0702;
							}
							if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
							{
								return -1;
							}
							num9++;
							if (chrome.CheckExistElementv2($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}]") != 1)
							{
								break;
							}
							if (chrome.CheckChromeClosed())
							{
								return -2;
							}
							chrome.ScrollSmoothIfNotExistOnScreen("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num9 + "]");
							chrome.DelayTime(1.0);
							if (isLike && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")))
							{
								chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num9 + "].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')");
								if (Convert.ToBoolean(chrome.ExecuteScript($"var output='false';var x=document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a');  if(x!=null) output=(JSON.parse(x.getAttribute('data-store')).reaction==0)+''; return output;").ToString()))
								{
									chrome.Click(4, "[data-store*=\"linkdata\"]", num9, 4, "[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a");
									flag = true;
									chrome.DelayTime(1.0);
								}
							}
							if ((isComment || isSendAnh) && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")))
							{
								chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num9 + "].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')");
								chrome.DelayTime(1.0);
								chrome.Click(4, "[data-store*=\"linkdata\"]", num9, 4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]");
								chrome.DelayTime(1.0);
								if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
								{
									chrome.ScrollSmooth("document.querySelector('[data-sigil =\"textarea mufi-composer m-textarea-input\"]')");
									if (isSendAnh)
									{
										if (list2.Count == 0)
										{
											list2 = CloneList(lstFrom);
										}
										text2 = list2[rd.Next(0, list2.Count)];
										list2.Remove(text2);
										chrome.SendKeys(4, "[data-sigil=\"m-raw-file-input\"]", text2);
										int tickCount = Environment.TickCount;
										do
										{
											chrome.DelayTime(1.0);
										}
										while (Environment.TickCount - tickCount < 30000 && chrome.CheckExistElement("[data-sigil=\"touchable\"]>img") != 1);
									}
									if (isComment)
									{
										lock (dicCommentSpamBaiViet)
										{
											if (dicCommentSpamBaiViet[id_HanhDong].Count == 0)
											{
												break;
											}
											text = dicCommentSpamBaiViet[id_HanhDong][rd.Next(0, dicCommentSpamBaiViet[id_HanhDong].Count)];
											if (isAutoDeleteComment)
											{
												dicCommentSpamBaiViet[id_HanhDong].Remove(text);
											}
											goto IL_0cdc;
										}
									}
									goto IL_0f9d;
								}
								goto IL_1072;
							}
							goto IL_10e8;
						IL_10e8:
							if (isShareWall && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")))
							{
								flag = true;
								chrome.Click(4, "[data-store*=\"linkdata\"]", num9, 4, "[data-sigil=\"share-popup\"]");
								switch (chrome.CheckExistElements(5.0, "#share-one-click-button", "#share-post-one-click-button"))
								{
									case 1:
										chrome.Click(1, "share-one-click-button");
										DelayThaoTacNho();
										break;
									case 2:
										chrome.Click(1, "share-post-one-click-button");
										DelayThaoTacNho();
										break;
								}
							}
							if (flag)
							{
								num3 = 0;
								num2++;
								if (tenHanhDong == "")
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang tương tác") + $" profile ({num}/{num4}:{num2}/{num7})...");
								}
								else
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num4}:{num2}/{num7})...");
								}
								if (chrome.CheckChromeClosed())
								{
									return -2;
								}
								chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
							}
							else
							{
								num3++;
								if (num3 == 5)
								{
									break;
								}
							}
							continue;
						IL_0f9d:
							for (int i = 0; i < 10; i++)
							{
								if (chrome.Click(2, "submit") == 1)
								{
									break;
								}
								MCommon.Common.DelayTime(1.0);
							}
							DelayThaoTacNho(2);
							if (CommonChrome.CheckFacebookBlocked(chrome))
							{
								return -4;
							}
							flag = true;
							goto IL_1072;
						IL_1072:
							chrome.GotoBackPage();
							DelayThaoTacNho();
							if (text3.EndsWith("posts"))
							{
								chrome.Scroll(0, 1000);
								chrome.DelayTime(1.0);
							}
							goto IL_10e8;
						IL_0cdc:
							text = MCommon.Common.SpinText(text, rd);
							string nameFromPost = CommonChrome.GetNameFromPost(chrome);
							text = text.Replace("[u]", nameFromPost);
							text = GetIconFacebook.ProcessString(text, rd);
							string text4 = "[data-sigil=\"textarea mufi-composer m-textarea-input\"]";
							if (MCommon.Common.CheckStringIsContainIcon(text))
							{
								text = text.Replace("\r\n", "*r*n").Replace("\n", "*r*n");
								text = text.Replace("*r*n", "\\r\\n").Replace("\"", "\\\"");
								chrome.Click(4, text4);
								chrome.ExecuteScript("document.querySelector('" + text4 + "').value=\"" + text + "\"");
								chrome.SendKeys(4, text4, " ", 0.1, isClick: false);
							}
							else
							{
								chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, text4, text + " ", 0.1);
							}
							chrome.DelayTime(1.0);
							goto IL_0f9d;
						}
						num5++;
						goto IL_14e6;
					IL_0702:;
					}
					while (num2 == 0);
					break;
				IL_14e6:;
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDBuffTinNhanProfile(int indexRow, string statusProxy, Chrome chrome, int soLuongUidFrom, int soLuongUidTo, int soLuongAnhFrom, int soLuongAnhTo, int delayFrom, int delayTo, bool isAddFriend, bool isNhanTinVanBan, List<string> lstContent, Random rd, string tenHanhDong = "", bool isSendAnh = false, string pathFolderImage = "", bool isTuDongXoaUid = false, string id_HanhDong = "", bool ckbTuongTacKhiNhanTin = false, int typeTuongTacKhiNhanTin = 0, bool ckbTuongTacKhiNhanTinLike = false, bool ckbTuongTacKhiNhanTinComment = false, List<string> lstTuongTacKhiNhanTinComment = null, int typeNganCachComment = 0)
		{
			//Discarded unreachable code: IL_0280, IL_0295, IL_1d4e, IL_1d61
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			string text = "";
			string text2 = "";
			List<string> list = new List<string>();
			lstContent = MCommon.Common.RemoveEmptyItems(lstContent);
			list = CloneList(lstContent);
			List<string> lstFrom = new List<string>();
			List<string> list2 = new List<string>();
			if (isSendAnh)
			{
				lstFrom = Directory.GetFiles(pathFolderImage).ToList();
				list2 = CloneList(lstFrom);
			}
			List<string> list3 = new List<string>();
			if (!isTuDongXoaUid)
			{
				list3 = CloneList(dicUidTinNhanProfile[id_HanhDong]);
			}
			int num2 = 0;
			int num3 = 0;
			int num4 = 0;
			int num5 = 0;
			try
			{
				int num6 = rd.Next(soLuongUidFrom, soLuongUidTo + 1);
				for (int num7 = 0; num7 < num6; num7++)
				{
					string text3 = "";
					if (isTuDongXoaUid)
					{
						lock (dicUidTinNhanProfile)
						{
							if (dicUidTinNhanProfile[id_HanhDong].Count == 0)
							{
								break;
							}
							text3 = dicUidTinNhanProfile[id_HanhDong][rd.Next(0, dicUidTinNhanProfile[id_HanhDong].Count)];
							dicUidTinNhanProfile[id_HanhDong].Remove(text3);
							goto IL_02e4;
						}
					}
					if (list3.Count == 0)
					{
						break;
					}
					text3 = list3[rd.Next(0, list3.Count)];
					list3.Remove(text3);
					goto IL_02e4;
				IL_02e4:
					if (isAddFriend)
					{
						do
						{
							chrome.GotoURLIfNotExist("https://m.facebook.com/" + text3);
							chrome.DelayTime(2.0);
							num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						}
						while (num5 == 1);
						if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
						{
							return -1;
						}
						string text4 = chrome.CheckExistElementsV2(5.0, "a[href*=\"friends/profile_add_friend\"]", "a[href*=\"friends/profile/add\"]");
						if (text4 != "" && !Convert.ToBoolean(chrome.ExecuteScript("var x=document.querySelector('[data-sigil=\"add-friend hq-profile-logging-action-bar-button\"]').getAttribute('style')+''; return x.includes('display:none')+''").ToString()))
						{
							chrome.ScrollSmoothIfNotExistOnScreen("document.querySelector('" + text4 + "')");
							chrome.DelayTime(1.0);
							chrome.Click(4, text4);
							chrome.DelayTime(1.0);
						}
					}
					if (ckbTuongTacKhiNhanTin && typeTuongTacKhiNhanTin == 0)
					{
						do
						{
							chrome.GotoURLIfNotExist("https://m.facebook.com/" + text3);
							chrome.DelayTime(2.0);
							num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						}
						while (num5 == 1);
						if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
						{
							return -1;
						}
						int num8 = 0;
						int num9 = 0;
						if (chrome.CheckExistElementv2($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}]") == 1)
						{
							num8 = 0;
							if (Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")) || Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")) || Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")))
							{
								num8++;
							}
							if (chrome.CheckChromeClosed())
							{
								return -2;
							}
							chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num9 + "]");
							DelayThaoTacNho(3);
							if (ckbTuongTacKhiNhanTinLike && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")))
							{
								chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num9 + "].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')");
								num8++;
								if (Convert.ToBoolean(chrome.ExecuteScript($"var output='false';var x=document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a');  if(x!=null) output=(JSON.parse(x.getAttribute('data-store')).reaction==0)+''; return output;").ToString()))
								{
									DelayThaoTacNho();
									chrome.Click(4, "[data-store*=\"linkdata\"]", num9, 4, "[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a");
									DelayThaoTacNho();
								}
							}
							if (ckbTuongTacKhiNhanTinComment && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num9}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")))
							{
								num8++;
								chrome.Click(4, "[data-store*=\"linkdata\"]", num9, 4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]");
								DelayThaoTacNho();
								if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
								{
									DelayThaoTacNho();
									chrome.ScrollSmooth("document.querySelector('[data-sigil =\"textarea mufi-composer m-textarea-input\"]')");
									DelayThaoTacNho();
									List<string> list4 = new List<string>();
									if (list4.Count == 0)
									{
										list4 = CloneList(lstTuongTacKhiNhanTinComment);
									}
									string item = list4[rd.Next(0, list4.Count)];
									list4.Remove(item);
									item = MCommon.Common.SpinText(item, rd);
									string nameFromPost = CommonChrome.GetNameFromPost(chrome);
									item = item.Replace("[u]", nameFromPost);
									item = GetIconFacebook.ProcessString(item, rd);
									string text5 = "[data-sigil=\"textarea mufi-composer m-textarea-input\"]";
									if (MCommon.Common.CheckStringIsContainIcon(item))
									{
										item = item.Replace("\r\n", "*r*n").Replace("\n", "*r*n");
										item = item.Replace("*r*n", "\\r\\n").Replace("\"", "\\\"");
										chrome.Click(4, text5);
										chrome.ExecuteScript("document.querySelector('" + text5 + "').value=\"" + item + "\"");
										chrome.SendKeys(4, text5, " ", 0.1, isClick: false);
									}
									else
									{
										chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, text5, item + " ", 0.1);
									}
									DelayThaoTacNho(3);
									for (int i = 0; i < 10; i++)
									{
										if (chrome.Click(2, "submit") == 1)
										{
											break;
										}
										MCommon.Common.DelayTime(1.0);
									}
									DelayThaoTacNho(2);
								}
								chrome.GotoBackPage();
								DelayThaoTacNho();
							}
						}
					}
					do
					{
						chrome.GotoURL("https://m.facebook.com/messages/read/?fbid=" + text3);
						DelayThaoTacNho();
						num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					}
					while (num5 == 1);
					if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
					{
						return -1;
					}
					if (chrome.CheckExistElement("[name=\"body\"]", 10.0) == 1)
					{
						if (isSendAnh)
						{
							int num10 = rd.Next(soLuongAnhFrom, soLuongAnhTo + 1);
							num3 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"touchable\"]>img').length"));
							if (chrome.CheckExistElement("[data-sigil=\"m-raw-file-input\"]") == 1)
							{
								for (int j = 0; j < num10; j++)
								{
									if (list2.Count == 0)
									{
										list2 = CloneList(lstFrom);
									}
									text2 = list2[rd.Next(0, list2.Count)];
									list2.Remove(text2);
									chrome.SendKeys(4, "[data-sigil=\"m-raw-file-input\"]", text2);
									chrome.DelayTime(1.0);
								}
							}
							for (int k = 0; k < 60; k++)
							{
								num4 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"touchable\"]>img').length"));
								if (num4 >= num10 + num3)
								{
									break;
								}
								chrome.DelayTime(1.0);
							}
							DelayThaoTacNho();
						}
						if (isNhanTinVanBan)
						{
							if (list.Count == 0)
							{
								list = CloneList(lstContent);
							}
							text = list[rd.Next(0, list.Count)];
							list.Remove(text);
							text = MCommon.Common.SpinText(text, rd);
							string text6 = chrome.ExecuteScript("return document.querySelector('[data-sigil=\" token\"]').innerText.replace('×','').trim()").ToString();
							if (text6 == "")
							{
								text6 = chrome.ExecuteScript("return document.title").ToString().Split('-', '|')[0].Trim();
							}
							text = text.Replace("[u]", text6);
							chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, "[name=\"body\"]", text, 0.1);
							DelayThaoTacNho();
						}
						num5 = chrome.CheckExistElements(5.0, "[name=\"Send\"]", "[name=\"send\"]");
						if (num5 == 1)
						{
							chrome.Click(4, "[name=\"Send\"]");
						}
						else
						{
							chrome.Click(4, "[name=\"send\"]");
						}
						DelayThaoTacNho();
						num++;
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num6})...");
						if (chrome.CheckChromeClosed())
						{
							return -2;
						}
						chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
						if (ckbTuongTacKhiNhanTin && typeTuongTacKhiNhanTin == 1)
						{
							do
							{
								chrome.GotoURL("https://m.facebook.com/" + text3);
								chrome.DelayTime(2.0);
								num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							}
							while (num5 == 1);
							if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
							{
								return -1;
							}
							int num11 = 0;
							int num12 = 0;
							if (chrome.CheckExistElementv2($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num12}]") == 1)
							{
								num11 = 0;
								if (Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num12}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")) || Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num12}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")) || Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num12}].querySelector('[data-sigil=\"share-popup\"]')!=null)+''")))
								{
									num11++;
								}
								if (chrome.CheckChromeClosed())
								{
									return -2;
								}
								chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num12 + "]");
								DelayThaoTacNho(3);
								if (ckbTuongTacKhiNhanTinLike && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num12}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")))
								{
									chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num12 + "].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')");
									num11++;
									if (Convert.ToBoolean(chrome.ExecuteScript($"var output='false';var x=document.querySelectorAll('[data-store*=\"linkdata\"]')[{num12}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a');  if(x!=null) output=(JSON.parse(x.getAttribute('data-store')).reaction==0)+''; return output;").ToString()))
									{
										DelayThaoTacNho();
										chrome.Click(4, "[data-store*=\"linkdata\"]", num12, 4, "[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a");
										DelayThaoTacNho();
									}
								}
								if (ckbTuongTacKhiNhanTinComment && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num12}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")))
								{
									num11++;
									chrome.Click(4, "[data-store*=\"linkdata\"]", num12, 4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]");
									DelayThaoTacNho();
									if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
									{
										DelayThaoTacNho();
										chrome.ScrollSmooth("document.querySelector('[data-sigil =\"textarea mufi-composer m-textarea-input\"]')");
										DelayThaoTacNho();
										List<string> list5 = new List<string>();
										if (list5.Count == 0)
										{
											list5 = CloneList(lstTuongTacKhiNhanTinComment);
										}
										string item2 = list5[rd.Next(0, list5.Count)];
										list5.Remove(item2);
										item2 = MCommon.Common.SpinText(item2, rd);
										string nameFromPost2 = CommonChrome.GetNameFromPost(chrome);
										item2 = item2.Replace("[u]", nameFromPost2);
										item2 = GetIconFacebook.ProcessString(item2, rd);
										string text7 = "[data-sigil=\"textarea mufi-composer m-textarea-input\"]";
										if (MCommon.Common.CheckStringIsContainIcon(item2))
										{
											item2 = item2.Replace("\r\n", "*r*n").Replace("\n", "*r*n");
											item2 = item2.Replace("*r*n", "\\r\\n").Replace("\"", "\\\"");
											chrome.Click(4, text7);
											chrome.ExecuteScript("document.querySelector('" + text7 + "').value=\"" + item2 + "\"");
											chrome.SendKeys(4, text7, " ", 0.1, isClick: false);
										}
										else
										{
											chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, text7, item2 + " ", 0.1);
										}
										DelayThaoTacNho(3);
										for (int l = 0; l < 10; l++)
										{
											if (chrome.Click(2, "submit") == 1)
											{
												break;
											}
											MCommon.Common.DelayTime(1.0);
										}
										DelayThaoTacNho(2);
									}
									chrome.GotoBackPage();
									DelayThaoTacNho();
								}
							}
						}
					}
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDNhanTinBanBeRandom(int indexRow, string statusProxy, Chrome chrome, int soLuongBanFrom, int soLuongBanTo, List<string> lstContent, int delayFrom, int delayTo, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0993, IL_09a6
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			try
			{
				List<string> list = new List<string>();
				list = CloneList(lstContent);
				string text = "";
				int num2 = rd.Next(soLuongBanFrom, soLuongBanTo + 1);
				if (num2 != 0)
				{
					while (true)
					{
						List<string> myListUidNameFriend = CommonChrome.GetMyListUidNameFriend(chrome);
						while (true)
						{
							int num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							if (num3 == 1)
							{
								break;
							}
							if (new List<int> { -3, -2, -1, 2 }.Contains(num3))
							{
								return -1;
							}
							int num4 = chrome.CountElement("[data-sigil=\"undoable-action\"]");
							if (num4 > 0)
							{
								int index = Base.rd.Next(0, num4);
								chrome.ScrollSmooth("document.querySelectorAll('[data-sigil=\"undoable-action\"]>div:nth-child(1)>a')[" + index + "]");
								DelayThaoTacNho();
								chrome.Click(4, "[data-sigil=\"undoable-action\"]>div:nth-child(1)>a", index);
								DelayThaoTacNho(2);
								if (chrome.CheckExistElement("[data-sigil=\"hq-profile-logging-action-bar-button\"]>a", 3.0) == 1)
								{
									CommonChrome.ScrollRandom(chrome);
									chrome.ScrollSmooth("document.querySelector('[data-sigil=\"hq-profile-logging-action-bar-button\"]>a')");
									DelayThaoTacNho();
									chrome.Click(4, "[data-sigil=\"hq-profile-logging-action-bar-button\"]>a");
									DelayThaoTacNho(2);
									if (chrome.CheckExistElement("[name=\"body\"]", 5.0) != 1)
									{
										goto IL_08a2;
									}
									if (list.Count == 0)
									{
										list = CloneList(lstContent);
									}
									text = list[rd.Next(0, list.Count)];
									list.Remove(text);
									text = MCommon.Common.SpinText(text, rd);
									text = GetIconFacebook.ProcessString(text, rd);
									string text2 = chrome.ExecuteScript("return document.querySelector('[data-sigil=\" token\"]').innerText.replace('×','').trim()").ToString();
									if (text2 == "")
									{
										text2 = chrome.ExecuteScript("return document.title").ToString().Split('-', '|')[0].Trim();
									}
									text = text.Replace("[u]", text2);
									DelayThaoTacNho();
									if (!MCommon.Common.CheckStringIsContainIcon(text))
									{
										switch (setting_general.GetValueInt("tocDoGoVanBan"))
										{
											case 0:
												chrome.SendKeys(Base.rd, 4, "[name=\"body\"]", text, 0.1);
												break;
											case 1:
												chrome.SendKeys(4, "[name=\"body\"]", text, 0.1);
												break;
											case 2:
												chrome.SendKeys(4, "[name=\"body\"]", text);
												break;
										}
									}
									else
									{
										chrome.ExecuteScript("document.querySelector('[name=\"body\"]').value=\"" + text + "\"");
										chrome.DelayTime(1.0);
										chrome.SendKeys(2, "body", " ");
									}
									DelayThaoTacNho();
									num3 = chrome.CheckExistElements(5.0, "[name=\"Send\"]", "[name=\"send\"]");
									if (num3 == 1)
									{
										chrome.Click(4, "[name=\"Send\"]");
									}
									else
									{
										chrome.Click(4, "[name=\"send\"]");
									}
									DelayThaoTacNho();
									num++;
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
									if (chrome.CheckChromeClosed())
									{
										return -2;
									}
									chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
									if (num < num2)
									{
										goto IL_08a2;
									}
								}
							}
							goto end_IL_007c;
						IL_08a2:
							chrome.GotoBackPage();
							chrome.DelayThaoTacNho();
							chrome.GotoBackPage();
							chrome.DelayThaoTacNho();
							if (chrome.CheckExistElement("[data-sigil=\"undoable-action\"]") != 1)
							{
								chrome.GotoBackPage();
								chrome.DelayThaoTacNho();
								if (chrome.CheckExistElement("[data-sigil=\"undoable-action\"]") != 1)
								{
									break;
								}
							}
						}
					}
				}
			end_IL_007c:;
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDNhanTinBanBe(int indexRow, string statusProxy, Chrome chrome, string token, string cookie, int soLuongBanFrom, int soLuongBanTo, List<string> lstContent, int delayFrom, int delayTo, string proxy, int typeProxy, Random rd, string tenHanhDong = "", int typeDoiTuong = 0, List<string> lstUidChiDinh = null)
		{
			//Discarded unreachable code: IL_0694, IL_06a7
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int result = 0;
			try
			{
				List<string> list = new List<string>();
				if (typeDoiTuong == 0)
				{
					lstUidChiDinh = CommonChrome.GetMyListUidFriend(chrome);
				}
				list = CloneList(lstUidChiDinh);
				List<string> list2 = new List<string>();
				list2 = CloneList(lstContent);
				string text = "";
				string text2 = "";
				int count = list.Count;
				int num = 0;
				int num2 = rd.Next(soLuongBanFrom, soLuongBanTo + 1);
				for (int i = 0; i < count; i++)
				{
					if (num == num2)
					{
						break;
					}
					num++;
					if (list2.Count == 0)
					{
						list2 = CloneList(lstContent);
					}
					text = list2[rd.Next(0, list2.Count)];
					text2 = list[rd.Next(0, list.Count)];
					list.Remove(text2);
					list2.Remove(text);
					text = MCommon.Common.SpinText(text, rd);
					text = GetIconFacebook.ProcessString(text, rd);
					int num3;
					do
					{
						chrome.GotoURL("https://m.facebook.com/messages/read/?fbid=" + text2);
						DelayThaoTacNho(2);
						num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					}
					while (num3 == 1);
					if (new List<int> { -3, -2, -1, 2 }.Contains(num3))
					{
						return -1;
					}
					if (chrome.CheckExistElement("[name=\"body\"]", 5.0) == 1)
					{
						DelayThaoTacNho();
						if (!MCommon.Common.CheckStringIsContainIcon(text))
						{
							chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, "[name=\"body\"]", text, 0.1);
						}
						else
						{
							chrome.ExecuteScript("document.querySelector('[name=\"body\"]').value=\"" + text + "\"");
							chrome.DelayTime(1.0);
							chrome.SendKeys(2, "body", " ");
						}
						DelayThaoTacNho();
						num3 = chrome.CheckExistElements(5.0, "[name=\"Send\"]", "[name=\"send\"]");
						if (num3 == 1)
						{
							chrome.Click(4, "[name=\"Send\"]");
						}
						else
						{
							chrome.Click(4, "[name=\"send\"]");
						}
						DelayThaoTacNho();
						if (tenHanhDong == "")
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang nhắn tin bạn bè") + $" ({num}/{num2})...");
						}
						else
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
						}
						chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
					}
				}
			}
			catch
			{
				result = -1;
			}
			return result;
		}

		public int HDChocBanBe(int indexRow, string statusProxy, Chrome chrome, int soLuongFrom, int soLuongTo, int delayFrom, int delayTo, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0416, IL_0429
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = 0;
			try
			{
				while (true)
				{
				IL_0084:
					if (CommonChrome.GoToPoke(chrome) == -2)
					{
						return -2;
					}
					int num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num3 == 1)
					{
						continue;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num3))
					{
						return -1;
					}
					int num4 = rd.Next(soLuongFrom, soLuongTo + 1);
					while (num < num4)
					{
						num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num3 == 1)
						{
							goto IL_0084;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num3))
						{
							return -1;
						}
						if (chrome.CheckExistElement("[data-sigil=\"touchable ajaxify\"]", 5.0) == 1)
						{
							num2 = 0;
							chrome.ScrollSmooth("document.querySelector('[data-sigil=\"touchable ajaxify\"]')");
							DelayThaoTacNho();
							chrome.Click(4, "[data-sigil=\"touchable ajaxify\"]");
							num++;
							DelayThaoTacNho(2);
							if (tenHanhDong == "")
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang chọc bạn bè") + $" ({num}/{num4})...");
							}
							else
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num4})...");
							}
							chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
						}
						else
						{
							chrome.Refresh();
							num2++;
							if (num2 == 2)
							{
								break;
							}
						}
					}
					break;
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDChucMungSinhNhat(int indexRow, string statusProxy, Chrome chrome, int soLuongFrom, int soLuongTo, int delayFrom, int delayTo, int typeAction, List<string> lstContent, Random rd, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0bcd, IL_0be0
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			List<string> list = new List<string>();
			string text = "";
			try
			{
				int num2 = rd.Next(soLuongFrom, soLuongTo + 1);
				while (true)
				{
				IL_00ba:
					if (CommonChrome.GoToBirthday(chrome) == -2)
					{
						return -2;
					}
					int num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (num3 == 1)
					{
						continue;
					}
					if (new List<int> { -3, -2, -1, 2 }.Contains(num3))
					{
						return -1;
					}
					if (list.Count == 0)
					{
						list = CloneList(lstContent);
					}
					text = list[rd.Next(0, list.Count)];
					list.Remove(text);
					text = MCommon.Common.SpinText(text, rd);
					if (num2 <= 0)
					{
						break;
					}
					if (typeAction == 0)
					{
						int num4 = Convert.ToInt32(chrome.ExecuteScript("var dem='0'; var x=document.querySelectorAll('#root a'); if(x!=null) dem=x.length+''; return dem").ToString());
						for (int i = 0; i < num4; i++)
						{
							num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							if (num3 == 1)
							{
								goto IL_00ba;
							}
							if (new List<int> { -3, -2, -1, 2 }.Contains(num3))
							{
								return -1;
							}
							chrome.Click(4, "#rootcontainer>div>div>div:nth-child(" + (i + 1) + ")>div>div:nth-child(3)>div>a");
							DelayThaoTacNho(2);
							num3 = 0;
							if (chrome.CheckExistElement("[data-sigil=\"hq-profile-logging-action-bar-button\"] a", 5.0) == 1)
							{
								chrome.Click(4, "[data-sigil=\"hq-profile-logging-action-bar-button\"] a");
								num3 = 1;
							}
							else if (chrome.CheckExistElement("#m-timeline-cover-section > div > div:nth-child(3) > div > div > a", 5.0) == 1)
							{
								chrome.Click(4, "#m-timeline-cover-section > div > div:nth-child(3) > div > div > a");
								num3 = 1;
							}
							if (num3 == 1)
							{
								DelayThaoTacNho();
								if (chrome.CheckExistElement("[name=\"body\"]", 10.0) == 1)
								{
									string text2 = chrome.ExecuteScript("return document.querySelector('[data-sigil=\" token\"]').innerText.replace('×','').trim()").ToString();
									if (text2 == "")
									{
										text2 = chrome.ExecuteScript("return document.title").ToString().Split('-', '|')[0].Trim();
									}
									text = text.Replace("[u]", text2);
									DelayThaoTacNho();
									chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, "[name=\"body\"]", text, 0.1);
									DelayThaoTacNho();
									num3 = chrome.CheckExistElements(5.0, "[name=\"Send\"]", "[name=\"send\"]");
									if (num3 == 1)
									{
										chrome.Click(4, "[name=\"Send\"]");
									}
									else
									{
										chrome.Click(4, "[name=\"send\"]");
									}
									DelayThaoTacNho();
								}
							}
							num++;
							if (tenHanhDong == "")
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang chúc mừng sinh nhật") + $" ({num}/{num2})...");
							}
							else
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
							}
							if (num >= num2)
							{
								break;
							}
							if (CommonChrome.GoToBirthday(chrome) == -2)
							{
								return -2;
							}
							chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
						}
						break;
					}
					int num5 = Convert.ToInt32(chrome.ExecuteScript("var dem='0'; var x=document.querySelectorAll('[name=\"message\"]'); if(x!=null) dem=x.length+''; return dem").ToString());
					for (int j = 0; j < num5; j++)
					{
						num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num3 == 1)
						{
							goto IL_00ba;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num3))
						{
							return -1;
						}
						chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, "[name=\"message\"]", text, 0.1);
						DelayThaoTacNho(2);
						chrome.Click(4, "[name=\"post\"]");
						DelayThaoTacNho(2);
						if (CommonChrome.CheckFacebookBlocked(chrome))
						{
							return -4;
						}
						num++;
						if (tenHanhDong == "")
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang chúc mừng sinh nhật") + $" ({num}/{num2})...");
						}
						else
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
						}
						if (num >= num2)
						{
							break;
						}
						chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
					}
					break;
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDKetBanTepUid(int indexRow, string statusProxy, Chrome chrome, ref List<string> lstUid, int soLuongFrom, int soLuongTo, int delayFrom, int delayTo, bool isTrungNhau, Random rd, string tenHanhDong = "", bool isTuongTac = false, int soLuongBaiVietFrom = 0, int soLuongBaiVietTo = 0, int tuongTacDelayFrom = 0, int tuongTacDelayTo = 0, bool isLike = false, bool isComment = false, List<string> lstComment = null, bool isTuDongXoaUid = false, string id_HanhDong = "", string uid = "", string pass = "", string fa2 = "")
		{
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			string text = "";
			string text2 = "";
			if (lstComment != null)
			{
				lstComment = MCommon.Common.RemoveEmptyItems(lstComment);
			}
			List<string> list = new List<string>();
			if (id_HanhDong != "")
			{
				if (!isTuDongXoaUid)
				{
					list = CloneList(dicUidCaNhan[id_HanhDong]);
				}
			}
			else if (isTrungNhau)
			{
				list = CloneList(lstUid);
			}
			try
			{
				int num2 = rd.Next(soLuongFrom, soLuongTo + 1);
				while (num < num2)
				{
					if (isTrungNhau || (id_HanhDong != "" && !isTuDongXoaUid))
					{
						if (list.Count == 0)
						{
							break;
						}
						text = list[rd.Next(0, list.Count)];
						list.Remove(text);
						goto IL_023b;
					}
					lock (dicUidCaNhan)
					{
						if (dicUidCaNhan[id_HanhDong].Count == 0)
						{
							break;
						}
						text = dicUidCaNhan[id_HanhDong][rd.Next(0, dicUidCaNhan[id_HanhDong].Count)];
						dicUidCaNhan[id_HanhDong].Remove(text);
						goto IL_023b;
					}
				IL_023b:
					while (true)
					{
					IL_023b_2:
						chrome.GotoURL("https://m.facebook.com/" + text);
						DelayThaoTacNho(2);
						if (CommonChrome.CheckFacebookBlocked(chrome))
						{
							return -4;
						}
						int num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						if (num3 == 1)
						{
							continue;
						}
						if (new List<int> { -3, -2, -1, 2 }.Contains(num3))
						{
							return -1;
						}
						string text3 = chrome.CheckExistElementsV2(5.0, "a[href*=\"friends/profile_add_friend\"]", "a[href*=\"friends/profile/add\"]");
						if (!(text3 != ""))
						{
							num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							if (num3 == 1)
							{
								continue;
							}
							if (!new List<int> { -3, -2, -1, 2 }.Contains(num3))
							{
								break;
							}
							return -1;
						}
						if (Convert.ToBoolean(chrome.ExecuteScript("var x=document.querySelector('[data-sigil=\"add-friend hq-profile-logging-action-bar-button\"]').getAttribute('style')+''; return x.includes('display:none')+''").ToString()))
						{
							break;
						}
						if (isTuongTac)
						{
							int num4 = 0;
							int num5 = rd.Next(soLuongBaiVietFrom, soLuongBaiVietTo + 1);
							int num6 = 0;
							int num7 = -1;
							List<string> list2 = new List<string>();
							string text4 = "";
							int num8 = 0;
							while (num4 < num5)
							{
								num3 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
								if (num3 == 1)
								{
									goto IL_023b_2;
								}
								if (new List<int> { -3, -2, -1, 2 }.Contains(num3))
								{
									return -1;
								}
								num7++;
								if (chrome.CheckExistElementv2($"document.querySelectorAll('[data-store*=\"linkdata\"]')[{num7}]") != 1)
								{
									break;
								}
								num6 = 0;
								if (chrome.CheckChromeClosed())
								{
									return -2;
								}
								chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num7 + "]");
								DelayThaoTacNho();
								if (isLike && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num7}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')!=null)+''")))
								{
									chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]')[" + num7 + "].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a')");
									num6++;
									if (Convert.ToBoolean(chrome.ExecuteScript($"var output='false';var x=document.querySelectorAll('[data-store*=\"linkdata\"]')[{num7}].querySelector('[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a');  if(x!=null) output=(JSON.parse(x.getAttribute('data-store')).reaction==0)+''; return output;").ToString()))
									{
										DelayThaoTacNho();
										chrome.Click(4, "[data-store*=\"linkdata\"]", num7, 4, "[data-store*=\"linkdata\"]>footer>div>div:nth-child(2)>div:nth-child(1)>a");
										DelayThaoTacNho();
									}
								}
								if (isComment && Convert.ToBoolean(chrome.ExecuteScript($"return (document.querySelectorAll('[data-store*=\"linkdata\"]')[{num7}].querySelector('[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]')!=null)+''")))
								{
									num6++;
									if (list2.Count == 0)
									{
										list2 = CloneList(lstComment);
									}
									text4 = list2[rd.Next(0, list2.Count)];
									list2.Remove(text4);
									chrome.Click(4, "[data-store*=\"linkdata\"]", num7, 4, "[data-sigil=\"feed-ufi-focus feed-ufi-trigger ufiCommentLink mufi-composer-focus\"]");
									DelayThaoTacNho();
									if (chrome.CheckExistElement("[data-sigil=\"textarea mufi-composer m-textarea-input\"]", 5.0) == 1)
									{
										DelayThaoTacNho();
										chrome.ScrollSmooth("document.querySelector('[data-sigil =\"textarea mufi-composer m-textarea-input\"]')");
										DelayThaoTacNho();
										text4 = MCommon.Common.SpinText(text4, rd);
										string nameFromPost = CommonChrome.GetNameFromPost(chrome);
										text4 = text4.Replace("[u]", nameFromPost);
										text4 = GetIconFacebook.ProcessString(text4, rd);
										string text5 = "[data-sigil=\"textarea mufi-composer m-textarea-input\"]";
										if (MCommon.Common.CheckStringIsContainIcon(text4))
										{
											text4 = text4.Replace("\r\n", "*r*n").Replace("\n", "*r*n");
											text4 = text4.Replace("*r*n", "\\r\\n").Replace("\"", "\\\"");
											chrome.Click(4, text5);
											chrome.ExecuteScript("document.querySelector('" + text5 + "').value=\"" + text4 + "\"");
											chrome.SendKeys(4, text5, " ", 0.1, isClick: false);
										}
										else
										{
											chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, text5, text4 + " ", 0.1);
										}
										DelayThaoTacNho();
										chrome.Click(4, "[name=\"submit\"]");
										DelayThaoTacNho(2);
									}
									chrome.GotoBackPage();
									DelayThaoTacNho();
								}
								if (num6 > 0)
								{
									num8 = 0;
									num4++;
									if (tenHanhDong == "")
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang kết bạn theo tệp uid") + $" ({num}/{num2}:{num4}/{num5})...");
									}
									else
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2}:{num4}/{num5})...");
									}
									if (chrome.CheckChromeClosed())
									{
										return -2;
									}
								}
								else
								{
									num8++;
									if (num8 == 3)
									{
										break;
									}
								}
								chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
							}
						}
						chrome.ScrollSmoothIfNotExistOnScreen("document.querySelector('" + text3 + "')");
						DelayThaoTacNho();
						chrome.Click(4, text3);
						chrome.DelayRandom(1, 2);
						CommonChrome.SkipNotifyWhenAddFriend(chrome);
						num++;
						if (tenHanhDong == "")
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang kết bạn theo tệp uid") + $" ({num}/{num2})...");
						}
						else
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
						}
						if (chrome.CheckChromeClosed())
						{
							return -2;
						}
						if (num != num2)
						{
							chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
							break;
						}
						goto end_IL_010e;
					}
				}
			end_IL_010e:;
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDKetBanTepUidv2(int indexRow, string statusProxy, Chrome chrome, ref List<string> lstUid, int soLuongFrom, int soLuongTo, int delayFrom, int delayTo, bool isTrungNhau, Random rd, string tenHanhDong = "", bool isTuongTac = false, int soLuongBaiVietFrom = 0, int soLuongBaiVietTo = 0, int tuongTacDelayFrom = 0, int tuongTacDelayTo = 0, bool isLike = false, bool isComment = false, List<string> lstComment = null, bool isTuDongXoaUid = false, string id_HanhDong = "", string uid = "", string pass = "", string fa2 = "")
		{
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			string text = "";
			int num2 = chrome.chrome.Manage().Window.Size.Width;
			int num3 = chrome.chrome.Manage().Window.Size.Height;
			chrome.chrome.Manage().Window.Size = new Size(500, 700);
			if (lstComment != null)
			{
				lstComment = MCommon.Common.RemoveEmptyItems(lstComment);
			}
			List<string> list = new List<string>();
			if (id_HanhDong != "")
			{
				if (!isTuDongXoaUid)
				{
					list = CloneList(dicUidCaNhan2[id_HanhDong]);
				}
			}
			else if (isTrungNhau)
			{
				list = CloneList(lstUid);
			}
			try
			{
				int num4 = rd.Next(soLuongFrom, soLuongTo + 1);
				while (num < num4)
				{
					while (true)
					{
						if (isTrungNhau || (id_HanhDong != "" && !isTuDongXoaUid))
						{
							if (list.Count == 0)
							{
								break;
							}
							text = list[rd.Next(0, list.Count)];
							list.Remove(text);
							goto IL_028a;
						}
						lock (dicUidCaNhan2)
						{
							if (dicUidCaNhan2[id_HanhDong].Count == 0)
							{
								break;
							}
							text = dicUidCaNhan2[id_HanhDong][rd.Next(0, dicUidCaNhan2[id_HanhDong].Count)];
							dicUidCaNhan2[id_HanhDong].Remove(text);
							goto IL_028a;
						}
					IL_05e7:
						if (tenHanhDong == "")
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang kết bạn theo tệp uid v2") + $" ({num}/{num4})...");
						}
						else
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num4})...");
						}
						if (chrome.CheckChromeClosed())
						{
							return -2;
						}
						chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
						goto IL_06e0;
					IL_028a:
						int num5;
						do
						{
							chrome.GotoURL("https://www.facebook.com/" + text);
							DelayThaoTacNho(1);
							ClosePopup(chrome);
							num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
						}
						while (num5 == 1);
						if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
						{
							return -1;
						}
						if (chrome.CheckExistElement("[data-pagelet=\"ProfileActions\"] [role=\"button\"]", 10.0) == 1)
						{
							int num6 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-pagelet=\"ProfileActions\"] [role=\"button\"]').length").ToString());
							int num7 = 0;
							while (true)
							{
								if (num7 < num6 - 1)
								{
									if (Convert.ToBoolean(chrome.ExecuteScript("return document.querySelectorAll('[data-pagelet=\"ProfileActions\"] [role=\"button\"] img')[" + num7 + "].src.includes('Qg9sXPTnmFb')").ToString()))
									{
										break;
									}
									if (Convert.ToBoolean(chrome.ExecuteScript("return document.querySelectorAll('[data-pagelet=\"ProfileActions\"] [role=\"button\"] img')[" + num7 + "].src.includes('JonZjQBHWuh')").ToString()))
									{
										chrome.Click(4, "[data-pagelet=\"ProfileActions\"] [role=\"button\"]", num7);
										DelayThaoTacNho(2);
										goto IL_05cf;
									}
									num7++;
									continue;
								}
								chrome.Click(4, "[data-pagelet=\"ProfileActions\"] [aria-haspopup=\"menu\"]");
								chrome.DelayRandom(2, 3);
								if (chrome.CheckExistElement("[role=\"menuitem\"]", 10.0) != 1)
								{
									break;
								}
								num6 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[role=\"menuitem\"] img').length").ToString());
								int num8 = 0;
								while (num8 < num6)
								{
									if (!Convert.ToBoolean(chrome.ExecuteScript("return document.querySelectorAll('[role=\"menuitem\"] img')[" + num8 + "].src.includes('AHZMGvojvC4')").ToString()))
									{
										num8++;
										continue;
									}
									goto IL_056e;
								}
								break;
							IL_05cf:
								num++;
								if (num != num4)
								{
									goto IL_05e7;
								}
								goto end_IL_015c;
							IL_056e:
								chrome.Click(4, "[role=\"menuitem\"]", num8);
								DelayThaoTacNho(2);
								goto IL_05cf;
							}
							continue;
						}
						goto IL_06e0;
					}
					break;
				IL_06e0:;
				}
			end_IL_015c:;
			}
			catch (Exception)
			{
				num = -1;
			}
			chrome.chrome.Manage().Window.Size = new Size(num2, num3);
			return num;
		}

		public int HDKetBanNewfeed(int indexRow, string statusProxy, Chrome chrome, int soLuongFrom, int soLuongTo, int delayFrom, int delayTo, Random rd, string tenHanhDong)
		{
			//Discarded unreachable code: IL_0797, IL_07a4
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			try
			{
				int num2 = 0;
				int num3 = 5;
				int num4 = 0;
				int num5 = rd.Next(soLuongFrom, soLuongTo + 1);
				List<string> list = new List<string>();
				CommonChrome.GoToHome(chrome);
				DelayThaoTacNho(2);
				if (chrome.CheckExistElement("[data-sigil=\"mufi-inline\"]>div:nth-child(1) a", 10.0) == 1)
				{
					while (num < num5)
					{
						while (true)
						{
							int item = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							if (new List<int> { -3, -2, -1, 2 }.Contains(item))
							{
								return -1;
							}
							if (chrome.ScrollSmooth("document.querySelectorAll('[data-store*=\"linkdata\"]>div>header>div:nth-child(2)>div>div>div>div>a')[" + num4 * 2 + "]") != 1)
							{
								break;
							}
							chrome.DelayTime(1.0);
							string text = chrome.ExecuteScript("return document.querySelectorAll('[data-store*=\"linkdata\"]>div>header>div:nth-child(2)>div>div>div>div>a')[" + num4 * 2 + "].href").ToString();
							if (text == "https://m.facebook.com/home.php#")
							{
								text = chrome.ExecuteScript("return document.querySelectorAll('[data-store*=\"linkdata\"]>div>header>div:nth-child(2)>div>div>div>div>a')[" + (num4 * 2 + 1) + "].href").ToString();
							}
							string value = Regex.Match(text, "fbid=(.*?)&").Groups[1].Value;
							if (value == "")
							{
								value = Regex.Match(text, "permalink/(.*?)/").Groups[1].Value;
							}
							if (!list.Contains(value))
							{
								list.Add(value);
								chrome.Click(4, "[data-sigil=\"m-feed-voice-subtitle\"] a", num4);
								DelayThaoTacNho();
								if (chrome.CheckExistElement("[data-sigil=\"m-mentions-expand\"]>div>div:nth-child(2) span", 10.0) == 1)
								{
									chrome.Click(4, "[data-sigil=\"m-mentions-expand\"] a");
									chrome.DelayThaoTacNho();
									if (chrome.CheckExistElement("[data-sigil=\"m-add-friend-flyout\"] button", 10.0) == 1)
									{
										int num6 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[data-sigil=\"touchable m-add-friend\"] button').length").ToString());
										int num7 = 0;
										while (num7 < num6)
										{
											if (num != num5)
											{
												item = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
												if (new List<int> { -3, -2, -1, 2 }.Contains(item))
												{
													return -1;
												}
												chrome.ScrollSmooth("document.querySelectorAll('[data-sigil=\"touchable m-add-friend\"] button')[" + num7 + "]");
												chrome.DelayTime(1.0);
												chrome.Click(4, "[data-sigil=\"touchable m-add-friend\"] button", num7);
												chrome.DelayTime(1.0);
												num2 = (CommonChrome.SkipNotifyWhenAddFriend(chrome) ? (num2 + 1) : 0);
												if (num2 < num3)
												{
													num++;
													SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong}({num}/{num5})...");
													chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
													num7++;
													continue;
												}
											}
											goto end_IL_007c;
										}
									}
									chrome.GotoBackPage(2);
									DelayThaoTacNho();
									num4++;
									goto IL_0782;
								}
								num4++;
								chrome.GotoBackPage();
							}
							else
							{
								num4++;
							}
						}
						break;
					IL_0782:;
					}
				}
			end_IL_007c:;
			}
			catch
			{
			}
			return num;
		}

		public int HDKetBanVoiBanBeCuaUid(int indexRow, string statusProxy, Chrome chrome, List<string> lstUid, int soLuongFrom, int soLuongTo, int delayFrom, int delayTo, Random rd, string tenHanhDong)
		{
			//Discarded unreachable code: IL_050d, IL_0520
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = rd.Next(soLuongFrom, soLuongTo + 1);
			string text = "";
			try
			{
				int num3 = 0;
				int num4 = 5;
				while (lstUid.Count != 0)
				{
					int num5 = 0;
					text = lstUid[rd.Next(0, lstUid.Count)];
					lstUid.Remove(text);
					int num6;
					do
					{
						chrome.GotoURL("https://m.facebook.com/" + text);
						DelayThaoTacNho(1);
						num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					}
					while (num6 == 1);
					if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
					{
						return -1;
					}
					if (chrome.CheckExistElement("#timelineProfileTiles>div>div>a", 3.0) != 1)
					{
						continue;
					}
					chrome.ScrollSmoothIfNotExistOnScreen("#timelineProfileTiles>div>div>a");
					chrome.DelayTime(1.0);
					chrome.Click(4, "#timelineProfileTiles>div>div>a");
					chrome.DelayThaoTacNho();
					if (chrome.CheckExistElement("[data-sigil=\"touchable m-add-friend\"] button", 3.0) != 1)
					{
						continue;
					}
					while (chrome.ScrollSmoothIfNotExistOnScreen("document.querySelectorAll('[data-sigil=\"touchable m-add-friend\"] button')[" + num5 + "]") == 1)
					{
						if (num != num2)
						{
							num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
							{
								return -1;
							}
							chrome.DelayTime(1.0);
							chrome.Click(4, "[data-sigil=\"touchable m-add-friend\"] button", num5);
							num3 = (CommonChrome.SkipNotifyWhenAddFriend(chrome) ? (num3 + 1) : 0);
							if (num3 < num4)
							{
								num++;
								num5++;
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
								chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
								continue;
							}
						}
						goto end_IL_00b2;
					}
				}
			end_IL_00b2:;
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDKetBanVoiBanCuaBanBe(int indexRow, string statusProxy, Chrome chrome, int soLuongFrom, int soLuongTo, int delayFrom, int delayTo, Random rd, string tenHanhDong)
		{
			//Discarded unreachable code: IL_05e2, IL_05f5
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = 0;
			int num2 = rd.Next(soLuongFrom, soLuongTo + 1);
			string text = "";
			try
			{
				int num3 = 0;
				int num4 = 5;
				List<string> myListUidFriend = CommonChrome.GetMyListUidFriend(chrome);
				while (myListUidFriend.Count != 0)
				{
					int item = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					if (new List<int> { -3, -2, -1, 2 }.Contains(item))
					{
						return -1;
					}
					int num5 = 0;
					text = myListUidFriend[rd.Next(0, myListUidFriend.Count)];
					myListUidFriend.Remove(text);
					do
					{
						chrome.GotoURL("https://m.facebook.com/" + text);
						DelayThaoTacNho(1);
						item = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					}
					while (item == 1);
					if (new List<int> { -3, -2, -1, 2 }.Contains(item))
					{
						return -1;
					}
					if (chrome.CheckExistElement("#timelineProfileTiles>div>div>a", 3.0) != 1)
					{
						continue;
					}
					chrome.ScrollSmoothIfNotExistOnScreen("#timelineProfileTiles>div>div>a");
					chrome.DelayTime(1.0);
					chrome.Click(4, "#timelineProfileTiles>div>div>a");
					chrome.DelayThaoTacNho();
					if (chrome.CheckExistElement("[href*=\"mutual\"]", 5.0) != 1 || chrome.CheckExistElement("[data-sigil=\"touchable m-add-friend\"] button", 3.0) != 1)
					{
						continue;
					}
					while (chrome.ScrollSmoothIfNotExistOnScreen("document.querySelectorAll('[data-sigil=\"touchable m-add-friend\"] button')[" + num5 + "]") == 1)
					{
						if (num != num2)
						{
							item = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
							if (new List<int> { -3, -2, -1, 2 }.Contains(item))
							{
								return -1;
							}
							chrome.DelayTime(1.0);
							if (chrome.Click(4, "[data-sigil=\"touchable m-add-friend\"] button", num5) != 1)
							{
								continue;
							}
							chrome.DelayTime(1.0);
							num3 = (CommonChrome.SkipNotifyWhenAddFriend(chrome) ? (num3 + 1) : 0);
							if (num3 < num4)
							{
								num++;
								num5++;
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
								chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
								continue;
							}
						}
						goto end_IL_00b2;
					}
				}
			end_IL_00b2:;
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		public int HDKetBanTepUidNew(int indexRow, string statusProxy, AutoChrome autoChrome, int soLuongFrom, int soLuongTo, int timeDelayFrom, int timeDelayTo, string tenHanhDong, string id_HanhDong)
		{
			//Discarded unreachable code: IL_00b5, IL_00ca, IL_03fe, IL_040b
			int num = 0;
			string url = "";
			try
			{
				lock (dicKetBanUidNew)
				{
					if (dicKetBanUidNew[id_HanhDong].Count != 0)
					{
						url = dicKetBanUidNew[id_HanhDong][0];
						dicKetBanUidNew[id_HanhDong].RemoveAt(0);
						goto IL_00cb;
					}
				}
				goto end_IL_001d;
			IL_00cb:
				int num2 = rd.Next(soLuongFrom, soLuongTo + 1);
				autoChrome.chrome.GotoURL(url);
				DelayThaoTacNho();
				if (autoChrome.chrome.CheckExistElement("[style=\"transform: translate(16px, 0px);\"] [style=\"inset: -8px;\"]", 3.0) == 1)
				{
					autoChrome.chrome.ExecuteScript("document.querySelector('[style=\"transform: translate(16px, 0px);\"] [style=\"inset: -8px;\"]').click()");
				}
				int num3 = autoChrome.chrome.CheckExistElements(10.0, "[style=\"text-align:start\"]", "[style=\"text-align: start;\"]");
				string text = "";
				text = ((num3 != 1) ? "[style=\"text-align: start;\"]" : "[style=\"text-align:start\"]");
				text += " a";
				int num4 = autoChrome.chrome.CountElement(text);
				for (int i = 0; i < num4; i++)
				{
					if (!autoChrome.chrome.CheckIsLive())
					{
						break;
					}
					if (num == num2)
					{
						break;
					}
					autoChrome.chrome.HoverElement(4, text, i, 1.0);
					if (autoChrome.Click("DataClick\\nut\\logined\\nutThemban"))
					{
						autoChrome.chrome.DelayTime(2.0);
						num++;
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num}/{num2})...");
						autoChrome.chrome.DelayTime(rd.Next(timeDelayFrom, timeDelayTo + 1));
					}
					autoChrome.chrome.MoveToElement(4, "[role=\"navigation\"]", 1);
				}
			end_IL_001d:;
			}
			catch
			{
			}
			return num;
		}

		public int HDThamGiaNhomUid(int indexRow, string statusProxy, Chrome chrome, ref List<string> lstUid, int soLuongFrom, int soLuongTo, int delayFrom, int delayTo, bool isTrungNhau, bool answer, List<string> lstCauTraLoi, Random rd, string tenHanhDong = "", bool isTuDongXoaUid = false, string id_HanhDong = "", string uid = "", string pass = "", string fa2 = "")
		{
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			string text = "";
			int num = 0;
			string text2 = "";
			int num2 = 0;
			List<string> list = new List<string>();
			list = CloneList(lstCauTraLoi);
			List<string> list2 = new List<string>();
			if (id_HanhDong != "")
			{
				if (!isTuDongXoaUid)
				{
					list2 = CloneList(dicUidNhom[id_HanhDong]);
				}
			}
			else if (isTrungNhau)
			{
				list2 = CloneList(lstUid);
			}
			try
			{
				int num3 = rd.Next(soLuongFrom, soLuongTo + 1);
				for (int num4 = 0; num4 < num3 + 10; num4++)
				{
					if (isTrungNhau || (id_HanhDong != "" && !isTuDongXoaUid))
					{
						if (list2.Count == 0)
						{
							break;
						}
						text = list2[rd.Next(0, list2.Count)];
						list2.Remove(text);
						goto IL_0237;
					}
					lock (dicUidNhom)
					{
						if (dicUidNhom[id_HanhDong].Count == 0)
						{
							break;
						}
						text = dicUidNhom[id_HanhDong][rd.Next(0, dicUidNhom[id_HanhDong].Count)];
						dicUidNhom[id_HanhDong].Remove(text);
						goto IL_0237;
					}
				IL_0237:
					int num5;
					do
					{
						chrome.GotoURL("https://m.facebook.com/" + text);
						DelayThaoTacNho(2);
						if (CommonChrome.CheckFacebookBlocked(chrome))
						{
							return -4;
						}
						num5 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					}
					while (num5 == 1);
					if (new List<int> { -3, -2, -1, 2 }.Contains(num5))
					{
						return -1;
					}
					string cssSelector = chrome.GetCssSelector("a", "data-ajaxify-href", "invite_response=accept");
					if (cssSelector != "")
					{
						chrome.Click(4, cssSelector);
						DelayThaoTacNho(2);
						num2++;
						if (tenHanhDong == "")
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang tham gia nhóm") + $" ({num2}/{num3})...");
						}
						else
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num2}/{num3})...");
						}
						if (num2 >= num3)
						{
							break;
						}
						if (chrome.CheckChromeClosed())
						{
							return -2;
						}
						chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
					}
					else if (chrome.CheckExistElement("[use=\"special\"]", 5.0) == 1)
					{
						DelayThaoTacNho();
						chrome.Click(4, "[use=\"special\"]");
						DelayThaoTacNho(2);
						if (answer && chrome.CheckExistElement("[use=\"primary\"]", 5.0) == 1)
						{
							num = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('textarea').length").ToString());
							for (int i = 2; i < num + 2; i++)
							{
								if (list.Count == 0)
								{
									list = CloneList(lstCauTraLoi);
								}
								text2 = list[rd.Next(0, list.Count)];
								list.Remove(text2);
								chrome.SendKeysWithSpeed(setting_general.GetValueInt("tocDoGoVanBan"), 4, "#root > div > div > div:nth-child(2) > div:nth-child(" + i + ") > div > textarea", text2, 0.1);
								DelayThaoTacNho(2);
							}
							chrome.Click(4, "[use=\"primary\"]");
							DelayThaoTacNho(3);
						}
						num2++;
						if (tenHanhDong == "")
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang tham gia nhóm") + $" ({num2}/{num3})...");
						}
						else
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num2}/{num3})...");
						}
						if (num2 >= num3)
						{
							break;
						}
						if (chrome.CheckChromeClosed())
						{
							return -2;
						}
						chrome.Refresh();
						chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
					}
				}
			}
			catch
			{
				num2 = -1;
			}
			return num2;
		}

		public int HDThamGiaNhomUidv2(int indexRow, string statusProxy, Chrome chrome, ref List<string> lstUid, int soLuongFrom, int soLuongTo, int delayFrom, int delayTo, bool isTrungNhau, bool answer, List<string> lstCauTraLoi, Random rd, string tenHanhDong = "", bool isTuDongXoaUid = false, string id_HanhDong = "", string uid = "", string pass = "", string fa2 = "")
		{
			string cellAccount = GetCellAccount(indexRow, "cUid");
			string cellAccount2 = GetCellAccount(indexRow, "cPassword");
			string cellAccount3 = GetCellAccount(indexRow, "cFa2");
			int num = chrome.chrome.Manage().Window.Size.Width;
			int num2 = chrome.chrome.Manage().Window.Size.Height;
			chrome.chrome.Manage().Window.Size = new Size(500, 700);
			string text = "";
			int num3 = 0;
			List<string> list = new List<string>();
			list = CloneList(lstCauTraLoi);
			List<string> list2 = new List<string>();
			if (id_HanhDong != "")
			{
				if (!isTuDongXoaUid)
				{
					list2 = CloneList(dicUidNhom2[id_HanhDong]);
				}
			}
			else if (isTrungNhau)
			{
				list2 = CloneList(lstUid);
			}
			try
			{
				int num4 = rd.Next(soLuongFrom, soLuongTo + 1);
				string input = CommonChrome.RequestGet(chrome, "https://m.facebook.com/help", "https://m.facebook.com");
				string value = Regex.Match(input, "fb_dtsg\" value=\"(.*?)\"").Groups[1].Value;
				string data = "loc=en_US&ref=m_touch_locale_selector&should_redirect=false&fb_dtsg=" + value + "&jazoest=22683&lsd=&__dyn=&__csr=&__req=m&__a=&__user=" + uid;
				input = CommonChrome.RequestPost(chrome, "https://m.facebook.com/intl/ajax/save_locale", data, "https://m.facebook.com");
				for (int num5 = 0; num5 < num4 + 10; num5++)
				{
					if (isTrungNhau || (id_HanhDong != "" && !isTuDongXoaUid))
					{
						if (list2.Count == 0)
						{
							break;
						}
						text = list2[rd.Next(0, list2.Count)];
						list2.Remove(text);
						goto IL_0366;
					}
					lock (dicUidNhom2)
					{
						if (dicUidNhom2[id_HanhDong].Count == 0)
						{
							break;
						}
						text = dicUidNhom2[id_HanhDong][rd.Next(0, dicUidNhom2[id_HanhDong].Count)];
						dicUidNhom2[id_HanhDong].Remove(text);
						goto IL_0366;
					}
				IL_0366:
					int num6;
					do
					{
						chrome.GotoURL("https://www.facebook.com/" + text);
						chrome.DelayTime(1.0);
						ClosePopup(chrome);
						num6 = CheckFacebookLogout(chrome, cellAccount, cellAccount2, cellAccount3);
					}
					while (num6 == 1);
					if (new List<int> { -3, -2, -1, 2 }.Contains(num6))
					{
						return -1;
					}
					num6 = chrome.CheckExistElements(10.0, "[aria-label=\"Cancel Request\"]", "[aria-label=\"Invite\"]", "[aria-label=\"Join Group\"]");
					if (num6 == 3)
					{
						int num7 = Convert.ToInt32(chrome.ExecuteScript("return document.querySelectorAll('[aria-label=\"Join Group\"]').length").ToString());
						for (int i = 0; i < num7 && chrome.Click(4, "[aria-label=\"Join Group\"]", i) != 1; i++)
						{
						}
						chrome.DelayTime(5.0);
						num6 = chrome.CheckExistElements(10.0, "[aria-label=\"Answer Questions\"][role=\"dialog\"]", "[aria-label=\"Messenger\"]", "[aria-label=\"Cancel Request\"]");
						if (num6 == 1)
						{
							if (answer)
							{
								CommonChrome.AnswerQuestionWhenJoinGroupWWW(chrome, lstCauTraLoi);
								if (chrome.CheckExistElement("[role=\"dialog\"]>div:nth-child(3)>div:nth-child(3)>div:nth-child(3) [role=\"button\"]") == 1)
								{
									chrome.Click(4, "[role=\"dialog\"]>div:nth-child(3)>div:nth-child(3)>div:nth-child(3) [role=\"button\"]");
									chrome.DelayTime(3.0);
								}
							}
							else
							{
								chrome.Click(4, "[role=\"dialog\"] [role=\"button\"]");
								chrome.DelayTime(2.0);
								chrome.Click(4, "[role=\"dialog\"] [role=\"button\"]");
								chrome.DelayTime(1.0);
							}
						}
						num3++;
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + $" {tenHanhDong} ({num3}/{num4})...");
						if (num3 >= num4)
						{
							break;
						}
						if (chrome.CheckChromeClosed())
						{
							return -2;
						}
						chrome.DelayTime(rd.Next(delayFrom, delayTo + 1));
					}
				}
			}
			catch
			{
				num3 = -1;
			}
			chrome.chrome.Manage().Window.Size = new Size(num, num2);
			return num3;
		}

		private void LoadCheckTool()
		{
					lblStatus.Text = Language.GetValue("Đã kích hoạt");
		}

		private void cControl(string dt)
		{
			Invoke((MethodInvoker)delegate
			{
				try
				{
					if (dt == "start")
					{
						btnInteract.Enabled = false;
						grQuanLyThuMuc.Enabled = false;
						plChucNang.Enabled = false;
						btnPause.Enabled = true;
					}
					else if (dt == "stop")
					{
						btnPause.Text = Language.GetValue("Dừng Tương Tác");
						btnInteract.Enabled = true;
						grQuanLyThuMuc.Enabled = true;
						plChucNang.Enabled = true;
						btnPause.Enabled = false;
					}
				}
				catch (Exception)
				{
				}
			});
		}

		public void ClosePopup(Chrome chrome)
		{
			//Discarded unreachable code: IL_0755, IL_0762
			try
			{
				for (int i = 0; i < 3; i++)
				{
					switch (chrome.CheckExistElements(5.0, "[aria-label=\"Done\"]", "[aria-label=\"Xong\"]", "body > div > div > div > div > div > div > div > div > div > div > div > div:nth-child(5) > div", "[data-visualcompletion=\"ignore\"] [role=\"dialog\"] [role=\"button\"]", "[style=\"transform: translateX(0%) translateZ(1px);\"]>div>div:nth-child(2)>div:nth-child(3)>div", "[style=\"transform: translate(16px, 0px);\"] [role=\"button\"]", "[style=\"padding-top: 40px;\"]>div>div>[role=\"button\"]", "[style=\"transform: translateX(0%) translateZ(1px);\"] [role=\"button\"]", "[role=\"dialog\"]>div>div>div:nth-child(3)>div", "[role=\"dialog\"] [style*=\"transform: translate\"]>div>div>div [role=\"button\"]"))
					{
						default:
							return;
						case 1:
							chrome.ScrollSmooth("document.querySelector('[aria-label=\"Done\"]')");
							chrome.DelayTime(1.0);
							chrome.Click(4, "[aria-label=\"Done\"]");
							break;
						case 2:
							chrome.ScrollSmooth("document.querySelector('[aria-label=\"Xong\"]')");
							chrome.DelayTime(1.0);
							chrome.Click(4, "[aria-label=\"Xong\"]");
							break;
						case 3:
							chrome.ScrollSmooth("document.querySelector('body > div > div > div > div > div > div > div > div > div > div > div > div:nth-child(5) > div')");
							chrome.DelayTime(1.0);
							chrome.Click(4, "body > div > div > div > div > div > div > div > div > div > div > div > div:nth-child(5) > div");
							chrome.DelayTime(1.0);
							if (chrome.CheckExistElement("body > div > div > div > div > div > div > div > div > div > div:nth-child(2) > div > div > div:nth-child(3) > div", 10.0) == 1)
							{
								chrome.Click(4, "body > div > div > div > div > div > div > div > div > div > div:nth-child(2) > div > div > div:nth-child(3) > div");
								chrome.DelayTime(1.0);
								if (chrome.CheckExistElement("[data-visualcompletion=\"ignore\"] [role=\"dialog\"] [role=\"button\"]", 10.0) == 1)
								{
									chrome.Click(4, "[data-visualcompletion=\"ignore\"] [role=\"dialog\"] [role=\"button\"]");
									chrome.DelayTime(1.0);
								}
							}
							break;
						case 4:
							chrome.ExecuteScript("document.querySelector('[data-visualcompletion=\"ignore\"] [role=\"dialog\"] [role=\"button\"]').click()");
							chrome.DelayTime(1.0);
							break;
						case 5:
							chrome.ScrollSmooth("document.querySelector('[method=\"POST\"]>div>div:nth-child(2)>div>div>div:nth-child(2)>div:nth-child(3) [role=\"button\"]')");
							chrome.DelayTime(1.0);
							chrome.Click(4, "[method=\"POST\"]>div>div:nth-child(2)>div>div>div:nth-child(2)>div:nth-child(3) [role=\"button\"]");
							chrome.DelayTime(1.0);
							break;
						case 6:
							chrome.ScrollSmooth("document.querySelector('[style=\"transform: translate(16px, 0px);\"] [role=\"button\"]')");
							chrome.DelayTime(1.0);
							chrome.Click(4, "[style=\"transform: translate(16px, 0px);\"] [role=\"button\"]");
							chrome.DelayTime(1.0);
							break;
						case 7:
							chrome.Click(4, "[style=\"padding-top: 40px;\"]>div>div>[role=\"button\"]");
							chrome.DelayTime(1.0);
							break;
						case 8:
							chrome.ExecuteScript("document.querySelector('[style=\"transform: translateX(0%) translateZ(1px);\"] [role=\"button\"]').click()");
							chrome.DelayTime(1.0);
							break;
						case 9:
							chrome.ExecuteScript("document.querySelector('[role=\"dialog\"]>div>div>div:nth-child(3)>div').click()");
							chrome.DelayRandom(2, 4);
							break;
						case 10:
							chrome.ExecuteScript("document.querySelector('[role=\"dialog\"] [style*=\"transform: translate\"]>div>div>div [role=\"button\"]').click()");
							chrome.DelayTime(1.0);
							break;
					}
					chrome.DelayTime(1.0);
				}
			}
			catch
			{
			}
		}

		private void DtgvAcc_CellClick(object sender, DataGridViewCellEventArgs e)
		{
			//Discarded unreachable code: IL_00ad, IL_00ba
			if (e.ColumnIndex == 0)
			{
				try
				{
					dtgvAcc.CurrentRow.Cells["cChose"].Value = !Convert.ToBoolean(dtgvAcc.CurrentRow.Cells["cChose"].Value);
					CountCheckedAccount();
				}
				catch
				{
				}
			}
		}

		private void DtgvAcc_KeyDown(object sender, KeyEventArgs e)
		{
			if (e.KeyValue == 32)
			{
				ChoseRowInDatagrid("ToggleCheck");
			}
		}

		private void OpenFormUpdate(string type)
		{
			//Discarded unreachable code: IL_00ef, IL_00fc
			try
			{
				List<string> list = new List<string>();
				for (int i = 0; i < dtgvAcc.Rows.Count; i++)
				{
					if (Convert.ToBoolean(GetCellAccount(i, "cChose")))
					{
						list.Add(GetCellAccount(i, "cId"));
					}
				}
				if (list.Count == 0)
				{
					MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lo\u0300ng cho\u0323n ta\u0300i khoa\u0309n câ\u0300n câ\u0323p nhâ\u0323t!"), 3);
				}
				else
				{
					MCommon.Common.ShowForm(new fupdateData(this, type));
				}
			}
			catch
			{
			}
		}

		private void mậtKhẩuToolStripMenuItem1_Click(object sender, EventArgs e)
		{
			OpenFormUpdate("Password");
		}

		private void NhậpDữLiệuToolStripMenuItem2_Click(object sender, EventArgs e)
		{
			OpenFormUpdate("Token");
		}

		private void NhậpDữLiệuToolStripMenuItem1_Click(object sender, EventArgs e)
		{
			OpenFormUpdate("Cookie");
		}

		private void mailKhôiPhụcToolStripMenuItem_Click(object sender, EventArgs e)
		{
			OpenFormUpdate("Mail|pass");
		}

		private void mã2FAToolStripMenuItem_Click(object sender, EventArgs e)
		{
			OpenFormUpdate("2FA");
		}

		private void tokenEAAAAZToolStripMenuItem_Click(object sender, EventArgs e)
		{
			TuLayThongTin(0);
		}

		private void TokenBussinessToolStripMenuItem_Click(object sender, EventArgs e)
		{
			TuLayThongTin(1);
		}

		private void TuLayThongTin(int type)
		{
			LoadSetting();
			int iThread = 0;
			int maxThread = setting_general.GetValueInt("nudHideThread", 10);
			isStop = false;
			bool isChangeIPSuccess = false;
			int curChangeIp = 0;
			new Thread((ThreadStart)delegate
			{
				cControl("start");
				int num = type;
				int num2 = num;
				if (num2 != 0)
				{
					if (num2 == 1)
					{
						int num3 = 0;
						while (num3 < dtgvAcc.Rows.Count && !isStop)
						{
							if (!Convert.ToBoolean(dtgvAcc.Rows[num3].Cells["cChose"].Value))
							{
								num3++;
								continue;
							}
							if (iThread < maxThread)
							{
								Interlocked.Increment(ref iThread);
								int row2 = num3++;
								new Thread((ThreadStart)delegate
								{
									SetStatusAccount(row2, Language.GetValue("Đang kiểm tra..."));
									string statusDataGridView3 = CommonCSharp.GetStatusDataGridView(dtgvAcc, row2, "cId");
									string statusDataGridView4 = CommonCSharp.GetStatusDataGridView(dtgvAcc, row2, "cCookies");
									string text3 = GetCellAccount(row2, "cUseragent");
									string text4 = "";
									int typeProxy2 = 0;
									if (setting_general.GetValueInt("ip_iTypeChangeIp") == 9)
									{
										text4 = GetCellAccount(row2, "cProxy");
										typeProxy2 = (text4.EndsWith("*1") ? 1 : 0);
										if (text4.EndsWith("*0") || text4.EndsWith("*1"))
										{
											text4 = text4.Substring(0, text4.Length - 2);
										}
									}
									if (text3 == "" || text4.Split(':').Length == 4)
									{
										text3 = Base.useragentDefault;
									}
									if (statusDataGridView4 == "")
									{
										SetStatusAccount(row2, Language.GetValue("Cookie trống!"));
									}
									else
									{
										string tokenEAAG = CommonRequest.GetTokenEAAG(statusDataGridView4, text3, text4, typeProxy2);
										if (tokenEAAG == "-1")
										{
											SetStatusAccount(row2, "Cookie die!");
										}
										else
										{
											CommonSQL.UpdateFieldToAccount(statusDataGridView3, "token", tokenEAAG);
											SetCellAccount(row2, "cToken", tokenEAAG);
											SetStatusAccount(row2, Language.GetValue("Lấy token thành công!"));
										}
									}
								}).Start();
								continue;
							}
							if (Convert.ToInt32((setting_general.GetValue("ip_iTypeChangeIp") == "") ? "0" : setting_general.GetValue("ip_iTypeChangeIp")) == 0 || Convert.ToInt32((setting_general.GetValue("ip_iTypeChangeIp") == "") ? "0" : setting_general.GetValue("ip_iTypeChangeIp")) == 7)
							{
								MCommon.Common.DelayTime(1.0);
								continue;
							}
							while (iThread > 0)
							{
								MCommon.Common.DelayTime(1.0);
							}
							if (isStop)
							{
								break;
							}
							Interlocked.Increment(ref curChangeIp);
							if (curChangeIp < Convert.ToInt32((setting_general.GetValue("ip_nudChangeIpCount") == "") ? "1" : setting_general.GetValue("ip_nudChangeIpCount")))
							{
								continue;
							}
							for (int i = 0; i < 3; i++)
							{
								isChangeIPSuccess = MCommon.Common.ChangeIP(setting_general.GetValueInt("ip_iTypeChangeIp"), setting_general.GetValueInt("typeDcom"), setting_general.GetValue("ip_txtProfileNameDcom"), setting_general.GetValue("txtUrlHilink"), setting_general.GetValueInt("ip_cbbHostpot"), setting_general.GetValue("ip_txtNordVPN"));
								if (isChangeIPSuccess)
								{
									break;
								}
							}
							if (isChangeIPSuccess)
							{
								curChangeIp = 0;
								continue;
							}
							goto IL_0632;
						}
					}
				}
				else
				{
					int num4 = 0;
					while (num4 < dtgvAcc.Rows.Count && !isStop)
					{
						if (!Convert.ToBoolean(dtgvAcc.Rows[num4].Cells["cChose"].Value))
						{
							num4++;
							continue;
						}
						if (iThread < maxThread)
						{
							Interlocked.Increment(ref iThread);
							int row = num4++;
							new Thread((ThreadStart)delegate
							{
								SetStatusAccount(row, Language.GetValue("Đang kiểm tra..."));
								string statusDataGridView = CommonCSharp.GetStatusDataGridView(dtgvAcc, row, "cId");
								string statusDataGridView2 = CommonCSharp.GetStatusDataGridView(dtgvAcc, row, "cCookies");
								string text = GetCellAccount(row, "cUseragent");
								string text2 = "";
								int typeProxy = 0;
								if (setting_general.GetValueInt("ip_iTypeChangeIp") == 9)
								{
									text2 = GetCellAccount(row, "cProxy");
									typeProxy = (text2.EndsWith("*1") ? 1 : 0);
									if (text2.EndsWith("*0") || text2.EndsWith("*1"))
									{
										text2 = text2.Substring(0, text2.Length - 2);
									}
								}
								if (text == "" || text2.Split(':').Length == 4)
								{
									text = Base.useragentDefault;
								}
								if (statusDataGridView2 == "")
								{
									SetStatusAccount(row, Language.GetValue("Cookie trống!"));
								}
								else
								{
									string tokenEAAAAZ = CommonRequest.GetTokenEAAAAZ(statusDataGridView2, text, text2, typeProxy);
									if (tokenEAAAAZ == "-1")
									{
										SetStatusAccount(row, "Cookie die!");
									}
									else
									{
										CommonSQL.UpdateFieldToAccount(statusDataGridView, "token", tokenEAAAAZ);
										SetCellAccount(row, "cToken", tokenEAAAAZ);
										SetStatusAccount(row, Language.GetValue("Lấy token thành công!"));
									}
								}
								Interlocked.Decrement(ref iThread);
							}).Start();
							continue;
						}
						if (setting_general.GetValueInt("ip_iTypeChangeIp") == 0 || setting_general.GetValueInt("ip_iTypeChangeIp") == 7 || setting_general.GetValueInt("ip_iTypeChangeIp") == 8 || setting_general.GetValueInt("ip_iTypeChangeIp") == 9 || setting_general.GetValueInt("ip_iTypeChangeIp") == 10 || setting_general.GetValueInt("ip_iTypeChangeIp") == 11 || setting_general.GetValueInt("ip_iTypeChangeIp") == 12)
						{
							MCommon.Common.DelayTime(1.0);
							continue;
						}
						while (iThread > 0)
						{
							MCommon.Common.DelayTime(1.0);
						}
						if (isStop)
						{
							break;
						}
						Interlocked.Increment(ref curChangeIp);
						if (curChangeIp < Convert.ToInt32(setting_general.GetValueInt("ip_nudChangeIpCount", 1)))
						{
							continue;
						}
						for (int j = 0; j < 3; j++)
						{
							isChangeIPSuccess = MCommon.Common.ChangeIP(setting_general.GetValueInt("ip_iTypeChangeIp"), setting_general.GetValueInt("typeDcom"), setting_general.GetValue("ip_txtProfileNameDcom"), setting_general.GetValue("txtUrlHilink"), setting_general.GetValueInt("ip_cbbHostpot"), setting_general.GetValue("ip_txtNordVPN"));
							if (isChangeIPSuccess)
							{
								break;
							}
						}
						if (isChangeIPSuccess)
						{
							curChangeIp = 0;
							continue;
						}
						goto IL_02f0;
					}
				}
				int tickCount = Environment.TickCount;
				while (iThread > 0 && Environment.TickCount - tickCount <= 60000)
				{
					MCommon.Common.DelayTime(1.0);
				}
				goto IL_06d6;
			IL_02f0:
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Không thê\u0309 đô\u0309i ip!"), 3);
				goto IL_06d6;
			IL_06d6:
				cControl("stop");
				return;
			IL_0632:
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Không thê\u0309 đô\u0309i ip!"), 3);
				goto IL_06d6;
			}).Start();
		}

		private void BtnPause_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_0059, IL_0066
			try
			{
				isStop = true;
				btnPause.Enabled = false;
				btnPause.Text = Language.GetValue("Đang dư\u0300ng...");
			}
			catch
			{
			}
		}

		private void TảiLạiDanhSáchToolStripMenuItem_Click(object sender, EventArgs e)
		{
			BtnLoadAcc_Click(null, null);
		}

		private void BtnDeleteFile_Click(object sender, EventArgs e)
		{
			int selectedIndex = cbbThuMuc.SelectedIndex;
			if (MessageBoxHelper.ShowMessageBoxWithQuestion(string.Format(Language.GetValue("Bạn có thực sự muốn xóa thư mục [{0}] không?"), cbbThuMuc.Text)) == DialogResult.Yes)
			{
				if (CommonSQL.DeleteFileToDatabase(cbbThuMuc.SelectedValue.ToString()))
				{
					MessageBoxHelper.ShowMessageBox(string.Format(Language.GetValue("Xoá thành công thư mục [{0}] !"), cbbThuMuc.Text));
					LoadCbbThuMuc();
					cbbThuMuc.SelectedIndex = selectedIndex - 1;
				}
				else
				{
					MessageBoxHelper.ShowMessageBox(string.Format(Language.GetValue("Không thể xóa thư mục [{0}] !"), cbbThuMuc.Text), 2);
				}
			}
		}

		private void CbbThuMuc_SelectedIndexChanged(object sender, EventArgs e)
		{
			if (!isExcute_CbbThuMuc_SelectedIndexChanged || cbbThuMuc.SelectedValue == null || !StringHelper.CheckStringIsNumber(cbbThuMuc.SelectedValue.ToString()) || (cbbThuMuc.SelectedValue.ToString() != "999999" && indexCbbThuMucOld == cbbThuMuc.SelectedIndex))
			{
				return;
			}
			string text = cbbThuMuc.SelectedValue.ToString();
			string text2 = text;
			if (!(text2 == "-1"))
			{
				if (text2 == "999999")
				{
					MCommon.Common.ShowForm(new fChonThuMuc());
					if (!fChonThuMuc.isAdd || fChonThuMuc.lstChooseIdFiles == null || fChonThuMuc.lstChooseIdFiles.Count == 0)
					{
						isExcute_CbbThuMuc_SelectedIndexChanged = false;
						cbbThuMuc.SelectedIndex = ((indexCbbThuMucOld != -1) ? indexCbbThuMucOld : 0);
						isExcute_CbbThuMuc_SelectedIndexChanged = true;
					}
					else
					{
						LoadCbbTinhTrang(fChonThuMuc.lstChooseIdFiles);
					}
				}
				else
				{
					LoadCbbTinhTrang(GetIdFile());
				}
			}
			else
			{
				LoadCbbTinhTrang();
			}
			indexCbbThuMucOld = cbbThuMuc.SelectedIndex;
			if (cbbThuMuc.SelectedValue != null)
			{
				string text3 = cbbThuMuc.SelectedValue.ToString();
				if (text3 == "-1" || text3 == "999999")
				{
					btnDeleteFile.BackColor = Color.Gray;
					btnDeleteFile.Enabled = false;
					btnEditFile.BackColor = Color.Gray;
					btnEditFile.Enabled = false;

				}
				else
				{
					btnDeleteFile.BackColor = Color.White;
					btnDeleteFile.Enabled = true;
					btnEditFile.BackColor = Color.White;
					btnEditFile.Enabled = true;
				}
			}
		}

		private void MailPassMailToolStripMenuItem_Click(object sender, EventArgs e)
		{
			CopyRowDatagrid("mail|passmail");
		}

		private void UidPassTokenCookieMailPassMailToolStripMenuItem_Click(object sender, EventArgs e)
		{
			CopyRowDatagrid("uid|pass|token|cookie|mail|passmail");
		}

		private void CountTotalAccount()
		{
			//Discarded unreachable code: IL_0036, IL_0043
			try
			{
				lblCountTotal.Text = dtgvAcc.Rows.Count.ToString();
			}
			catch
			{
			}
		}

		private void CountCheckedAccount(int count = -1)
		{
			if (count == -1)
			{
				count = 0;
				for (int i = 0; i < dtgvAcc.Rows.Count; i++)
				{
					if (Convert.ToBoolean(dtgvAcc.Rows[i].Cells["cChose"].Value))
					{
						count++;
					}
				}
			}
			lblCountSelect.Text = count.ToString();
		}

		private void TạoProfileToolStripMenuItem_Click(object sender, EventArgs e)
		{
			MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lo\u0300ng sư\u0309 du\u0323ng chư\u0301c năng Ta\u0323o profile khi Cha\u0323y tương ta\u0301c đê\u0309 gia\u0309m tô\u0301i đa ty\u0309 lê\u0323 checkpoint!"), 3);
		}

		private void KiemTraTaiKhoan(int type)
		{
			LoadSetting();
			int iThread = 0;
			int maxThread = setting_general.GetValueInt("nudHideThread", 10);
			string tokenTrungGian = setting_general.GetValue("token");
			isStop = false;
			new Thread((ThreadStart)delegate
			{
				cControl("start");
				switch (type)
				{
					case 0:
						{
							int num4 = 0;
							while (num4 < dtgvAcc.Rows.Count && !isStop)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num4].Cells["cChose"].Value))
								{
									if (iThread < maxThread)
									{
										Interlocked.Increment(ref iThread);
										int row3 = num4++;
										new Thread((ThreadStart)delegate
										{
											SetStatusAccount(row3, Language.GetValue("Đang kiểm tra..."));
											CheckMyWall(row3, tokenTrungGian);
											Interlocked.Decrement(ref iThread);
										}).Start();
									}
									else
									{
										Application.DoEvents();
										Thread.Sleep(200);
									}
								}
								else
								{
									num4++;
								}
							}
							break;
						}
					case 1:
						{
							int num6 = 0;
							while (num6 < dtgvAcc.Rows.Count && !isStop)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num6].Cells["cChose"].Value))
								{
									if (iThread < maxThread)
									{
										Interlocked.Increment(ref iThread);
										int row = num6++;
										new Thread((ThreadStart)delegate
										{
											SetStatusAccount(row, Language.GetValue("Đang kiểm tra..."));
											CheckMyToken(row);
											Interlocked.Decrement(ref iThread);
										}).Start();
									}
									else
									{
										Application.DoEvents();
										Thread.Sleep(200);
									}
								}
								else
								{
									num6++;
								}
							}
							break;
						}
					case 2:
						{
							int num2 = 0;
							while (num2 < dtgvAcc.Rows.Count && !isStop)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num2].Cells["cChose"].Value))
								{
									if (iThread < maxThread)
									{
										Interlocked.Increment(ref iThread);
										int row5 = num2++;
										new Thread((ThreadStart)delegate
										{
											SetStatusAccount(row5, Language.GetValue("Đang kiểm tra..."));
											CheckMyCookie(row5);
											Interlocked.Decrement(ref iThread);
										}).Start();
									}
									else
									{
										Application.DoEvents();
										Thread.Sleep(200);
									}
								}
								else
								{
									num2++;
								}
							}
							break;
						}
					case 3:
						{
							int num5 = 0;
							while (num5 < dtgvAcc.Rows.Count && !isStop)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num5].Cells["cChose"].Value))
								{
									if (iThread < maxThread)
									{
										Interlocked.Increment(ref iThread);
										int row2 = num5++;
										new Thread((ThreadStart)delegate
										{
											SetStatusAccount(row2, Language.GetValue("Đang kiểm tra..."));
											CheckDangCheckpoint(row2);
											Interlocked.Decrement(ref iThread);
										}).Start();
									}
									else
									{
										Application.DoEvents();
										Thread.Sleep(200);
									}
								}
								else
								{
									num5++;
								}
							}
							break;
						}
					case 4:
						{
							int num3 = 0;
							while (num3 < dtgvAcc.Rows.Count && !isStop)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num3].Cells["cChose"].Value))
								{
									if (iThread < maxThread)
									{
										Interlocked.Increment(ref iThread);
										int row4 = num3++;
										new Thread((ThreadStart)delegate
										{
											SetStatusAccount(row4, Language.GetValue("Đang kiểm tra..."));
											CheckAccountMail(row4);
											Interlocked.Decrement(ref iThread);
										}).Start();
									}
									else
									{
										Application.DoEvents();
										Thread.Sleep(200);
									}
								}
								else
								{
									num3++;
								}
							}
							break;
						}
					case 5:
						{
							int num = 0;
							while (num < dtgvAcc.Rows.Count && !isStop)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
								{
									if (iThread < maxThread)
									{
										Interlocked.Increment(ref iThread);
										int row6 = num++;
										new Thread((ThreadStart)delegate
										{
											SetStatusAccount(row6, Language.GetValue("Đang kiểm tra..."));
											CheckInfoUid(row6);
											Interlocked.Decrement(ref iThread);
										}).Start();
									}
									else
									{
										Application.DoEvents();
										Thread.Sleep(200);
									}
								}
								else
								{
									num++;
								}
							}
							break;
						}
				}
				int tickCount = Environment.TickCount;
				while (iThread > 0 && Environment.TickCount - tickCount <= 60000)
				{
					MCommon.Common.DelayTime(1.0);
				}
				cControl("stop");
			}).Start();
		}

		private void CheckInfoUid(int row)
		{
			//Discarded unreachable code: IL_0475, IL_04ae
			try
			{
				string cellAccount = GetCellAccount(row, "cId");
				string cellAccount2 = GetCellAccount(row, "cUid");
				if (!CheckIsUidFacebook(cellAccount2))
				{
					SetStatusAccount(row, Language.GetValue("Uid không hợp lệ!"));
					return;
				}
				string text = "";
				string text2 = CommonRequest.CheckInfoUsingUid(cellAccount2);
				if (text2.StartsWith("0|"))
				{
					if (CommonRequest.CheckLiveWall(cellAccount2).StartsWith("0|"))
					{
						SetStatusAccount(row, Language.GetValue("Tài khoản Die!"));
						SetInfoAccount(cellAccount, row, "Die");
					}
					else
					{
						SetStatusAccount(row, Language.GetValue("Không check đươ\u0323c!"));
					}
				}
				else if (text2.StartsWith("1|"))
				{
					string[] array = text2.Split('|');
					string text3 = array[2];
					string text4 = array[3].ToLower();
					string text5 = array[4];
					string text6 = array[5];
					string text7 = array[6];
					CommonSQL.UpdateMultiFieldToAccount(cellAccount, "name|gender|friends|groups", text3 + "|" + text4 + "|" + text6 + "|" + text7);
					SetCellAccount(row, "cName", text3);
					SetCellAccount(row, "cGender", text4);
					SetCellAccount(row, "cFriend", text6);
					SetCellAccount(row, "cGroup", text7);
					if (text5 != "")
					{
						SetCellAccount(row, "cBirthday", text5);
						CommonSQL.UpdateFieldToAccount(cellAccount, "birthday", text5);
					}
					SetInfoAccount(cellAccount, row, "Live");
					text = Language.GetValue("Câ\u0323p nhâ\u0323t thông tin tha\u0300nh công!");
					SetStatusAccount(row, text);
				}
				else
				{
					SetStatusAccount(row, Language.GetValue("Không check đươ\u0323c!"));
				}
			}
			catch
			{
				SetStatusAccount(row, Language.GetValue("Không check đươ\u0323c!"));
			}
		}

		private void CheckAccountMail(int row)
		{
			//Discarded unreachable code: IL_0328, IL_036f
			try
			{
				string text = "";
				string text2 = "";
				text = dtgvAcc.Rows[row].Cells["cEmail"].Value.ToString();
				text2 = dtgvAcc.Rows[row].Cells["cPassMail"].Value.ToString();
				if (text == "" || text2 == "")
				{
					SetStatusAccount(row, Language.GetValue("Không tìm thấy mail!"));
				}
				else if (text.Contains("@hotmail.") || text.Contains("@outlook."))
				{
					string text3 = MCommon.Common.CheckAccountHotmail(text, text2);
					if (text3.Equals("1"))
					{
						SetStatusAccount(row, Language.GetValue("Tài khoản mail: live!"));
					}
					else
					{
						SetStatusAccount(row, Language.GetValue("Tài khoản mail: die!"));
					}
				}
				else if (text.EndsWith("@yandex.com"))
				{
					string text4 = MCommon.Common.CheckAccountEmail(text, text2, "imap.yandex.com");
					if (text4.Equals("1"))
					{
						SetStatusAccount(row, Language.GetValue("Tài khoản mail: live!"));
					}
					else
					{
						SetStatusAccount(row, Language.GetValue("Tài khoản mail: die!"));
					}
				}
				else
				{
					SetStatusAccount(row, Language.GetValue("Mail chưa hỗ trợ!"));
				}
			}
			catch (Exception ex)
			{
				MessageBox.Show(ex.ToString());
				SetStatusAccount(row, Language.GetValue("Lỗi!"));
			}
		}

		private void CheckMyWall(int row, string tokenTg)
		{
			//Discarded unreachable code: IL_01f0, IL_0229
			try
			{
				string cellAccount = GetCellAccount(row, "cId");
				string cellAccount2 = GetCellAccount(row, "cUid");
				if (!CheckIsUidFacebook(cellAccount2))
				{
					SetStatusAccount(row, Language.GetValue("Uid không hợp lệ!"));
					return;
				}
				string text = "";
				string text2 = "";
				string text3 = CommonRequest.CheckLiveWall(cellAccount2);
				if (text3.StartsWith("0|"))
				{
					text = "Die";
					text2 = "Wall die";
				}
				else if (text3.StartsWith("1|"))
				{
					text = "Live";
					text2 = "Wall live";
				}
				else
				{
					text2 = Language.GetValue("Không check được!");
				}
				SetStatusAccount(row, text2);
				if (text != "")
				{
					SetInfoAccount(cellAccount, row, text);
				}
			}
			catch
			{
				SetStatusAccount(row, Language.GetValue("Không check đươ\u0323c!"));
			}
		}

		private void CheckMyToken(int row)
		{
			//Discarded unreachable code: IL_0369, IL_03a2
			try
			{
				string text = "";
				string cellAccount = GetCellAccount(row, "cId");
				string cellAccount2 = GetCellAccount(row, "cCookies");
				string cellAccount3 = GetCellAccount(row, "cToken");
				if (cellAccount3.Trim() == "")
				{
					SetStatusAccount(row, Language.GetValue("Token trô\u0301ng!"));
					return;
				}
				string text2 = GetCellAccount(row, "cUseragent");
				string text3 = "";
				int typeProxy = 0;
				if (setting_general.GetValueInt("ip_iTypeChangeIp") == 9)
				{
					text3 = GetCellAccount(row, "cProxy");
					typeProxy = (text3.EndsWith("*1") ? 1 : 0);
					if (text3.EndsWith("*0") || text3.EndsWith("*1"))
					{
						text3 = text3.Substring(0, text3.Length - 2);
					}
				}
				if (text2 == "" || text3.Split(':').Length == 4)
				{
					text2 = Base.useragentDefault;
				}
				string text4 = "";
				if (!CommonRequest.CheckLiveToken(cellAccount2, cellAccount3, text2, text3, typeProxy))
				{
					text4 = "Token die";
				}
				else
				{
					text = "Live";
					text4 = "Token live";
				}
				SetStatusAccount(row, text4);
				if (text != "")
				{
					SetInfoAccount(cellAccount, row, text);
				}
			}
			catch
			{
				SetStatusAccount(row, Language.GetValue("Không check đươ\u0323c!"));
			}
		}

		private void CheckMyCookie(int row)
		{
			//Discarded unreachable code: IL_0357, IL_0390
			try
			{
				string text = "";
				string cellAccount = GetCellAccount(row, "cId");
				string cellAccount2 = GetCellAccount(row, "cCookies");
				if (cellAccount2.Trim() == "")
				{
					SetStatusAccount(row, Language.GetValue("Cookie trô\u0301ng!"));
					return;
				}
				string text2 = GetCellAccount(row, "cUseragent");
				string text3 = "";
				int typeProxy = 0;
				if (setting_general.GetValueInt("ip_iTypeChangeIp") == 9)
				{
					text3 = GetCellAccount(row, "cProxy");
					typeProxy = (text3.EndsWith("*1") ? 1 : 0);
					if (text3.EndsWith("*0") || text3.EndsWith("*1"))
					{
						text3 = text3.Substring(0, text3.Length - 2);
					}
				}
				if (text2 == "" || text3.Split(':').Length == 4)
				{
					text2 = Base.useragentDefault;
				}
				string text4 = "";
				if (!CommonRequest.CheckLiveCookie(cellAccount2, text2, text3, typeProxy).StartsWith("1|"))
				{
					text4 = "Cookie die";
				}
				else
				{
					text = "Live";
					text4 = "Cookie live";
				}
				SetStatusAccount(row, text4);
				if (text != "")
				{
					SetInfoAccount(cellAccount, row, text);
				}
			}
			catch
			{
				SetStatusAccount(row, Language.GetValue("Không check đươ\u0323c!"));
			}
		}

		private void CheckDangCheckpoint(int row)
		{
			string id = dtgvAcc.Rows[row].Cells["cId"].Value.ToString();
			string email = dtgvAcc.Rows[row].Cells["cUid"].Value.ToString();
			string pass = dtgvAcc.Rows[row].Cells["cPassword"].Value.ToString();
			string cellAccount = GetCellAccount(row, "cUseragent");
			string text = "";
			int typeProxy = 0;
			if (setting_general.GetValueInt("ip_iTypeChangeIp") == 9)
			{
				text = GetCellAccount(row, "cProxy");
				typeProxy = (text.EndsWith("*1") ? 1 : 0);
				if (text.EndsWith("*0") || text.EndsWith("*1"))
				{
					text = text.Substring(0, text.Length - 2);
				}
			}
			if (cellAccount == "" || text.Split(':').Length == 4)
			{
				cellAccount = Base.useragentDefault;
			}
			string text2 = "";
			string text3 = "";
			string text4 = "";
			string text5 = CommonRequest.CheckFacebookAccount(email, pass, "", text, typeProxy);
			switch (text5.Split('|')[0])
			{
				case "0":
				case "4":
					text3 = Language.GetValue("Không check đươ\u0323c!");
					break;
				case "5":
					text3 = Language.GetValue("Không check đươ\u0323c (Co\u0301 2fa)!");
					break;
				case "1":
					text4 = text5.Split('|')[1];
					text2 = "Live";
					break;
				case "2":
					text2 = ((!(text5.Split('|')[1].Trim() != "")) ? Language.GetValue("Checkpoint") : ("Checkpoint: " + text5.Split('|')[1]));
					break;
				case "3":
					text2 = "Changed pass";
					break;
			}
			if (text3 == "")
			{
				text3 = Language.GetValue("Đa\u0303 check xong!");
			}
			if (text4 != "")
			{
				SetCellAccount(row, "cCookies", text4);
				CommonSQL.UpdateFieldToAccount(id, "cookie1", text4);
			}
			if (text2 != "")
			{
				SetInfoAccount(id, row, text2);
				CommonSQL.UpdateFieldToAccount(id, "info", text2);
			}
			SetStatusAccount(row, text3);
		}

		private void KiểmTraWallToolStripMenuItem_Click(object sender, EventArgs e)
		{
			KiemTraTaiKhoan(0);
		}

		private void KiểmTraTokenToolStripMenuItem_Click(object sender, EventArgs e)
		{
			if (MessageBoxHelper.ShowMessageBoxWithQuestion(Language.GetValue("Tính năng này có thể khiến tài khoản bị khóa, bạn vẫn muốn sử dụng?")) == DialogResult.Yes)
			{
				KiemTraTaiKhoan(1);
			}
		}

		private void KiểmTraCookieToolStripMenuItem_Click(object sender, EventArgs e)
		{
			KiemTraTaiKhoan(2);
		}

		private void KiểmTraTàiKhoảnToolStripMenuItem_Click(object sender, EventArgs e)
		{
			KiemTraTaiKhoan(3);
		}

		private void MailToolStripMenuItem_Click_1(object sender, EventArgs e)
		{
			CopyRowDatagrid("mail");
		}

		private void BtnSearch_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_019c, IL_01b0, IL_02c0, IL_02ce
			try
			{
				if (cbbSearch.SelectedIndex == -1)
				{
					MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng chọn kiểu tìm kiếm!"), 3);
					return;
				}
				string columnName = cbbSearch.SelectedValue.ToString();
				string text = txbSearch.Text.Trim();
				if (text == "")
				{
					MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng nhập nội dung tìm kiếm!"), 3);
					return;
				}
				List<int> list = new List<int>();
				text = MCommon.Common.ConvertToUnSign(text.ToLower());
				for (int i = 0; i < dtgvAcc.RowCount; i++)
				{
					string text2 = dtgvAcc.Rows[i].Cells[columnName].Value.ToString();
					text2 = MCommon.Common.ConvertToUnSign(text2.ToLower());
					text = MCommon.Common.ConvertToUnSign(text.ToLower());
					if (text2.Contains(text))
					{
						list.Add(i);
					}
				}
				int index = 0;
				int num = -1;
				try
				{
					num = dtgvAcc.CurrentRow.Index;
				}
				catch
				{
					num = -1;
				}
				if (list.Count <= 0)
				{
					return;
				}
				if (num >= list[list.Count - 1])
				{
					index = 0;
				}
				else
				{
					for (int j = 0; j < list.Count; j++)
					{
						if (num < list[j])
						{
							index = j;
							break;
						}
					}
				}
				int index2 = list[index];
				dtgvAcc.CurrentCell = dtgvAcc.Rows[index2].Cells[columnName];
				dtgvAcc.ClearSelection();
				dtgvAcc.Rows[index2].Selected = true;
			}
			catch (Exception)
			{
			}
		}

		private void UidPassTokenCookieMailPassMail2faToolStripMenuItem_Click(object sender, EventArgs e)
		{
			CopyRowDatagrid("uid|pass|token|cookie|mail|passmail|fa2");
		}

		private void ToolStripStatusLabel9_Click(object sender, EventArgs e)
		{
			Hide();
			Settings.Default.UserName = "";
			Settings.Default.PassWord = "";
			Settings.Default.Save();
		}

		private void UpdateSttOnDatatable()
		{
			for (int i = 0; i < dtgvAcc.RowCount; i++)
			{
				SetCellAccount(i, "cSTT", i + 1);
			}
		}

		private void BtnShare_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_0410, IL_041d, IL_06ec, IL_071e
			try
			{
				MCommon.Common.CreateFolder("maxshare");
				if (File.Exists(Application.StartupPath + "\\maxshare\\MaxShare.exe"))
				{
					CommonIniFile commonIniFile = new CommonIniFile(Application.StartupPath + "\\maxshare\\update.ini");
					string text = commonIniFile.Read("Version", "Infor");
					double num = Convert.ToDouble(text.Replace(".", "").Insert(1, "."));
					if (num < 3.66)
					{
						MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng cập nhật phiên bản mới để sử dụng!"));
						Process.Start(Application.StartupPath + "\\maxshare\\AutoUpdate.exe");
						return;
					}
					List<string> list = new List<string>();
					for (int i = 0; i < dtgvAcc.RowCount; i++)
					{
						if (Convert.ToBoolean(dtgvAcc.Rows[i].Cells["cChose"].Value))
						{
							DataGridViewRow dataGridViewRow = dtgvAcc.Rows[i];
							try
							{
								list.Add("True||" + dataGridViewRow.Cells["cUid"].Value.ToString() + "|" + dataGridViewRow.Cells["cPassword"].Value.ToString() + "|" + dataGridViewRow.Cells["cFa2"].Value.ToString() + "|" + dataGridViewRow.Cells["cToken"].Value.ToString() + "|" + dataGridViewRow.Cells["cCookies"].Value.ToString() + "|" + dataGridViewRow.Cells["cProxy"].Value.ToString() + "|" + dataGridViewRow.Cells["cUseragent"].Value.ToString());
							}
							catch
							{
							}
						}
					}
					File.WriteAllLines("maxshare\\configsshare\\data.txt", list);
					Process process = new Process();
					process.StartInfo.FileName = Application.StartupPath + "\\maxshare\\MaxShare.exe";
					process.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
					setting_general = new JSON_Settings("configGeneral");
					string text2 = setting_general.GetValue("txbPathProfile");
					if (!text2.Contains('\\'))
					{
						text2 = Application.StartupPath + "\\" + ((setting_general.GetValue("txbPathProfile") == "") ? "profiles" : setting_general.GetValue("txbPathProfile"));
					}
					process.StartInfo.Arguments = Base.checkLisence + " \"" + text2 + "\" " + Base.codeKeyRandom;
					process.Start();
				}
				else if (MessageBoxHelper.ShowMessageBoxWithQuestion(Language.GetValue("Chư\u0301c năng na\u0300y hiê\u0323n chưa co\u0301 să\u0303n, ba\u0323n co\u0301 muô\u0301n ta\u0309i xuô\u0301ng?")) == DialogResult.Yes)
				{
					Base.softname = "maxshare";
					MCommon.Common.ShowForm(new frm_progress());
					BtnShare_Click(null, null);
				}
			}
			catch (Exception)
			{
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Không thê\u0309 sư\u0309 du\u0323ng chư\u0301c năng na\u0300y!"), 2);
			}
		}

		private void BtnPost_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_0410, IL_041d, IL_06ec, IL_071f
			try
			{
				MCommon.Common.CreateFolder("maxpost");
				if (File.Exists(Application.StartupPath + "\\maxpost\\MaxPost.exe"))
				{
					CommonIniFile commonIniFile = new CommonIniFile(Application.StartupPath + "\\maxpost\\update.ini");
					string text = commonIniFile.Read("Version", "maxpost");
					double num = Convert.ToDouble(text.Replace(".", "").Insert(1, "."));
					if (num < 3.66)
					{
						MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng cập nhật phiên bản mới để sử dụng!"));
						Process.Start(Application.StartupPath + "\\maxpost\\AutoUpdate.exe");
						return;
					}
					List<string> list = new List<string>();
					for (int i = 0; i < dtgvAcc.RowCount; i++)
					{
						if (Convert.ToBoolean(dtgvAcc.Rows[i].Cells["cChose"].Value))
						{
							DataGridViewRow dataGridViewRow = dtgvAcc.Rows[i];
							try
							{
								list.Add("True||" + dataGridViewRow.Cells["cUid"].Value.ToString() + "|" + dataGridViewRow.Cells["cPassword"].Value.ToString() + "|" + dataGridViewRow.Cells["cFa2"].Value.ToString() + "|" + dataGridViewRow.Cells["cToken"].Value.ToString() + "|" + dataGridViewRow.Cells["cCookies"].Value.ToString() + "|" + dataGridViewRow.Cells["cProxy"].Value.ToString() + "|" + dataGridViewRow.Cells["cUseragent"].Value.ToString());
							}
							catch
							{
							}
						}
					}
					File.WriteAllLines("maxpost\\configspost\\data.txt", list);
					Process process = new Process();
					process.StartInfo.FileName = Application.StartupPath + "\\maxpost\\MaxPost.exe";
					process.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
					setting_general = new JSON_Settings("configGeneral");
					string text2 = setting_general.GetValue("txbPathProfile");
					if (!text2.Contains('\\'))
					{
						text2 = Application.StartupPath + "\\" + ((setting_general.GetValue("txbPathProfile") == "") ? "profiles" : setting_general.GetValue("txbPathProfile"));
					}
					process.StartInfo.Arguments = Base.checkLisence + " \"" + text2 + "\" " + Base.codeKeyRandom;
					process.Start();
				}
				else if (MessageBoxHelper.ShowMessageBoxWithQuestion(Language.GetValue("Chư\u0301c năng na\u0300y hiê\u0323n chưa co\u0301 să\u0303n, ba\u0323n co\u0301 muô\u0301n ta\u0309i xuô\u0301ng?")) == DialogResult.Yes)
				{
					Base.softname = "maxpost";
					MCommon.Common.ShowForm(new frm_progress());
					BtnPost_Click(null, null);
				}
			}
			catch (Exception)
			{
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Không thê\u0309 sư\u0309 du\u0323ng chư\u0301c năng na\u0300y!"), 2);
			}
		}

		private void BtnViewLivestream_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_0410, IL_041d, IL_06ec, IL_071e
			try
			{
				MCommon.Common.CreateFolder("maxviewlivestream");
				if (File.Exists(Application.StartupPath + "\\maxviewlivestream\\MaxViewLivestream.exe"))
				{
					CommonIniFile commonIniFile = new CommonIniFile(Application.StartupPath + "\\maxviewlivestream\\update.ini");
					string text = commonIniFile.Read("Version", "maxviewlivestream");
					double num = Convert.ToDouble(text.Replace(".", "").Insert(1, "."));
					if (num < 3.66)
					{
						MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng cập nhật phiên bản mới để sử dụng!"));
						Process.Start(Application.StartupPath + "\\maxviewlivestream\\AutoUpdate.exe");
						return;
					}
					List<string> list = new List<string>();
					for (int i = 0; i < dtgvAcc.RowCount; i++)
					{
						if (Convert.ToBoolean(dtgvAcc.Rows[i].Cells["cChose"].Value))
						{
							DataGridViewRow dataGridViewRow = dtgvAcc.Rows[i];
							try
							{
								list.Add("True||" + dataGridViewRow.Cells["cUid"].Value.ToString() + "|" + dataGridViewRow.Cells["cPassword"].Value.ToString() + "|" + dataGridViewRow.Cells["cFa2"].Value.ToString() + "|" + dataGridViewRow.Cells["cToken"].Value.ToString() + "|" + dataGridViewRow.Cells["cCookies"].Value.ToString() + "|" + dataGridViewRow.Cells["cProxy"].Value.ToString() + "|" + dataGridViewRow.Cells["cUseragent"].Value.ToString());
							}
							catch
							{
							}
						}
					}
					File.WriteAllLines("maxviewlivestream\\configs\\data.txt", list);
					Process process = new Process();
					process.StartInfo.FileName = Application.StartupPath + "\\maxviewlivestream\\MaxViewLivestream.exe";
					process.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
					setting_general = new JSON_Settings("configGeneral");
					string text2 = setting_general.GetValue("txbPathProfile");
					if (!text2.Contains('\\'))
					{
						text2 = Application.StartupPath + "\\" + ((setting_general.GetValue("txbPathProfile") == "") ? "profiles" : setting_general.GetValue("txbPathProfile"));
					}
					process.StartInfo.Arguments = Base.checkLisence + " \"" + text2 + "\" " + Base.codeKeyRandom;
					process.Start();
				}
				else if (MessageBoxHelper.ShowMessageBoxWithQuestion(Language.GetValue("Chư\u0301c năng na\u0300y hiê\u0323n chưa co\u0301 să\u0303n, ba\u0323n co\u0301 muô\u0301n ta\u0309i xuô\u0301ng?")) == DialogResult.Yes)
				{
					Base.softname = "maxviewlivestream";
					MCommon.Common.ShowForm(new frm_progress());
					BtnViewLivestream_Click(null, null);
				}
			}
			catch (Exception)
			{
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Không thê\u0309 sư\u0309 du\u0323ng chư\u0301c năng na\u0300y!"));
			}
		}

		private void fAToolStripMenuItem_Click(object sender, EventArgs e)
		{
			CopyRowDatagrid("2fa");
		}

		private void checkAvatarToolStripMenuItem_Click(object sender, EventArgs e)
		{
			LoadSetting();
			int iThread = 0;
			int maxThread = setting_general.GetValueInt("nudHideThread", 10);
			isStop = false;
			new Thread((ThreadStart)delegate
			{
				cControl("start");
				int num = 0;
				while (num < dtgvAcc.Rows.Count)
				{
					Application.DoEvents();
					if (isStop)
					{
						break;
					}
					if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
					{
						if (iThread < maxThread)
						{
							Interlocked.Increment(ref iThread);
							int row = num++;
							new Thread((ThreadStart)delegate
							{
								SetStatusAccount(row, Language.GetValue("Đang kiểm tra..."));
								CheckMyAvatar(row);
								Interlocked.Decrement(ref iThread);
							}).Start();
						}
						else
						{
							Application.DoEvents();
							Thread.Sleep(200);
						}
					}
					else
					{
						num++;
					}
				}
				int tickCount = Environment.TickCount;
				while (iThread > 0 && Environment.TickCount - tickCount <= 30000)
				{
					Application.DoEvents();
					Thread.Sleep(300);
				}
				cControl("stop");
			}).Start();
		}

		private void CheckMyAvatar(int row)
		{
			//Discarded unreachable code: IL_01fb, IL_022f
			try
			{
				string uid = dtgvAcc.Rows[row].Cells["cUid"].Value.ToString();
				string id = dtgvAcc.Rows[row].Cells["cId"].Value.ToString();
				if (CommonRequest.CheckAvatarFromUid(uid))
				{
					SetStatusAccount(row, Language.GetValue("Đa\u0303 co\u0301 avatar!"));
					SetCellAccount(row, "cAvatar", "Yes");
					CommonSQL.UpdateFieldToAccount(id, "avatar", "Yes");
				}
				else
				{
					SetStatusAccount(row, Language.GetValue("Không co\u0301 avatar!"));
					SetCellAccount(row, "cAvatar", "No");
					CommonSQL.UpdateFieldToAccount(id, "avatar", "No");
				}
			}
			catch
			{
				SetStatusAccount(row, "Lỗi!");
			}
		}

		private void checkVerinoveriToolStripMenuItem_Click(object sender, EventArgs e)
		{
			LoadSetting();
			int iThread = 0;
			int maxThread = setting_general.GetValueInt("nudHideThread", 10);
			isStop = false;
			new Thread((ThreadStart)delegate
			{
				cControl("start");
				int num = 0;
				while (num < dtgvAcc.Rows.Count)
				{
					Application.DoEvents();
					if (isStop)
					{
						break;
					}
					if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
					{
						if (iThread < maxThread)
						{
							Interlocked.Increment(ref iThread);
							int row = num++;
							new Thread((ThreadStart)delegate
							{
								SetStatusAccount(row, Language.GetValue("Đang kiểm tra..."));
								CheckVeri(row);
								Interlocked.Decrement(ref iThread);
							}).Start();
						}
						else
						{
							Application.DoEvents();
							Thread.Sleep(200);
						}
					}
					else
					{
						num++;
					}
				}
				int tickCount = Environment.TickCount;
				while (iThread > 0 && Environment.TickCount - tickCount <= 30000)
				{
					Application.DoEvents();
					Thread.Sleep(300);
				}
				cControl("stop");
			}).Start();
		}

		private void CheckVeri(int row)
		{
			string text = dtgvAcc.Rows[row].Cells["cCookies"].Value.ToString();
			string text2 = dtgvAcc.Rows[row].Cells["cId"].Value.ToString();
			string text3 = GetCellAccount(row, "cUseragent");
			string text4 = "";
			int typeProxy = 0;
			if (setting_general.GetValueInt("ip_iTypeChangeIp") == 9)
			{
				text4 = GetCellAccount(row, "cProxy");
				typeProxy = (text4.EndsWith("*1") ? 1 : 0);
				if (text4.EndsWith("*0") || text4.EndsWith("*1"))
				{
					text4 = text4.Substring(0, text4.Length - 2);
				}
			}
			if (text3 == "" || text4.Split(':').Length == 4)
			{
				text3 = Base.useragentDefault;
			}
			string text5 = "";
			if (text == "")
			{
				text5 = "Cookie trống!";
			}
			else
			{
				string text6 = CommonRequest.CheckLiveCookie(text, text3, text4, typeProxy);
				if (text6.Split('|')[0] == "1")
				{
					text5 = ((!(text6.Split('|')[1] == "1")) ? (text5 + Language.GetValue("Chưa veri!")) : (text5 + Language.GetValue("Đa\u0303 veri!")));
				}
				else if (text6.Split('|')[0] == "0")
				{
					text5 += "Cookie Die!";
				}
				else if (text6.Split('|')[0] == "2")
				{
					text5 += Language.GetValue("Lô\u0303i khi check!");
				}
			}
			SetStatusAccount(row, text5);
		}

		private void locTrungToolStripMenuItem_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_0122, IL_012f
			List<string> list = new List<string>();
			List<string> list2 = new List<string>();
			int num = 0;
			for (int i = 0; i < dtgvAcc.RowCount; i++)
			{
				if (!Convert.ToBoolean(dtgvAcc.Rows[i].Cells["cChose"].Value))
				{
					continue;
				}
				try
				{
					string cellAccount = GetCellAccount(i, "cUid");
					if (list2.Contains(cellAccount))
					{
						list.Add(dtgvAcc.Rows[i].Cells["cId"].Value.ToString());
						dtgvAcc.Rows.RemoveAt(i);
						i--;
						num++;
					}
					else
					{
						list2.Add(cellAccount);
					}
				}
				catch
				{
				}
			}
			CommonSQL.DeleteAccountToDatabase(list);
			UpdateSttOnDatatable();
			CountTotalAccount();
			CountCheckedAccount();
			MessageBoxHelper.ShowMessageBox(string.Format(Language.GetValue("Đã loại bỏ {0} tài khoản bị trùng!"), num));
		}

		private void đăngNhâpBăngUidpassToolStripMenuItem_Click(object sender, EventArgs e)
		{
		}

		private void đăngNhâpBăngCookieToolStripMenuItem_Click(object sender, EventArgs e)
		{
		}

		private void xóaProfileToolStripMenuItem_Click(object sender, EventArgs e)
		{
			if (MessageBoxHelper.ShowMessageBoxWithQuestion(string.Format(Language.GetValue("Bạn có chắc muốn xóa Profile của {0} tài khoản?"), CountChooseRowInDatagridview())) != DialogResult.Yes)
			{
				return;
			}
			LoadSetting();
			int iThread = 0;
			int maxThread = setting_general.GetValueInt("nudHideThread", 10);
			new Thread((ThreadStart)delegate
			{
				int num = 0;
				while (num < dtgvAcc.Rows.Count)
				{
					if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
					{
						if (iThread < maxThread)
						{
							Interlocked.Increment(ref iThread);
							int row = num++;
							new Thread((ThreadStart)delegate
							{
								SetStatusAccount(row, Language.GetValue("Đang xo\u0301a profile..."));
								DeleteProfile(row);
								Interlocked.Decrement(ref iThread);
							}).Start();
						}
						else
						{
							Application.DoEvents();
							Thread.Sleep(200);
						}
					}
					else
					{
						num++;
					}
				}
			}).Start();
		}

		private void DeleteProfile(int row)
		{
			//Discarded unreachable code: IL_0232, IL_026b
			try
			{
				string id = dtgvAcc.Rows[row].Cells["cId"].Value.ToString();
				string text = dtgvAcc.Rows[row].Cells["cUid"].Value.ToString();
				if (text.Trim() == "")
				{
					SetStatusAccount(row, Language.GetValue("Chưa tạo profile!"));
					return;
				}
				string path = setting_general.GetValue("txbPathProfile") + "\\" + text;
				if (Directory.Exists(path))
				{
					Directory.Delete(path, recursive: true);
					SetStatusAccount(row, Language.GetValue("Xóa profile thành công!"));
					SetCellAccount(row, "cProfile", "No");
					CommonSQL.UpdateFieldToAccount(id, "profile", "No");
				}
				else
				{
					SetStatusAccount(row, Language.GetValue("Chưa tạo profile!"));
				}
			}
			catch
			{
				SetStatusAccount(row, Language.GetValue("Xóa profile thất bại!"));
			}
		}

		private void checkProfileToolStripMenuItem_Click(object sender, EventArgs e)
		{
			int iThread = 0;
			int maxThread = 10;
			string profilePath = ConfigHelper.GetPathProfile();
			new Thread((ThreadStart)delegate
			{
				int num = 0;
				while (num < dtgvAcc.RowCount)
				{
					if (Convert.ToBoolean(GetCellAccount(num, "cChose")))
					{
						if (iThread < maxThread)
						{
							Interlocked.Increment(ref iThread);
							int row = num++;
							new Thread((ThreadStart)delegate
							{
								SetStatusAccount(row, "Check profile...");
								CheckProfile(row, profilePath);
								Interlocked.Decrement(ref iThread);
							}).Start();
						}
						else
						{
							Application.DoEvents();
							Thread.Sleep(200);
						}
					}
					else
					{
						num++;
					}
				}
			}).Start();
		}

		private void CheckProfile(int row, string profilePath)
		{
			//Discarded unreachable code: IL_01d4, IL_01e1
			try
			{
				string cellAccount = GetCellAccount(row, "cId");
				string cellAccount2 = GetCellAccount(row, "cUid");
				profilePath = profilePath + "\\" + cellAccount2;
				if (Directory.Exists(profilePath))
				{
					SetStatusAccount(row, Language.GetValue("Đã có profile!"));
					SetCellAccount(row, "cProfile", "Yes");
					CommonSQL.UpdateFieldToAccount(cellAccount, "profile", "Yes");
				}
				else
				{
					SetStatusAccount(row, Language.GetValue("Chưa tạo profile!"));
					SetCellAccount(row, "cProfile", "No");
					CommonSQL.UpdateFieldToAccount(cellAccount, "profile", "No");
				}
			}
			catch
			{
			}
		}

		private void donDepProfileToolStripMenuItem_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_0013, IL_0031
			try
			{
				MCommon.Common.ShowForm(new fClearProfile());
			}
			catch (Exception ex)
			{
				MessageBoxHelper.ShowMessageBox(ex.ToString(), 3);
			}
		}

		public void CloseProcess(string nameProcess)
		{
			//Discarded unreachable code: IL_003e, IL_004b
			try
			{
				Process[] processesByName = Process.GetProcessesByName(nameProcess);
				foreach (Process process in processesByName)
				{
					process.Kill();
				}
			}
			catch
			{
			}
		}

		private void pictureBox1_DoubleClick(object sender, EventArgs e)
		{
			CloseProcess("Chrome");
		}

		private void statusStrip1_ItemClicked(object sender, ToolStripItemClickedEventArgs e)
		{
		}

		private void uidPass2FaToolStripMenuItem_Click(object sender, EventArgs e)
		{
			CopyRowDatagrid("uid|pass|2fa");
		}

		private void mnuCauHinhChung_Click(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fCauHinhChung());
		}

		private void đinhDangKhacToolStripMenuItem_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_0575, IL_05a1
			try
			{
				List<string> list = new List<string>();
				for (int i = 0; i < dtgvAcc.RowCount; i++)
				{
					if (Convert.ToBoolean(dtgvAcc.Rows[i].Cells["cChose"].Value))
					{
						list.Add(GetCellAccount(i, "cUid") + "|" + GetCellAccount(i, "cPassword") + "|" + GetCellAccount(i, "cToken") + "|" + GetCellAccount(i, "cCookies") + "|" + GetCellAccount(i, "cEmail") + "|" + GetCellAccount(i, "cPassMail") + "|" + GetCellAccount(i, "cFa2") + "|" + GetCellAccount(i, "cUseragent") + "|" + GetCellAccount(i, "cProxy").Split('*')[0] + "|" + GetCellAccount(i, "cName") + "|" + GetCellAccount(i, "cGender") + "|" + GetCellAccount(i, "cFollow") + "|" + GetCellAccount(i, "cFriend") + "|" + GetCellAccount(i, "cGroup") + "|" + GetCellAccount(i, "cBirthday") + "|" + GetCellAccount(i, "cDateCreateAcc") + "|" + GetCellAccount(i, "cGhiChu"));
					}
				}
				if (list.Count <= 0)
				{
					MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng chọn danh sách tài khoản muốn copy thông tin!"), 3);
				}
				else
				{
					MCommon.Common.ShowForm(new fCopy(list));
				}
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(null, ex, "Error Copy");
			}
		}

		private void maBaoMât6SôToolStripMenuItem_Click(object sender, EventArgs e)
		{
			CopyRowDatagrid("ma2fa");
		}

		private void trạngTháiToolStripMenuItem_Click(object sender, EventArgs e)
		{
		}

		private void CapNhatThongTin(int type)
		{
			LoadSetting();
			int iThread = 0;
			int maxThread = setting_general.GetValueInt("nudHideThread", 10);
			string tokenTrungGian = setting_general.GetValue("token");
			string cookieTrungGian = setting_general.GetValue("cookie");
			if (type == 0 && !CommonRequest.CheckLiveToken("", tokenTrungGian, "", ""))
			{
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng kiểm tra lại token trung gian!"), 3);
				return;
			}
			if (type == 4 && CommonRequest.CheckLiveCookie(cookieTrungGian, "", "", 0).StartsWith("0|"))
			{
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng kiểm tra lại cookie trung gian!"), 3);
				return;
			}
			isStop = false;
			bool isTokenDie = false;
			bool isCookieDie = false;
			bool isChangeIPSuccess = false;
			int curChangeIp = 0;
			new Thread((ThreadStart)delegate
			{
				cControl("start");
				switch (type)
				{
					case 0:
						{
							int num3 = 0;
							while (num3 < dtgvAcc.Rows.Count && !isStop)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num3].Cells["cChose"].Value))
								{
									if (iThread < maxThread)
									{
										Interlocked.Increment(ref iThread);
										int row2 = num3++;
										new Thread((ThreadStart)delegate
										{
											SetStatusAccount(row2, Language.GetValue("Đang kiểm tra..."));
											if (!GetInfoUsingToken(row2, tokenTrungGian, isTokenTrungGian: true))
											{
												isStop = true;
												isTokenDie = true;
											}
											Interlocked.Decrement(ref iThread);
										}).Start();
									}
									else
									{
										Application.DoEvents();
										Thread.Sleep(200);
									}
								}
								else
								{
									num3++;
								}
							}
							goto default;
						}
					case 4:
						{
							int num4 = 0;
							while (num4 < dtgvAcc.Rows.Count && !isStop)
							{
								if (Convert.ToBoolean(dtgvAcc.Rows[num4].Cells["cChose"].Value))
								{
									if (iThread < maxThread)
									{
										Interlocked.Increment(ref iThread);
										int row = num4++;
										new Thread((ThreadStart)delegate
										{
											SetStatusAccount(row, Language.GetValue("Đang kiểm tra..."));
											if (!GetInfoUsingCookieTrungGian(row, cookieTrungGian))
											{
												isStop = true;
												isCookieDie = true;
											}
											Interlocked.Decrement(ref iThread);
										}).Start();
									}
									else
									{
										Application.DoEvents();
										Thread.Sleep(200);
									}
								}
								else
								{
									num4++;
								}
							}
							goto default;
						}
					case 1:
						{
							int num2 = 0;
							while (num2 < dtgvAcc.Rows.Count && !isStop)
							{
								if (!Convert.ToBoolean(dtgvAcc.Rows[num2].Cells["cChose"].Value))
								{
									num2++;
									continue;
								}
								if (iThread < maxThread)
								{
									Interlocked.Increment(ref iThread);
									int row3 = num2++;
									new Thread((ThreadStart)delegate
									{
										SetStatusAccount(row3, Language.GetValue("Đang kiểm tra..."));
										GetInfoUsingToken(row3);
										Interlocked.Decrement(ref iThread);
									}).Start();
									continue;
								}
								if (setting_general.GetValueInt("ip_iTypeChangeIp") == 0 || setting_general.GetValueInt("ip_iTypeChangeIp") == 7 || setting_general.GetValueInt("ip_iTypeChangeIp") == 8 || setting_general.GetValueInt("ip_iTypeChangeIp") == 9)
								{
									MCommon.Common.DelayTime(1.0);
									continue;
								}
								while (iThread > 0)
								{
									MCommon.Common.DelayTime(1.0);
								}
								if (isStop)
								{
									break;
								}
								Interlocked.Increment(ref curChangeIp);
								if (curChangeIp < Convert.ToInt32((setting_general.GetValue("ip_nudChangeIpCount") == "") ? "1" : setting_general.GetValue("ip_nudChangeIpCount")))
								{
									continue;
								}
								for (int j = 0; j < 3; j++)
								{
									isChangeIPSuccess = MCommon.Common.ChangeIP(setting_general.GetValueInt("ip_iTypeChangeIp"), setting_general.GetValueInt("typeDcom"), setting_general.GetValue("ip_txtProfileNameDcom"), setting_general.GetValue("txtUrlHilink"), setting_general.GetValueInt("ip_cbbHostpot"), setting_general.GetValue("ip_txtNordVPN"));
									if (isChangeIPSuccess)
									{
										break;
									}
								}
								if (isChangeIPSuccess)
								{
									curChangeIp = 0;
									continue;
								}
								goto IL_04c2;
							}
							goto default;
						}
					case 2:
						{
							int num = 0;
							while (num < dtgvAcc.Rows.Count && !isStop)
							{
								if (!Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
								{
									num++;
									continue;
								}
								if (iThread < maxThread)
								{
									Interlocked.Increment(ref iThread);
									int row4 = num++;
									new Thread((ThreadStart)delegate
									{
										SetStatusAccount(row4, Language.GetValue("Đang kiểm tra..."));
										GetInfoUsingCookie(row4);
										Interlocked.Decrement(ref iThread);
									}).Start();
									continue;
								}
								if (setting_general.GetValueInt("ip_iTypeChangeIp") == 0 || setting_general.GetValueInt("ip_iTypeChangeIp") == 7 || setting_general.GetValueInt("ip_iTypeChangeIp") == 8 || setting_general.GetValueInt("ip_iTypeChangeIp") == 9 || setting_general.GetValueInt("ip_iTypeChangeIp") == 10 || setting_general.GetValueInt("ip_iTypeChangeIp") == 11 || setting_general.GetValueInt("ip_iTypeChangeIp") == 12)
								{
									MCommon.Common.DelayTime(1.0);
									continue;
								}
								while (iThread > 0)
								{
									MCommon.Common.DelayTime(1.0);
								}
								if (isStop)
								{
									break;
								}
								Interlocked.Increment(ref curChangeIp);
								if (curChangeIp < Convert.ToInt32((setting_general.GetValue("ip_nudChangeIpCount") == "") ? "1" : setting_general.GetValue("ip_nudChangeIpCount")))
								{
									continue;
								}
								for (int i = 0; i < 3; i++)
								{
									isChangeIPSuccess = MCommon.Common.ChangeIP(setting_general.GetValueInt("ip_iTypeChangeIp"), setting_general.GetValueInt("typeDcom"), setting_general.GetValue("ip_txtProfileNameDcom"), setting_general.GetValue("txtUrlHilink"), setting_general.GetValueInt("ip_cbbHostpot"), setting_general.GetValue("ip_txtNordVPN"));
									if (isChangeIPSuccess)
									{
										break;
									}
								}
								if (isChangeIPSuccess)
								{
									curChangeIp = 0;
									continue;
								}
								goto IL_0822;
							}
							goto default;
						}
					default:
						{
							int tickCount = Environment.TickCount;
							while (iThread > 0 && Environment.TickCount - tickCount <= 60000)
							{
								MCommon.Common.DelayTime(1.0);
							}
							break;
						}
					IL_0822:
						MessageBoxHelper.ShowMessageBox(Language.GetValue("Không thê\u0309 đô\u0309i ip!"), 3);
						break;
					IL_04c2:
						MessageBoxHelper.ShowMessageBox(Language.GetValue("Không thê\u0309 đô\u0309i ip!"), 3);
						break;
				}
				cControl("stop");
				if (isTokenDie)
				{
					MessageBoxHelper.ShowMessageBox(Language.GetValue("Token trung gian die!"));
				}
				if (isCookieDie)
				{
					MessageBoxHelper.ShowMessageBox(Language.GetValue("Cookie trung gian die!"));
				}
			}).Start();
		}

		private bool GetInfoUsingToken(int row, string token, bool isTokenTrungGian)
		{
			//Discarded unreachable code: IL_0727, IL_0760
			try
			{
				string cellAccount = GetCellAccount(row, "cId");
				string cellAccount2 = GetCellAccount(row, "cUid");
				string text = GetCellAccount(row, "cUseragent");
				string text2 = "";
				int typeProxy = 0;
				if (setting_general.GetValueInt("ip_iTypeChangeIp") == 9)
				{
					text2 = GetCellAccount(row, "cProxy");
					typeProxy = (text2.EndsWith("*1") ? 1 : 0);
					if (text2.EndsWith("*0") || text2.EndsWith("*1"))
					{
						text2 = text2.Substring(0, text2.Length - 2);
					}
				}
				if (text == "" || text2.Split(':').Length == 4)
				{
					text = Base.useragentDefault;
				}
				if (isTokenTrungGian)
				{
					text = "";
					text2 = "";
					typeProxy = 0;
				}
				string text3 = "";
				string text4 = "";
				if (cellAccount2 == "")
				{
					text4 = Language.GetValue("Không co\u0301 uid!");
				}
				else
				{
					string infoAccountFromUidUsingToken = CommonRequest.GetInfoAccountFromUidUsingToken(token, cellAccount2, text, text2, typeProxy);
					if (infoAccountFromUidUsingToken == "-1")
					{
						SetStatusAccount(row, Language.GetValue("Không check đươ\u0323c!"));
						return false;
					}
					string[] array = infoAccountFromUidUsingToken.Split('|');
					if (Convert.ToBoolean(array[0]))
					{
						text3 = "Live";
						CommonSQL.UpdateMultiFieldToAccount(cellAccount, "name|gender|birthday|friends|groups" + ((array[5] != "") ? "|email" : ""), array[1] + "|" + array[2] + "|" + array[3] + "|" + array[6] + "|" + array[7] + ((array[5] != "") ? ("|" + array[5]) : ""));
						SetCellAccount(row, "cName", array[1]);
						SetCellAccount(row, "cGender", array[2]);
						SetCellAccount(row, "cBirthday", array[3]);
						if (array[5] != "")
						{
							SetCellAccount(row, "cEmail", array[5]);
						}
						SetCellAccount(row, "cFriend", array[6]);
						SetCellAccount(row, "cGroup", array[7]);
						text4 = "Câ\u0323p nhâ\u0323t thông tin tha\u0300nh công!";
					}
					else
					{
						text3 = "Die";
						text4 = Language.GetValue("Tài khoản die!");
					}
				}
				SetStatusAccount(row, text4);
				if (text3 != "")
				{
					SetInfoAccount(cellAccount, row, text3);
				}
			}
			catch
			{
				SetStatusAccount(row, Language.GetValue("Không check đươ\u0323c!"));
			}
			return true;
		}

		private void GetInfoUsingCookie(int row)
		{
			//Discarded unreachable code: IL_06f8, IL_0731
			try
			{
				string cellAccount = GetCellAccount(row, "cId");
				string cellAccount2 = GetCellAccount(row, "cCookies");
				string cellAccount3 = GetCellAccount(row, "cToken");
				string text = GetCellAccount(row, "cUseragent");
				string text2 = "";
				int typeProxy = 0;
				if (setting_general.GetValueInt("ip_iTypeChangeIp") == 9)
				{
					text2 = GetCellAccount(row, "cProxy");
					typeProxy = (text2.EndsWith("*1") ? 1 : 0);
					if (text2.EndsWith("*0") || text2.EndsWith("*1"))
					{
						text2 = text2.Substring(0, text2.Length - 2);
					}
				}
				if (text == "" || text2.Split(':').Length == 4)
				{
					text = Base.useragentDefault;
				}
				string text3 = "";
				string text4 = "";
				if (cellAccount2 == "")
				{
					text3 = Language.GetValue("Cookie trô\u0301ng");
				}
				else
				{
					string infoAccountFromUidUsingCookie = CommonRequest.GetInfoAccountFromUidUsingCookie(cellAccount2, text, text2, typeProxy);
					if (infoAccountFromUidUsingCookie == "-1")
					{
						text3 = "Cookie die";
					}
					else
					{
						string[] array = infoAccountFromUidUsingCookie.Split('|');
						if (Convert.ToBoolean(array[0]))
						{
							text4 = "Live";
							CommonSQL.UpdateMultiFieldToAccount(cellAccount, "name|gender|birthday|friends|groups" + ((array[5] != "") ? "|email" : ""), array[1] + "|" + array[2] + "|" + array[3] + "|" + array[6] + "|" + array[7] + ((array[5] != "") ? ("|" + array[5]) : ""));
							SetCellAccount(row, "cName", array[1]);
							SetCellAccount(row, "cGender", array[2]);
							SetCellAccount(row, "cBirthday", array[3]);
							if (array[5] != "")
							{
								SetCellAccount(row, "cEmail", array[5]);
							}
							SetCellAccount(row, "cFriend", array[6]);
							SetCellAccount(row, "cGroup", array[7]);
							text3 = Language.GetValue("Câ\u0323p nhâ\u0323t thông tin tha\u0300nh công!");
						}
						else
						{
							text4 = "Die";
							text3 = Language.GetValue("Tài khoản die!");
						}
					}
				}
				SetStatusAccount(row, text3);
				if (text4 != "")
				{
					SetInfoAccount(cellAccount, row, text4);
				}
			}
			catch
			{
				SetStatusAccount(row, Language.GetValue("Không check đươ\u0323c!"));
			}
		}

		private bool GetInfoUsingCookieTrungGian(int row, string cookie)
		{
			//Discarded unreachable code: IL_036b, IL_03a4
			try
			{
				string cellAccount = GetCellAccount(row, "cId");
				string cellAccount2 = GetCellAccount(row, "cUid");
				string text = "";
				string infoAccountFromUidUsingCookieTrungGian = CommonRequest.GetInfoAccountFromUidUsingCookieTrungGian(cellAccount2, cookie);
				if (infoAccountFromUidUsingCookieTrungGian == "-1")
				{
					SetStatusAccount(row, Language.GetValue("Không check đươ\u0323c!"));
					return false;
				}
				string[] array = infoAccountFromUidUsingCookieTrungGian.Split('|');
				if (Convert.ToBoolean(array[0]))
				{
					CommonSQL.UpdateMultiFieldToAccount(cellAccount, "name|gender", array[1] + "|" + array[2]);
					SetCellAccount(row, "cName", array[1]);
					SetCellAccount(row, "cGender", array[2]);
					if (array[6] != "")
					{
						SetCellAccount(row, "cFriend", array[6]);
						CommonSQL.UpdateFieldToAccount(cellAccount, "friends", array[6]);
					}
					if (array[7] != "")
					{
						SetCellAccount(row, "cGroup", array[7]);
						CommonSQL.UpdateFieldToAccount(cellAccount, "groups", array[7]);
					}
					SetInfoAccount(cellAccount, row, "Live");
					text = Language.GetValue("Câ\u0323p nhâ\u0323t thông tin tha\u0300nh công!");
				}
				else
				{
					SetInfoAccount(cellAccount, row, "Die");
					text = Language.GetValue("Tài khoản Die!");
				}
				SetStatusAccount(row, text);
			}
			catch
			{
				SetStatusAccount(row, Language.GetValue("Không check đươ\u0323c!"));
			}
			return true;
		}

		private void UpdateInfoWhenInteracting(Chrome chrome, int row)
		{
			//Discarded unreachable code: IL_04a3, IL_04bf
			try
			{
				string cellAccount = GetCellAccount(row, "cId");
				string infoAccountFromUidUsingCookie = CommonChrome.GetInfoAccountFromUidUsingCookie(chrome);
				if (!infoAccountFromUidUsingCookie.Contains("|"))
				{
					if (infoAccountFromUidUsingCookie == "-1")
					{
						SetInfoAccount(cellAccount, row, "Die");
					}
					return;
				}
				string[] array = infoAccountFromUidUsingCookie.Split('|');
				CommonSQL.UpdateMultiFieldToAccount(cellAccount, "name|gender|birthday|friends|groups|dateCreateAcc|follow" + ((array[5] != "") ? "|email" : ""), array[1] + "|" + array[2] + "|" + array[3] + "|" + array[6] + "|" + array[7] + "|" + array[9] + "|" + array[10] + ((array[5] != "") ? ("|" + array[5]) : ""), isAllowEmptyValue: false);
				SetCellAccount(row, "cName", array[1], isAllowEmptyValue: false);
				SetCellAccount(row, "cGender", array[2], isAllowEmptyValue: false);
				SetCellAccount(row, "cBirthday", array[3], isAllowEmptyValue: false);
				SetCellAccount(row, "cEmail", array[5], isAllowEmptyValue: false);
				SetCellAccount(row, "cFriend", array[6], isAllowEmptyValue: false);
				SetCellAccount(row, "cGroup", array[7], isAllowEmptyValue: false);
				SetCellAccount(row, "cDateCreateAcc", array[9], isAllowEmptyValue: false);
				SetCellAccount(row, "cFollow", array[10], isAllowEmptyValue: false);
				SetInfoAccount(cellAccount, row, "Live");
			}
			catch (Exception ex)
			{
				CommonCSharp.ExportError(null, ex.ToString());
			}
		}

		public int HDXoaThongBaoVPCS(int indexRow, string statusProxy, Chrome chrome, int typeDelete, bool isDeleteMessage, string tenHanhDong = "")
		{
			//Discarded unreachable code: IL_0923, IL_0936
			int num = 0;
			try
			{
				if (chrome.CheckChromeClosed())
				{
					return -2;
				}
				if (typeDelete == 1 && Base.rd.Next(1, 11) > 7)
				{
					return 0;
				}
				SetStatusAccount(indexRow, statusProxy + Language.GetValue("Đang") + " " + tenHanhDong + "...");
				bool flag = false;
				for (int i = 0; i < 3; i++)
				{
					num = 0;
					CommonChrome.GoToNotifications(chrome);
					string cssSelector = chrome.GetCssSelector("a", "href", "/notifications.php?more");
					if (cssSelector != "" && chrome.Click(4, cssSelector) == 1)
					{
						chrome.DelayRandom(3, 5);
					}
					List<string> list = new List<string>();
					list = chrome.ExecuteScript("var y=[];var x=document.querySelectorAll('a'); for(i=0;i<x.length;i++){if(x[i].getAttribute('href')!=null && x[i].getAttribute('href').includes('/support/view_details/')) y.push(x[i].getAttribute('href'))};return y.join('|')").ToString().Split('|')
						.ToList();
					list = MCommon.Common.RemoveEmptyItems(list);
					if (list.Count == 0)
					{
						break;
					}
					for (int j = 0; j < list.Count; j++)
					{
						chrome.GotoURL("https://m.facebook.com" + list[j]);
						chrome.DelayRandom(2, 4);
						cssSelector = chrome.GetCssSelector("a", "href", "/si/actor_experience/action_experience");
						if (cssSelector != "")
						{
							chrome.Click(4, cssSelector);
							chrome.DelayRandom(2, 4);
							cssSelector = chrome.GetCssSelector("document.querySelector('span div[role=\"button\"]')");
							if (!(cssSelector != "") || chrome.Click(4, cssSelector.Substring(0, cssSelector.LastIndexOf('>')).Substring(0, cssSelector.Substring(0, cssSelector.LastIndexOf('>')).LastIndexOf('>'))) != 1)
							{
								continue;
							}
							chrome.DelayRandom(2, 4);
							cssSelector = chrome.GetCssSelector("document.querySelector('span div[role=\"button\"]')");
							if (cssSelector != "" && chrome.Click(4, cssSelector.Substring(0, cssSelector.LastIndexOf('>')).Substring(0, cssSelector.Substring(0, cssSelector.LastIndexOf('>')).LastIndexOf('>'))) == 1)
							{
								chrome.DelayRandom(2, 4);
							}
							if (chrome.CheckExistElement("[data-nt-switch-case='{\"v\":\"default\"}']", 4.0) != 1 || chrome.Click(4, "[data-nt-switch-case='{\"v\":\"default\"}']") != 1)
							{
								continue;
							}
							chrome.DelayRandom(2, 4);
							for (int k = 0; k < 5; k++)
							{
								cssSelector = chrome.GetCssSelector("document.querySelector('span div[role=\"button\"]')");
								if (cssSelector != "" && chrome.Click(4, cssSelector.Substring(0, cssSelector.LastIndexOf('>')).Substring(0, cssSelector.Substring(0, cssSelector.LastIndexOf('>')).LastIndexOf('>'))) == 1)
								{
									chrome.DelayRandom(2, 4);
									continue;
								}
								break;
							}
							continue;
						}
						if (isDeleteMessage)
						{
							cssSelector = chrome.GetCssSelector("a", "href", "/support/reporter/remove/");
							chrome.Click(4, cssSelector);
							chrome.DelayRandom(2, 4);
							if (chrome.CheckExistElement("[data-testid=\"supportInbox/confirmDialog/confirm\"]", 3.0) == 1 && chrome.Click(4, "[data-testid=\"supportInbox/confirmDialog/confirm\"]") == 1)
							{
								chrome.DelayRandom(2, 4);
							}
						}
						num++;
						if (num == list.Count)
						{
							flag = true;
							break;
						}
					}
					if (flag)
					{
						break;
					}
				}
			}
			catch
			{
				num = -1;
			}
			return num;
		}

		private void GetInfoUsingToken(int row)
		{
			//Discarded unreachable code: IL_06b9, IL_06ed
			try
			{
				string cellAccount = GetCellAccount(row, "cId");
				string cellAccount2 = GetCellAccount(row, "cToken");
				string text = GetCellAccount(row, "cUseragent");
				string text2 = "";
				int typeProxy = 0;
				if (setting_general.GetValueInt("ip_iTypeChangeIp") == 9)
				{
					text2 = GetCellAccount(row, "cProxy");
					typeProxy = (text2.EndsWith("*1") ? 1 : 0);
					if (text2.EndsWith("*0") || text2.EndsWith("*1"))
					{
						text2 = text2.Substring(0, text2.Length - 2);
					}
				}
				if (text == "" || text2.Split(':').Length == 4)
				{
					text = Base.useragentDefault;
				}
				string text3 = "";
				string text4 = "";
				if (cellAccount2 == "")
				{
					text4 = Language.GetValue("Token trô\u0301ng");
				}
				else
				{
					string infoAccountFromUidUsingToken = CommonRequest.GetInfoAccountFromUidUsingToken(cellAccount2, "", text, text2, typeProxy);
					if (infoAccountFromUidUsingToken == "-1")
					{
						text4 = "Token die";
					}
					else
					{
						string[] array = infoAccountFromUidUsingToken.Split('|');
						if (Convert.ToBoolean(array[0]))
						{
							text3 = "Live";
							CommonSQL.UpdateMultiFieldToAccount(cellAccount, "name|gender|birthday|friends|groups" + ((array[5] != "") ? "|email" : ""), array[1] + "|" + array[2] + "|" + array[3] + "|" + array[6] + "|" + array[7] + ((array[5] != "") ? ("|" + array[5]) : ""));
							SetCellAccount(row, "cName", array[1]);
							SetCellAccount(row, "cGender", array[2]);
							SetCellAccount(row, "cBirthday", array[3]);
							if (array[5] != "")
							{
								SetCellAccount(row, "cEmail", array[5]);
							}
							SetCellAccount(row, "cFriend", array[6]);
							SetCellAccount(row, "cGroup", array[7]);
						}
						else
						{
							text3 = "Die";
						}
						text4 = "Câ\u0323p nhâ\u0323t thông tin tha\u0300nh công!";
					}
				}
				SetStatusAccount(row, text4);
				if (text3 != "")
				{
					SetInfoAccount(cellAccount, row, text3);
				}
			}
			catch
			{
				SetStatusAccount(row, "Không check đươ\u0323c!");
			}
		}

		private void sưDungTokenTrungGianToolStripMenuItem_Click(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fNhapTokenTrungGian());
			if (fNhapTokenTrungGian.isOK)
			{
				CapNhatThongTin(0);
			}
		}

		private void sưDungTokenToolStripMenuItem_Click(object sender, EventArgs e)
		{
			CapNhatThongTin(1);
		}

		private void sưDungCookieToolStripMenuItem_Click(object sender, EventArgs e)
		{
			if (MessageBoxHelper.ShowMessageBoxWithQuestion(Language.GetValue("Tính năng này có thể khiến tài khoản bị khóa, bạn vẫn muốn sử dụng?")) == DialogResult.Yes)
			{
				CapNhatThongTin(2);
			}
		}

		private void BackupCookieToolStripMenuItem_Click(object sender, EventArgs e)
		{
			if (MessageBoxHelper.ShowMessageBoxWithQuestion(Language.GetValue("Tính năng này hiện tại đang chạy bằng Cookie nên rất dễ Die tài khoản!") + "\r\n" + Language.GetValue("Khuyến cáo nên sư\u0309 du\u0323ng chư\u0301c năng Backup khi Cha\u0323y tương ta\u0301c đê\u0309 gia\u0309m tô\u0301i đa ty\u0309 lê\u0323 checkpoint!") + "\r\n" + Language.GetValue("Bạn có chắc vẫn muốn sử dụng tính năng này?")) != DialogResult.Yes)
			{
				return;
			}
			LoadSetting();
			isStop = false;
			bool isChangeIPSuccess = false;
			int curChangeIp = 0;
			int iThread = 0;
			int maxThread = setting_general.GetValueInt("nudHideThread", 10);
			new Thread((ThreadStart)delegate
			{
				int num = 0;
				while (true)
				{
					if (num < dtgvAcc.Rows.Count && !isStop)
					{
						if (!Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
						{
							num++;
							continue;
						}
						if (iThread < maxThread)
						{
							Interlocked.Increment(ref iThread);
							int row = num++;
							new Thread((ThreadStart)delegate
							{
								SetStatusAccount(row, Language.GetValue("Đang kiểm tra..."));
								BackupAccountOneThread(row);
								Interlocked.Decrement(ref iThread);
							}).Start();
							continue;
						}
						if (setting_general.GetValueInt("ip_iTypeChangeIp") == 0 || setting_general.GetValueInt("ip_iTypeChangeIp") == 7 || setting_general.GetValueInt("ip_iTypeChangeIp") == 8 || setting_general.GetValueInt("ip_iTypeChangeIp") == 9 || setting_general.GetValueInt("ip_iTypeChangeIp") == 10 || setting_general.GetValueInt("ip_iTypeChangeIp") == 11 || setting_general.GetValueInt("ip_iTypeChangeIp") == 12)
						{
							MCommon.Common.DelayTime(1.0);
							continue;
						}
						while (iThread > 0)
						{
							MCommon.Common.DelayTime(1.0);
						}
						if (!isStop)
						{
							Interlocked.Increment(ref curChangeIp);
							if (curChangeIp >= Convert.ToInt32(setting_general.GetValueInt("ip_nudChangeIpCount", 1)))
							{
								for (int i = 0; i < 3; i++)
								{
									isChangeIPSuccess = MCommon.Common.ChangeIP(setting_general.GetValueInt("ip_iTypeChangeIp"), setting_general.GetValueInt("typeDcom"), setting_general.GetValue("ip_txtProfileNameDcom"), setting_general.GetValue("txtUrlHilink"), setting_general.GetValueInt("ip_cbbHostpot"), setting_general.GetValue("ip_txtNordVPN"));
									if (isChangeIPSuccess)
									{
										break;
									}
								}
								if (!isChangeIPSuccess)
								{
									MessageBoxHelper.ShowMessageBox(Language.GetValue("Không thê\u0309 đô\u0309i ip!"), 3);
									break;
								}
								curChangeIp = 0;
							}
							continue;
						}
					}
					int tickCount = Environment.TickCount;
					while (iThread > 0)
					{
						MCommon.Common.DelayTime(1.0);
					}
					break;
				}
				cControl("stop");
			}).Start();
		}

		private List<string> GhepFileList(List<string> lstId, int soLuongAccMoiLan = 50, string separator = ",")
		{
			int num = Convert.ToInt32(Math.Ceiling(Convert.ToDecimal((double)lstId.Count * 1.0 / (double)soLuongAccMoiLan)));
			List<string> list = new List<string>();
			for (int i = 0; i < num; i++)
			{
				list.Add(string.Join(separator, lstId.GetRange(soLuongAccMoiLan * i, (soLuongAccMoiLan * i + soLuongAccMoiLan <= lstId.Count) ? soLuongAccMoiLan : (lstId.Count % soLuongAccMoiLan))));
			}
			return list;
		}

		private void BackupAccountOneThread(int row)
		{
			//Discarded unreachable code: IL_063c, IL_0651, IL_0986, IL_099b, IL_0b56, IL_0b6b, IL_0c74, IL_0c89, IL_0ff7, IL_104a
			int indexRow = row;
			string text = "";
			string text2 = "";
			try
			{
				string cellAccount = GetCellAccount(row, "cId");
				string cookie = GetCellAccount(row, "cCookies");
				string token = GetCellAccount(row, "cToken");
				string cellAccount2 = GetCellAccount(row, "cUid");
				if (cellAccount2 == "")
				{
					cellAccount2 = Regex.Match(cookie, "c_user=(.*?);").Groups[1].Value;
				}
				string useragent = GetCellAccount(row, "cUseragent");
				string proxy = "";
				int typeProxy = 0;
				if (setting_general.GetValueInt("ip_iTypeChangeIp") == 9)
				{
					proxy = GetCellAccount(row, "cProxy");
					if (proxy.EndsWith("*1"))
					{
						typeProxy = 1;
					}
					else
					{
						typeProxy = 0;
					}
					if (proxy.EndsWith("*0") || proxy.EndsWith("*1"))
					{
						proxy = proxy.Substring(0, proxy.Length - 2);
					}
				}
				if (useragent == "" || proxy.Split(':').Length == 4)
				{
					useragent = Base.useragentDefault;
				}
				if (token == "" && CommonRequest.CheckLiveCookie(cookie, useragent, proxy, typeProxy).StartsWith("1|"))
				{
					token = CommonRequest.GetTokenEAAAAZ(cookie, useragent, proxy, typeProxy);
				}
				if (token != "" && CommonRequest.CheckLiveToken(cookie, token, useragent, proxy, typeProxy))
				{
					CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", Language.GetValue("Đang backup nga\u0300y sinh..."));
					string myBirthday = CommonRequest.GetMyBirthday(cookie, token, useragent, proxy, typeProxy);
					if (myBirthday == "-1")
					{
						CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", "Token die!");
						return;
					}
					cellAccount2 = myBirthday.Split('|')[0];
					text = myBirthday.Split('|')[1];
					text2 = myBirthday.Split('|')[2];
					lock (_lock)
					{
						Directory.CreateDirectory("backup\\" + cellAccount2);
						File.WriteAllText("backup\\" + cellAccount2 + "\\ngaysinh.txt", myBirthday);
					}
					CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", Language.GetValue("Đang backup a\u0309nh") + "...");
					List<string> listImageBackup = new List<string>();
					int iThread = 0;
					object _lock_countSuccess = new object();
					int countSuccess = 0;
					List<string> myListUidNameFriend = CommonRequest.GetMyListUidNameFriend(cookie, token, useragent, proxy, typeProxy);
					int totalFriend = myListUidNameFriend.Count;
					List<string> lstQuery = GhepFileList(myListUidNameFriend);
					int count = lstQuery.Count;
					new Thread((ThreadStart)delegate
					{
						while (iThread > 0)
						{
							CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", Language.GetValue("Đang backup ảnh") + ": " + countSuccess + "/" + totalFriend + "...");
							Thread.Sleep(100);
						}
					}).Start();
					if (lstQuery.Count > 0)
					{
						int num = ((lstQuery.Count > 10) ? 10 : lstQuery.Count);
						int num2 = 0;
						while (num2 < lstQuery.Count)
						{
							if (iThread < num)
							{
								Interlocked.Increment(ref iThread);
								int stt = num2++;
								new Thread((ThreadStart)delegate
								{
									string text4 = lstQuery[stt];
									List<string> list = CommonRequest.BackupImageOne(text4, cookie, token, useragent, proxy, typeProxy);
									if (list.Count > 0)
									{
										lock (listImageBackup)
										{
											listImageBackup.AddRange(list);
										}
									}
									lock (_lock_countSuccess)
									{
										countSuccess += text4.Split(',').Length;
									}
									Interlocked.Decrement(ref iThread);
								}).Start();
							}
							else
							{
								Thread.Sleep(100);
							}
						}
						while (iThread > 0)
						{
							Thread.Sleep(100);
						}
						if (listImageBackup.Count > 0)
						{
							lock (_lock2)
							{
								Directory.CreateDirectory("backup\\" + cellAccount2);
								File.WriteAllLines("backup\\" + cellAccount2 + "\\" + cellAccount2 + ".txt", listImageBackup);
							}
						}
						else
						{
							CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", Language.GetValue("Không backup đươ\u0323c!"));
						}
					}
					else
					{
						CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", Language.GetValue("Không backup đươ\u0323c!"));
					}
					CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", Language.GetValue("Backup bình luận..."));
					List<string> myListComments = CommonRequest.GetMyListComments(cookie, useragent, proxy, typeProxy);
					lock (_lock3)
					{
						Directory.CreateDirectory("backup\\" + cellAccount2);
						File.WriteAllLines("backup\\" + cellAccount2 + "\\lscomment.txt", myListComments);
					}
					CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", Language.GetValue("Backup nhă\u0301n tin gâ\u0300n đây..."));
					List<string> myListUidMessage = CommonRequest.GetMyListUidMessage(cookie, useragent, proxy, typeProxy);
					lock (_lock4)
					{
						Directory.CreateDirectory("backup\\" + cellAccount2);
						File.WriteAllLines("backup\\" + cellAccount2 + "\\banbeinbox.txt", myListUidMessage);
					}
					CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", Language.GetValue("Đa\u0303 backup xong") + ": " + countSuccess + "!");
					string text3 = DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss");
					CommonSQL.UpdateMultiFieldToAccount(cellAccount, "uid|token|name|birthday|backup|info", cellAccount2 + "|" + token + "|" + text2 + "|" + text + "|" + text3 + "|Live", isAllowEmptyValue: false);
					SetCellAccount(indexRow, "cUid", cellAccount2);
					SetCellAccount(indexRow, "cToken", token);
					SetCellAccount(indexRow, "cName", text2, isAllowEmptyValue: false);
					SetCellAccount(indexRow, "cBirthday", text);
					SetCellAccount(indexRow, "cInfo", "Live");
					SetCellAccount(indexRow, "cBackup", text3);
				}
				else
				{
					CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", Language.GetValue("Không backup được: Token/Cookie die!"));
				}
			}
			catch
			{
				CommonCSharp.UpdateStatusDataGridView(dtgvAcc, indexRow, "cStatus", Language.GetValue("Lỗi backup!"));
			}
		}

		private void LoadSetting()
		{
			setting_general = new JSON_Settings("configGeneral");
			setting_Interact = new JSON_Settings("configInteract");
			setting_InteractGeneral = new JSON_Settings("configInteractGeneral");
			if (Program.intro != 0)
			{
				Settings.Default.PathChrome = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\Chrome.exe";
				Settings.Default.Save();
			}
		}

		private void taoFileHTMLToolStripMenuItem_Click(object sender, EventArgs e)
		{
			LoadSetting();
			string template = Base.template_backup;
			int iThread = 0;
			int maxThread = 10;
			new Thread((ThreadStart)delegate
			{
				try
				{
					int num = 0;
					while (num < dtgvAcc.Rows.Count)
					{
						if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
						{
							if (iThread < maxThread)
							{
								Interlocked.Increment(ref iThread);
								int row = num++;
								new Thread((ThreadStart)delegate
								{
									try
									{
										CreateAndCopyHtmlFromBackupTxt(row, template);
										Interlocked.Decrement(ref iThread);
									}
									catch (Exception ex2)
									{
										CommonCSharp.ExportError(null, ex2.ToString());
									}
								}).Start();
							}
							else
							{
								CommonCSharp.DelayTime(1.0);
							}
						}
						else
						{
							num++;
						}
					}
					while (iThread > 0)
					{
						CommonCSharp.DelayTime(1.0);
					}
				}
				catch (Exception ex)
				{
					CommonCSharp.ExportError(null, ex.ToString());
				}
			}).Start();
		}

		private void CreateAndCopyHtmlFromBackupTxt(int row, string template, bool isOpen = false, string pathDestination = "")
		{
			//Discarded unreachable code: IL_0cb2, IL_0d05
			try
			{
				string text = "";
				string statusDataGridView = CommonCSharp.GetStatusDataGridView(dtgvAcc, row, "cCookie");
				string text2 = dtgvAcc.Rows[row].Cells["cUid"].Value.ToString();
				if (text2 == "")
				{
					text2 = Regex.Match(statusDataGridView, "c_user=(.*?);").Groups[1].Value;
				}
				text = ((!File.Exists("backup\\" + text2 + "\\ngaysinh.txt")) ? "||" : File.ReadAllText("backup\\" + text2 + "\\ngaysinh.txt"));
				CommonCSharp.UpdateStatusDataGridView(dtgvAcc, row, "cStatus", Language.GetValue("Đang tạo file Html..."));
				if (text2 != "")
				{
					string text3 = text.Split('|')[2].Replace("\\", "\\\\").Replace("\"", "\\\"").Replace("'", "\\'");
					string text4 = text.Split('|')[1];
					if (text3 == "")
					{
						text3 = "NoName";
					}
					if (text4 == "")
					{
						text4 = "00/00/0000";
					}
					template = template.Replace("{{uid}}", text2).Replace("{{birthday}}", text4).Replace("{{name}}", text3);
					string text5 = "backup\\" + text2;
					if (!Directory.Exists(text5))
					{
						return;
					}
					if (File.Exists(text5 + "\\lscomment.txt"))
					{
						string text6 = "";
						List<string> list = File.ReadAllLines(text5 + "\\lscomment.txt").ToList();
						int count = list.Count;
						for (int i = 0; i < count; i++)
						{
							text6 = text6 + "\"" + list[i].Replace("\\", "\\\\").Replace("\"", "\\\"").Replace("'", "\\'") + "\",";
						}
						if (text6 != "")
						{
							text6 = text6.Remove(text6.Length - 1, 1);
							template = template.Replace("{comments}", text6);
						}
						else
						{
							template = template.Replace("{comments}", "");
						}
					}
					else
					{
						template = template.Replace("{comments}", "");
					}
					if (File.Exists(text5 + "\\banbeinbox.txt"))
					{
						string text7 = "";
						List<string> list2 = File.ReadAllLines(text5 + "\\banbeinbox.txt").ToList();
						int count2 = list2.Count;
						for (int j = 0; j < count2; j++)
						{
							text7 = text7 + "\"" + list2[j].Replace("\\", "\\\\").Replace("\"", "\\\"").Replace("'", "\\'") + "\",";
						}
						if (text7 != "")
						{
							text7 = text7.Remove(text7.Length - 1, 1);
							template = template.Replace("{messages}", text7);
						}
						else
						{
							template = template.Replace("{messages}", "");
						}
					}
					else
					{
						template = template.Replace("{messages}", "");
					}
					if (File.Exists(text5 + "\\" + text2 + ".txt"))
					{
						string text8 = "";
						string text9 = "";
						string text10 = File.ReadAllText(text5 + "\\" + text2 + ".txt");
						string[] array = text10.Split(new string[1] { Environment.NewLine + Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries);
						for (int k = 0; k < array.Length; k++)
						{
							string[] array2 = array[k].Split(new string[1] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries);
							if (array2.Length != 0)
							{
								text9 = "";
								for (int l = 0; l < array2.Length; l++)
								{
									string[] array3 = array2[l].Split('*');
									text9 = text9 + "\"" + array3[2].Split('|')[0] + "\",";
								}
								text9 = text9.Remove(text9.Length - 1, 1);
								text8 = text8 + "{\"uid\":\"" + array2[0].Split('*')[0] + "\",\"name\":\"" + array2[0].Split('*')[1] + "\",\"photos\":[" + text9 + "],\"show\":true},";
							}
						}
						text8 = text8.Remove(text8.Length - 1, 1);
						template = template.Replace("{photos}", text8);
					}
					else
					{
						template = template.Replace("{photos}", "");
					}
					File.WriteAllText(text5 + "\\" + text2 + ".html", template);
					CommonCSharp.UpdateStatusDataGridView(dtgvAcc, row, "cStatus", Language.GetValue("Ta\u0323o tha\u0300nh công!"));
					return;
				}
				CommonCSharp.UpdateStatusDataGridView(dtgvAcc, row, "cStatus", Language.GetValue("Không co\u0301 uid!"));
			}
			catch
			{
				CommonCSharp.UpdateStatusDataGridView(dtgvAcc, row, "cStatus", Language.GetValue("Lô\u0303i ta\u0323o file!"));
			}
		}

		private bool CreateHTML(string uid, string template, string pathFolder = "backup\\")
		{
			//Discarded unreachable code: IL_0b58, IL_0b65
			bool result = false;
			try
			{
				string text = "";
				text = ((!File.Exists(pathFolder + "\\" + uid + "\\ngaysinh.txt")) ? "||" : File.ReadAllText(pathFolder + "\\" + uid + "\\ngaysinh.txt"));
				if (uid != "")
				{
					string text2 = text.Split('|')[2].Replace("\\", "\\\\").Replace("\"", "\\\"").Replace("'", "\\'");
					string text3 = text.Split('|')[1];
					if (text2 == "")
					{
						text2 = "NoName";
					}
					if (text3 == "")
					{
						text3 = "00/00/0000";
					}
					template = template.Replace("{{uid}}", uid).Replace("{{birthday}}", text3).Replace("{{name}}", text2);
					string text4 = pathFolder + "\\" + uid;
					if (Directory.Exists(text4))
					{
						if (File.Exists(text4 + "\\lscomment.txt"))
						{
							string text5 = "";
							List<string> list = File.ReadAllLines(text4 + "\\lscomment.txt").ToList();
							int count = list.Count;
							for (int i = 0; i < count; i++)
							{
								text5 = text5 + "\"" + list[i].Replace("\\", "\\\\").Replace("\"", "\\\"").Replace("'", "\\'") + "\",";
							}
							if (text5 != "")
							{
								text5 = text5.Remove(text5.Length - 1, 1);
								template = template.Replace("{comments}", text5);
							}
							else
							{
								template = template.Replace("{comments}", "");
							}
						}
						else
						{
							template = template.Replace("{comments}", "");
						}
						if (File.Exists(text4 + "\\banbeinbox.txt"))
						{
							string text6 = "";
							List<string> list2 = File.ReadAllLines(text4 + "\\banbeinbox.txt").ToList();
							int count2 = list2.Count;
							for (int j = 0; j < count2; j++)
							{
								text6 = text6 + "\"" + list2[j].Replace("\\", "\\\\").Replace("\"", "\\\"").Replace("'", "\\'") + "\",";
							}
							if (text6 != "")
							{
								text6 = text6.Remove(text6.Length - 1, 1);
								template = template.Replace("{messages}", text6);
							}
							else
							{
								template = template.Replace("{messages}", "");
							}
						}
						else
						{
							template = template.Replace("{messages}", "");
						}
						if (File.Exists(text4 + "\\" + uid + ".txt"))
						{
							string text7 = "";
							string text8 = "";
							string text9 = File.ReadAllText(text4 + "\\" + uid + ".txt");
							string[] array = text9.Split(new string[1] { Environment.NewLine + Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries);
							for (int k = 0; k < array.Length; k++)
							{
								string[] array2 = array[k].Split(new string[1] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries);
								if (array2.Length != 0)
								{
									text8 = "";
									for (int l = 0; l < array2.Length; l++)
									{
										string[] array3 = array2[l].Split('*');
										text8 = text8 + "\"" + array3[2].Split('|')[0] + "\",";
									}
									text8 = text8.Remove(text8.Length - 1, 1);
									text7 = text7 + "{\"uid\":\"" + array2[0].Split('*')[0] + "\",\"name\":\"" + array2[0].Split('*')[1] + "\",\"photos\":[" + text8 + "],\"show\":true},";
								}
							}
							text7 = text7.Remove(text7.Length - 1, 1);
							template = template.Replace("{photos}", text7);
						}
						else
						{
							template = template.Replace("{photos}", "");
						}
						File.WriteAllText(text4 + "\\" + uid + ".html", template);
						result = true;
					}
				}
			}
			catch
			{
			}
			return result;
		}

		private void mơFileHTMLToolStripMenuItem_Click(object sender, EventArgs e)
		{
			int iThread = 0;
			int maxThread = 10;
			new Thread((ThreadStart)delegate
			{
				try
				{
					int num = 0;
					while (num < dtgvAcc.Rows.Count)
					{
						if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
						{
							if (iThread < maxThread)
							{
								Interlocked.Increment(ref iThread);
								int row = num++;
								new Thread((ThreadStart)delegate
								{
									try
									{
										string statusDataGridView = CommonCSharp.GetStatusDataGridView(dtgvAcc, row, "cCookies");
										string text = CommonCSharp.GetStatusDataGridView(dtgvAcc, row, "cUid");
										if (text == "")
										{
											text = Regex.Match(statusDataGridView, "c_user=(.*?);").Groups[1].Value;
										}
										if (File.Exists("backup\\" + text + "\\" + text + ".html"))
										{
											Process.Start(Path.GetDirectoryName(Application.ExecutablePath) + "\\backup\\" + text + "\\" + text + ".html");
										}
										else
										{
											CommonCSharp.UpdateStatusDataGridView(dtgvAcc, row, "cStatus", Language.GetValue("Chưa tạo html!"));
										}
										Interlocked.Decrement(ref iThread);
									}
									catch (Exception ex2)
									{
										CommonCSharp.ExportError(null, ex2.ToString());
									}
								}).Start();
							}
							else
							{
								CommonCSharp.DelayTime(1.0);
							}
						}
						else
						{
							num++;
						}
					}
					while (iThread > 0)
					{
						CommonCSharp.DelayTime(1.0);
					}
				}
				catch (Exception ex)
				{
					CommonCSharp.ExportError(null, ex.ToString());
				}
			}).Start();
		}

		private void htmlToolStripMenuItem_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_0223, IL_0230, IL_023c, IL_0249
			MCommon.Common.ShowForm(new fSelectFolder());
			string pathFolder = fSelectFolder.pathFolder;
			if (pathFolder == "")
			{
				return;
			}
			int num = 0;
			for (int i = 0; i < dtgvAcc.Rows.Count; i++)
			{
				try
				{
					if (!Convert.ToBoolean(dtgvAcc.Rows[i].Cells["cChose"].Value))
					{
						continue;
					}
					string text = dtgvAcc.Rows[i].Cells["cUid"].Value.ToString();
					try
					{
						if (File.Exists(FileHelper.GetPathToCurrentFolder() + "\\backup\\" + text + "\\" + text + ".html"))
						{
							File.Copy("backup\\" + text + "\\" + text + ".html", pathFolder + "\\" + text + ".html");
							num++;
						}
					}
					catch
					{
					}
				}
				catch
				{
				}
			}
			MessageBoxHelper.ShowMessageBox(string.Format(Language.GetValue("Copy thành công {0} tệp backup html!"), num));
		}

		private void thưMụcToolStripMenuItem_Click_1(object sender, EventArgs e)
		{
			CopyFolder(ConfigHelper.GetPathBackup());
		}

		private void button4_Click(object sender, EventArgs e)
		{
			try
			{
				if (CountChooseRowInDatagridview() == 0)
				{
					MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lo\u0300ng cho\u0323n như\u0303ng ta\u0300i khoa\u0309n muô\u0301n Đổi thông tin!"), 3);
					return;
				}
				List<string> list = new List<string>();
				for (int i = 0; i < dtgvAcc.RowCount; i++)
				{
					if (Convert.ToBoolean(dtgvAcc.Rows[i].Cells["cChose"].Value))
					{
						DataGridViewRow dataGridViewRow = dtgvAcc.Rows[i];
						try
						{
							list.Add(dataGridViewRow.Cells["cStt"].Value.ToString() + "|" + dataGridViewRow.Cells["cId"].Value.ToString() + "|" + dataGridViewRow.Cells["cUid"].Value.ToString() + "|" + dataGridViewRow.Cells["cCookies"].Value.ToString() + "|" + dataGridViewRow.Cells["cName"].Value.ToString() + "|" + dataGridViewRow.Cells["cBirthday"].Value.ToString() + "|" + dataGridViewRow.Cells["cGender"].Value.ToString() + "|" + dataGridViewRow.Cells["cPassword"].Value.ToString() + "|" + dataGridViewRow.Cells["cFa2"].Value.ToString() + "|" + dataGridViewRow.Cells["cUseragent"].Value.ToString() + "|" + dataGridViewRow.Cells["cProxy"].Value.ToString() + "|" + dataGridViewRow.Cells["cInfo"].Value.ToString());
						}
						catch
						{
						}
					}
				}
				MCommon.Common.ShowForm(new fchange(list));
				if (fchange.isAdd)
				{
					LoadAccountFromFile(GetIdFile(), cbbTinhTrang.Text);
				}
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(null, ex, "Open Form Change");
			}
		}

		private void dtgvAcc_SortCompare(object sender, DataGridViewSortCompareEventArgs e)
		{
			//Discarded unreachable code: IL_0523, IL_0561
			List<string> list = new List<string> { "cStt", "cFriend", "cGroup", "cFollow" };
			if (list.Contains(e.Column.Name))
			{
				e.SortResult = int.Parse((e.CellValue1.ToString() == "") ? "-1" : e.CellValue1.ToString()).CompareTo(int.Parse((e.CellValue2.ToString() == "") ? "-1" : e.CellValue2.ToString()));
				e.Handled = true;
			}
			else if (e.Column.Name == "cBirthday")
			{
				string text = e.CellValue1.ToString();
				string text2 = e.CellValue2.ToString();
				int num = int.Parse((text == "") ? "-1" : ((text.Split('/').Length >= 3) ? text.Split('/')[2] : "-1"));
				int value = int.Parse((text2 == "") ? "-1" : ((text2.Split('/').Length >= 3) ? text2.Split('/')[2] : "-1"));
				e.SortResult = num.CompareTo(value);
				e.Handled = true;
			}
			else if (e.Column.Name == "cDateCreateAcc")
			{
				try
				{
					string text3 = e.CellValue1.ToString();
					string text4 = e.CellValue2.ToString();
					int num2 = int.Parse((text3 == "") ? "-1" : ((text3.Split(',').Length >= 2) ? text3.Split(',')[1] : "-1"));
					int value2 = int.Parse((text4 == "") ? "-1" : ((text4.Split(',').Length >= 2) ? text4.Split(',')[1] : "-1"));
					e.SortResult = num2.CompareTo(value2);
					e.Handled = true;
				}
				catch (Exception)
				{
					e.SortResult = -1.CompareTo(-1);
					e.Handled = true;
				}
			}
			else
			{
				e.SortResult = ((e.CellValue1.ToString() == "") ? "" : e.CellValue1.ToString()).CompareTo((e.CellValue2.ToString() == "") ? "" : e.CellValue2.ToString());
				e.Handled = true;
			}
		}

		private void câuHinhHiênThiToolStripMenuItem_Click(object sender, EventArgs e)
		{
			string fullString = new JSON_Settings("configDatagridview").GetFullString();
			MCommon.Common.ShowForm(new fCauHinhHienThi());
			if (fullString != new JSON_Settings("configDatagridview").GetFullString())
			{
				LoadConfigManHinh();
			}
		}

		private void button6_Click(object sender, EventArgs e)
		{
			if (CountChooseRowInDatagridview() == 0)
			{
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lo\u0300ng cho\u0323n như\u0303ng ta\u0300i khoa\u0309n muô\u0301n nhâ\u0323p Useragent!"), 3);
			}
			else
			{
				MCommon.Common.ShowForm(new fImportUseragent());
			}
		}

		private void useragentToolStripMenuItem_Click(object sender, EventArgs e)
		{
			OpenFormUpdate("Useragent");
		}

		private void button7_Click(object sender, EventArgs e)
		{
			if (CountChooseRowInDatagridview() == 0)
			{
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lo\u0300ng cho\u0323n như\u0303ng ta\u0300i khoa\u0309n muô\u0301n nhâ\u0323p Proxy!"), 3);
			}
			else
			{
				MCommon.Common.ShowForm(new fImportProxy());
			}
		}

		private void checkProxyToolStripMenuItem_Click(object sender, EventArgs e)
		{
			int iThread = 0;
			int maxThread = setting_general.GetValueInt("nudHideThread", 10);
			isStop = false;
			new Thread((ThreadStart)delegate
			{
				cControl("start");
				int num = 0;
				while (num < dtgvAcc.Rows.Count)
				{
					Application.DoEvents();
					if (isStop)
					{
						break;
					}
					if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
					{
						if (iThread < maxThread)
						{
							Interlocked.Increment(ref iThread);
							int row = num++;
							new Thread((ThreadStart)delegate
							{
								SetStatusAccount(row, Language.GetValue("Đang kiểm tra..."));
								CheckProxy(row);
								Interlocked.Decrement(ref iThread);
							}).Start();
						}
						else
						{
							Application.DoEvents();
							Thread.Sleep(200);
						}
					}
					else
					{
						num++;
					}
				}
				int tickCount = Environment.TickCount;
				while (iThread > 0 && Environment.TickCount - tickCount <= 30000)
				{
					Application.DoEvents();
					Thread.Sleep(300);
				}
				cControl("stop");
			}).Start();
		}

		private void CheckProxy(int row)
		{
			//Discarded unreachable code: IL_01ca, IL_01fe
			try
			{
				string text = dtgvAcc.Rows[row].Cells["cProxy"].Value.ToString();
				int typeProxy = 0;
				if (text.EndsWith("*1"))
				{
					typeProxy = 1;
				}
				text = text.Substring(0, text.Length - 2);
				int num = 0;
				int num2 = 0;
				string text2 = "";
				bool flag = false;
				for (int i = 0; i < 10; i++)
				{
					text2 = MCommon.Common.CheckProxy(text, typeProxy);
					if (text2 != "")
					{
						num++;
						if (num == 3)
						{
							flag = true;
							break;
						}
					}
					else
					{
						num2++;
						if (num2 == 3)
						{
							break;
						}
					}
				}
				if (!flag)
				{
					SetStatusAccount(row, "Proxy Die!");
				}
				else
				{
					SetStatusAccount(row, "Proxy Live!");
				}
			}
			catch
			{
				SetStatusAccount(row, "Lỗi!");
			}
		}

		private void proxyToolStripMenuItem_Click(object sender, EventArgs e)
		{
			OpenFormUpdate("Proxy");
		}

		private void useragentToolStripMenuItem1_Click(object sender, EventArgs e)
		{
			CopyRowDatagrid("useragent");
		}

		private void proxyToolStripMenuItem1_Click(object sender, EventArgs e)
		{
			CopyRowDatagrid("proxy");
		}

		private void GiaiCheckpoint(object data, int indexPos, int dangCheckPoint, string profilePath)
		{
			//Discarded unreachable code: IL_0384, IL_0398, IL_0684, IL_0699, IL_0794, IL_07a8, IL_0b43, IL_0b58, IL_0cfc, IL_0d10, IL_0ffc, IL_1011, IL_10f6, IL_110a, IL_1481, IL_1496, IL_157b, IL_158f, IL_187b, IL_1890, IL_2d30, IL_2dab, IL_2db6, IL_2e16, IL_2f3d, IL_2f4a, IL_3055, IL_306a
			int num = (int)data;
			Chrome chrome = null;
			string text = "";
			int num2 = 0;
			string text2 = GetCellAccount(num, "cUid");
			string cellAccount = GetCellAccount(num, "cId");
			string cellAccount2 = GetCellAccount(num, "cFa2");
			string cellAccount3 = GetCellAccount(num, "cPassword");
			string cellAccount4 = GetCellAccount(num, "cCookies");
			string cellAccount5 = GetCellAccount(num, "cToken");
			string text3 = GetCellAccount(num, "cUseragent");
			string cellAccount6 = GetCellAccount(num, "cEmail");
			string cellAccount7 = GetCellAccount(num, "cPassMail");
			if (text2 == "")
			{
				text2 = Regex.Match(cellAccount4, "c_user=(.*?);").Groups[1].Value;
			}
			string text4 = "";
			TinsoftProxy tinsoftProxy = null;
			XproxyProxy xproxyProxy = null;
			TMProxy tMProxy = null;
			ProxyWeb proxyWeb = null;
			ShopLike shopLike = null;
			int typeProxy = 0;
			string text5 = "";
			while (true)
			{
				if (isStop)
				{
					SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
					num2 = 1;
					break;
				}
				switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
				{
					case 7:
						SetStatusAccount(num, "Đang lấy proxy Tinsoft...");
						lock (lock_StartProxy)
						{
							while (!isStop)
							{
								tinsoftProxy = null;
								while (!isStop)
								{
									foreach (TinsoftProxy item in listTinsoft)
									{
										if (tinsoftProxy == null || item.daSuDung < tinsoftProxy.daSuDung)
										{
											tinsoftProxy = item;
										}
									}
									if (tinsoftProxy.daSuDung != tinsoftProxy.limit_theads_use)
									{
										break;
									}
								}
								if (isStop)
								{
									break;
								}
								if (tinsoftProxy.daSuDung > 0 || tinsoftProxy.ChangeProxy())
								{
									text = tinsoftProxy.proxy;
									if (text == "")
									{
										text = tinsoftProxy.GetProxy();
									}
									tinsoftProxy.dangSuDung++;
									tinsoftProxy.daSuDung++;
									break;
								}
								bool flag11 = true;
							}
							if (isStop)
							{
								SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
								num2 = 1;
								break;
							}
							bool flag12 = true;
							if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
							{
								SetStatusAccount(num, text4 + "Delay check IP...");
								MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
							}
							if (!setting_general.GetValueBool("ckbKhongCheckIP"))
							{
								text4 = "(IP: " + text.Split(':')[0] + ") ";
								SetStatusAccount(num, text4 + "Check IP...");
								text5 = MCommon.Common.CheckProxy(text, 0);
								if (text5 == "")
								{
									flag12 = false;
								}
							}
							if (!flag12)
							{
								tinsoftProxy.dangSuDung--;
								tinsoftProxy.daSuDung--;
								continue;
							}
							goto default;
						}
					case 8:
						SetStatusAccount(num, Language.GetValue("Đang lấy Proxy..."));
						lock (lock_StartProxy)
						{
							while (!isStop)
							{
								xproxyProxy = null;
								while (!isStop)
								{
									foreach (XproxyProxy item2 in listxProxy)
									{
										if (xproxyProxy == null || (item2.isProxyLive && item2.daSuDung < xproxyProxy.daSuDung))
										{
											xproxyProxy = item2;
										}
									}
									if (xproxyProxy.daSuDung != xproxyProxy.limit_theads_use)
									{
										break;
									}
								}
								if (isStop)
								{
									break;
								}
								if (xproxyProxy.isProxyLive && (xproxyProxy.daSuDung > 0 || xproxyProxy.ChangeProxy()))
								{
									text = xproxyProxy.proxy;
									typeProxy = xproxyProxy.typeProxy;
									xproxyProxy.dangSuDung++;
									xproxyProxy.daSuDung++;
									break;
								}
								xproxyProxy.isProxyLive = false;
								bool flag7 = true;
							}
							if (isStop)
							{
								SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
								num2 = 1;
								break;
							}
							bool flag8 = true;
							if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
							{
								SetStatusAccount(num, text4 + "Delay check IP...");
								MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
							}
							if (!setting_general.GetValueBool("ckbKhongCheckIP"))
							{
								text4 = "(IP: " + text.Split(':')[0] + ") ";
								SetStatusAccount(num, text4 + "Check IP...");
								int num4 = 0;
								while (true)
								{
									if (num4 >= 30)
									{
										goto IL_0ad2;
									}
									MCommon.Common.DelayTime(1.0);
									text5 = MCommon.Common.CheckProxy(text, typeProxy);
									if (text5 != "")
									{
										goto IL_0ad2;
									}
									if (isStop)
									{
										SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
										num2 = 1;
										goto end_IL_0288;
									}
									num4++;
									continue;
								IL_0ad2:
									if (text5 == "")
									{
										flag8 = false;
									}
									break;
								}
							}
							if (!flag8)
							{
								xproxyProxy.dangSuDung--;
								xproxyProxy.daSuDung--;
								continue;
							}
							goto default;
						}
					case 9:
						text = GetCellAccount(num, "cProxy");
						typeProxy = (text.EndsWith("*1") ? 1 : 0);
						if (text.EndsWith("*0") || text.EndsWith("*1"))
						{
							text = text.Substring(0, text.Length - 2);
						}
						goto default;
					case 10:
						SetStatusAccount(num, "Đang lấy TMProxy...");
						lock (lock_StartProxy)
						{
							while (!isStop)
							{
								tMProxy = null;
								while (!isStop)
								{
									foreach (TMProxy item3 in listTMProxy)
									{
										if (tMProxy == null || item3.daSuDung < tMProxy.daSuDung)
										{
											tMProxy = item3;
										}
									}
									if (tMProxy.daSuDung != tMProxy.limit_theads_use)
									{
										break;
									}
								}
								if (isStop)
								{
									break;
								}
								if (tMProxy.daSuDung > 0 || tMProxy.ChangeProxy())
								{
									text = tMProxy.proxy;
									if (text == "")
									{
										text = tMProxy.GetProxy();
									}
									tMProxy.dangSuDung++;
									tMProxy.daSuDung++;
									break;
								}
								bool flag5 = true;
							}
							if (isStop)
							{
								SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
								num2 = 1;
								break;
							}
							bool flag6 = true;
							if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
							{
								SetStatusAccount(num, text4 + "Delay check IP...");
								MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
							}
							if (!setting_general.GetValueBool("ckbKhongCheckIP"))
							{
								text4 = "(IP: " + text.Split(':')[0] + ") ";
								SetStatusAccount(num, text4 + "Check IP...");
								text5 = MCommon.Common.CheckProxy(text, 0);
								if (text5 == "")
								{
									flag6 = false;
								}
							}
							if (!flag6)
							{
								tMProxy.dangSuDung--;
								tMProxy.daSuDung--;
								continue;
							}
							goto default;
						}
					case 11:
						SetStatusAccount(num, Language.GetValue("Đang lấy Proxyv6..."));
						lock (lock_StartProxy)
						{
							while (!isStop)
							{
								proxyWeb = null;
								while (!isStop)
								{
									foreach (ProxyWeb item4 in listProxyWeb)
									{
										if (proxyWeb == null || item4.daSuDung < proxyWeb.daSuDung)
										{
											proxyWeb = item4;
										}
									}
									if (proxyWeb.daSuDung != proxyWeb.limit_theads_use)
									{
										break;
									}
								}
								if (isStop)
								{
									break;
								}
								if (proxyWeb.daSuDung > 0 || proxyWeb.ChangeProxy())
								{
									text = proxyWeb.proxy;
									typeProxy = proxyWeb.typeProxy;
									proxyWeb.dangSuDung++;
									proxyWeb.daSuDung++;
									break;
								}
								bool flag3 = true;
							}
							if (isStop)
							{
								SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
								num2 = 1;
								break;
							}
							bool flag4 = true;
							if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
							{
								SetStatusAccount(num, text4 + "Delay check IP...");
								MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
							}
							if (!setting_general.GetValueBool("ckbKhongCheckIP"))
							{
								text4 = "(IP: " + text.Split(':')[0] + ") ";
								SetStatusAccount(num, text4 + "Check IP...");
								int num3 = 0;
								while (true)
								{
									if (num3 >= 30)
									{
										goto IL_1410;
									}
									MCommon.Common.DelayTime(1.0);
									text5 = MCommon.Common.CheckProxy(text, typeProxy);
									if (text5 != "")
									{
										goto IL_1410;
									}
									if (isStop)
									{
										SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
										num2 = 1;
										goto end_IL_0288;
									}
									num3++;
									continue;
								IL_1410:
									if (text5 == "")
									{
										flag4 = false;
									}
									break;
								}
							}
							if (!flag4)
							{
								proxyWeb.dangSuDung--;
								proxyWeb.daSuDung--;
								continue;
							}
							goto default;
						}
					case 12:
						SetStatusAccount(num, Language.GetValue("Đang lấy Proxy ShopLike ..."));
						lock (lock_StartProxy)
						{
							while (!isStop)
							{
								shopLike = null;
								while (!isStop)
								{
									foreach (ShopLike item5 in listShopLike)
									{
										if (shopLike == null || item5.daSuDung < shopLike.daSuDung)
										{
											shopLike = item5;
										}
									}
									if (shopLike.daSuDung != shopLike.limit_theads_use)
									{
										break;
									}
								}
								if (isStop)
								{
									break;
								}
								if (shopLike.daSuDung > 0 || shopLike.ChangeProxy())
								{
									text = shopLike.proxy;
									if (text == "")
									{
										text = shopLike.GetProxy();
									}
									shopLike.dangSuDung++;
									shopLike.daSuDung++;
									break;
								}
								bool flag = true;
							}
							if (isStop)
							{
								SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
								num2 = 1;
								break;
							}
							bool flag2 = true;
							if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
							{
								SetStatusAccount(num, text4 + "Delay check IP...");
								MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
							}
							if (!setting_general.GetValueBool("ckbKhongCheckIP"))
							{
								text4 = "(IP: " + text.Split(':')[0] + ") ";
								SetStatusAccount(num, text4 + "Check IP...");
								text5 = MCommon.Common.CheckProxy(text, 0);
								if (text5 == "")
								{
									flag2 = false;
								}
							}
							if (!flag2)
							{
								shopLike.dangSuDung--;
								shopLike.daSuDung--;
								continue;
							}
							goto default;
						}
					default:
						{
							if (!setting_general.GetValueBool("ckbKhongCheckIP"))
							{
								if (setting_general.GetValueInt("ip_iTypeChangeIp") == 7 || setting_general.GetValueInt("ip_iTypeChangeIp") == 8 || setting_general.GetValueInt("ip_iTypeChangeIp") == 10)
								{
									text4 = "(IP: " + text.Split(':')[0] + ") ";
								}
								else
								{
									if (text != "")
									{
										text4 = "(IP: " + text.Split(':')[0] + ") ";
									}
									SetStatusAccount(num, text4 + "Check IP...");
									bool flag9 = false;
									int num5 = 0;
									while (num5 < 30)
									{
										MCommon.Common.DelayTime(1.0);
										text5 = MCommon.Common.CheckProxy(text, typeProxy);
										if (text5 != "")
										{
											flag9 = true;
											break;
										}
										if (!isStop)
										{
											num5++;
											continue;
										}
										goto IL_1aeb;
									}
									if (!flag9)
									{
										if (text != "")
										{
											SetStatusAccount(num, text4 + "Không thể kết nối proxy!");
										}
										else
										{
											SetStatusAccount(num, text4 + "Không có kết nối Internet!");
										}
										num2 = 1;
										break;
									}
									text4 = "(IP: " + text5 + ") ";
								}
							}
							try
							{
								SetStatusAccount(num, text4 + Language.GetValue("Đang mơ\u0309 tri\u0300nh duyê\u0323t..."));
								Point pointFromIndexPosition = MCommon.Common.GetPointFromIndexPosition(indexPos, Convert.ToInt32((setting_general.GetValue("cbbColumnChrome") == "") ? "3" : setting_general.GetValue("cbbColumnChrome")), Convert.ToInt32((setting_general.GetValue("cbbRowChrome") == "") ? "2" : setting_general.GetValue("cbbRowChrome")));
								Point sizeChrome = MCommon.Common.GetSizeChrome(Convert.ToInt32((setting_general.GetValue("cbbColumnChrome") == "") ? "3" : setting_general.GetValue("cbbColumnChrome")), Convert.ToInt32((setting_general.GetValue("cbbRowChrome") == "") ? "2" : setting_general.GetValue("cbbRowChrome")));
								bool flag10 = false;
								try
								{
									string app = "data:,";
									if (text3 == "" || text.Split(':').Length == 4)
									{
										text3 = Base.useragentDefault;
									}
									string text6 = "";
									if (profilePath != "" && text2 != "")
									{
										text6 = profilePath + "\\" + text2;
										if (!setting_InteractGeneral.GetValueBool("ckbCreateProfile") && !Directory.Exists(text6))
										{
											text6 = "";
										}
									}
									chrome = new Chrome
									{
										DisableImage = false,
										UserAgent = text3,
										ProfilePath = text6,
										Size = sizeChrome,
										Position = pointFromIndexPosition,
										App = app,
										TimeWaitForSearchingElement = 3,
										TimeWaitForLoadingPage = 60,
										Proxy = text,
										TypeProxy = typeProxy,
										IsUsePortable = setting_general.GetValueBool("ckbUsePortable"),
										PathToPortableZip = setting_general.GetValue("txtPathToPortableZip")
									};
									if (isStop)
									{
										SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
										num2 = 1;
										break;
									}
									if (setting_general.GetValueInt("typeBrowser") != 0)
									{
										chrome.LinkToOtherBrowser = setting_general.GetValue("txtLinkToOtherBrowser");
									}
									int num6 = 0;
									while (true)
									{
										if (!chrome.Open())
										{
											SetStatusAccount(num, text4 + Language.GetValue("Lỗi mở trình duyệt!"));
											num2 = 1;
											break;
										}
										chrome.ExecuteScript("document.title=\"proxyauth=" + text + "\"");
										if (!setting_general.GetValueBool("ckbKhongCheckIP") && text.Split(':').Length > 1)
										{
											chrome.GotoURL("https://api.myip.com/");
											chrome.DelayTime(1.0);
											string pageSource = chrome.GetPageSource();
											if (!pageSource.Contains("ip"))
											{
												chrome.Close();
												num6++;
												if (num6 < 3)
												{
													continue;
												}
												MCommon.Common.SetStatusDataGridView(dtgvAcc, num, "cStatusAcc", text4 + "Lỗi kết nối proxy!");
												break;
											}
										}
										if (!chrome.GetURL().Contains("facebook"))
										{
										}
										chrome.GetProcess();
										SetStatusAccount(num, text4 + Language.GetValue("Đang đăng nhâ\u0323p..."));
										int num7 = 0;
										if (text6.Trim() != "")
										{
											num7 = CommonChrome.CheckLiveCookie(chrome, "https://m.facebook.com/");
										}
										if (num7 != 2)
										{
											flag10 = num7 == 1;
											if (!flag10)
											{
												switch (setting_InteractGeneral.GetValueInt("typeLogin"))
												{
													case 0:
														if (text2.Trim() == "" || cellAccount3.Trim() == "")
														{
															if (text2.Trim() == "")
															{
																SetStatusAccount(num, text4 + Language.GetValue("Không ti\u0300m thâ\u0301y UID!"));
															}
															else if (cellAccount3.Trim() == "")
															{
																SetStatusAccount(num, text4 + Language.GetValue("Không ti\u0300m thâ\u0301y Pass!"));
															}
															num2 = 1;
															goto end_IL_0288;
														}
														SetStatusAccount(num, text4 + Language.GetValue("Đăng nhâ\u0323p bă\u0300ng uid|pass..."));
														num7 = CommonChrome.LoginFacebookUsingUidPassWhenGiaiCP(chrome, text2, cellAccount3, cellAccount2, "https://m.facebook.com/");
														goto default;
													case 1:
														if (cellAccount6.Trim() == "" || cellAccount3.Trim() == "")
														{
															if (cellAccount6.Trim() == "")
															{
																SetStatusAccount(num, text4 + Language.GetValue("Không ti\u0300m thâ\u0301y Email!"));
															}
															else if (cellAccount3.Trim() == "")
															{
																SetStatusAccount(num, text4 + Language.GetValue("Không ti\u0300m thâ\u0301y Pass!"));
															}
															num2 = 1;
															goto end_IL_0288;
														}
														SetStatusAccount(num, text4 + Language.GetValue("Đăng nhâ\u0323p bă\u0300ng email|pass..."));
														num7 = CommonChrome.LoginFacebookUsingUidPassWhenGiaiCP(chrome, cellAccount6, cellAccount3, cellAccount2, "https://m.facebook.com/");
														goto default;
													case 2:
														if (cellAccount4.Trim() == "")
														{
															SetStatusAccount(num, text4 + Language.GetValue("Không ti\u0300m thâ\u0301y Cookie!"));
															num2 = 1;
															goto end_IL_0288;
														}
														SetStatusAccount(num, text4 + Language.GetValue("Đăng nhâ\u0323p bă\u0300ng cookie..."));
														num7 = Convert.ToInt32(CommonChrome.LoginFacebookUsingCookie(chrome, cellAccount4, "https://m.facebook.com/"));
														goto default;
													default:
														switch (num7)
														{
															case 1:
																flag10 = true;
																break;
															case -2:
																num2 = 2;
																goto end_IL_1f23;
														}
														break;
												}
											}
											if (flag10)
											{
												SetStatusAccount(num, text4 + Language.GetValue("Ta\u0300i khoa\u0309n Live!"));
												num2 = 1;
												break;
											}
											SetStatusAccount(num, text4 + Language.GetValue("Đang check..."));
										}
										else
										{
											int num8 = 0;
											while (chrome.CheckExistElement("#checkpointSubmitButton-actual-button", 3.0) == 1 && chrome.CheckExistElement("[name=\"password_new\"]") != 1 && !CommonChrome.IsCheckpointWhenLogin(chrome) && num8 != 7)
											{
												chrome.Click(1, "checkpointSubmitButton-actual-button");
												chrome.DelayThaoTacNho();
												num8++;
											}
										}
										switch (dangCheckPoint)
										{
											case 0:
												num7 = GiaiCheckpointNgaySinh(cellAccount, cellAccount2, num, text4, chrome);
												break;
											case 1:
											case 2:
												num7 = ((!chrome.GetURL().Contains("facebook.com/nt/screen/") && !chrome.GetURL().Contains("facebook.com/x/checkpoint/")) ? GiaiCheckpointOtpMailCu(cellAccount, cellAccount2, num, text4, chrome) : GiaiCheckpointOtpMailMoi(cellAccount, cellAccount2, num, text4, chrome));
												break;
											case 3:
												num7 = GiaiCheckpointOtpMailMbasic(cellAccount, cellAccount2, num, text4, chrome);
												break;
										}
										switch (num7)
										{
											case 0:
												SetStatusAccount(num, text4 + Language.GetValue("Không co\u0301 phương thư\u0301c gia\u0309i CP!"));
												break;
											case 1:
												SetStatusAccount(num, text4 + Language.GetValue("Tài khoản ở dạng CP khác!"));
												break;
											case 2:
												SetStatusAccount(num, text4 + Language.GetValue("Gia\u0309i checkpoint tha\u0300nh công!"));
												cellAccount4 = chrome.GetCookieFromChrome();
												SetCellAccount(num, "cCookies", cellAccount4);
												CommonSQL.UpdateFieldToAccount(cellAccount, "cookie", cellAccount4);
												break;
											case 3:
												SetStatusAccount(num, text4 + Language.GetValue("Gia\u0309i checkpoint thâ\u0301t ba\u0323i!"));
												break;
											case 4:
												SetStatusAccount(num, text4 + Language.GetValue("Fb không gửi mã về mail!"));
												break;
										}
										num2 = 1;
										break;
									}
								end_IL_1f23:;
								}
								catch (Exception ex)
								{
									if (CommonChrome.IsCheckpoint(chrome))
									{
										num2 = 3;
									}
									else
									{
										SetStatusAccount(num, text4 + Language.GetValue("Lô\u0303i đăng nhâ\u0323p!"));
										num2 = 1;
									}
									MCommon.Common.ExportError(chrome, ex, "Login Error!");
								}
							}
							catch (Exception ex2)
							{
								SetStatusAccount(num, text4 + Language.GetValue("Lô\u0303i không xa\u0301c đi\u0323nh!"));
								num2 = 1;
								MCommon.Common.ExportError(chrome, ex2);
							}
							break;
						}
					IL_1aeb:
						SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
						num2 = 1;
						break;
					end_IL_0288:
						break;
				}
				break;
			}
			switch (num2)
			{
				case 2:
					SetStatusAccount(num, text4 + Language.GetValue("Không ti\u0300m thâ\u0301y chrome!"));
					break;
				case 3:
					SetStatusAccount(num, text4 + "Checkpoint!");
					SetInfoAccount(cellAccount, num, "Die");
					break;
				default:
					if (CommonChrome.IsCheckpoint(chrome))
					{
						SetStatusAccount(num, text4 + "Checkpoint!");
						SetInfoAccount(cellAccount, num, "Die");
					}
					break;
				case 1:
					break;
			}
			try
			{
				chrome.Close();
			}
			catch
			{
			}
			lock (lock_FinishProxy)
			{
				switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
				{
					case 7:
						tinsoftProxy?.DecrementDangSuDung();
						break;
					case 8:
						xproxyProxy?.DecrementDangSuDung();
						break;
					case 10:
						tMProxy?.DecrementDangSuDung();
						break;
					case 11:
						proxyWeb?.DecrementDangSuDung();
						break;
					case 12:
						shopLike?.DecrementDangSuDung();
						break;
					case 9:
						break;
				}
			}
		}

		private int GiaiCheckpointOtpMailMbasic(string id, string fa2, int indexRow, string statusProxy, Chrome chrome)
		{
			//Discarded unreachable code: IL_1ddf, IL_1dec
			int result = 0;
			string text = "";
			string cellAccount = GetCellAccount(indexRow, "cBirthday");
			try
			{
				chrome.GotoURL("https://mbasic.facebook.com");
				chrome.DelayTime(1.0);
				if (!chrome.GetURL().Contains("refsrc=deprecated") || chrome.CheckExistElement("[name=\"submit[Yes]\"]", 3.0) != 1)
				{
					goto IL_0318;
				}
				chrome.Click(2, "submit[Yes]");
				chrome.DelayTime(1.0);
				if (chrome.CheckExistElement("[name=\"password_new\"]", 10.0) != 1)
				{
					goto IL_0318;
				}
				text = MCommon.Common.CreateRandomString(10, rd);
				chrome.SendKeys(2, "password_new", text);
				chrome.DelayTime(2.0);
				chrome.Click(2, "submit[Next]");
				chrome.DelayTime(3.0);
				SetCellAccount(indexRow, "cPassword", text);
				CommonSQL.UpdateFieldToAccount(id, "pass", text);
				CommonChrome.GoToHome(chrome);
				if (CommonChrome.CheckLiveCookie(chrome) == 1)
				{
					SetInfoAccount(id, indexRow, "Live");
					result = 2;
				}
				else
				{
					result = 3;
				}
				goto end_IL_0044;
			IL_0318:
				if (chrome.CheckExistElement("[href*=\"stepper\"]", 15.0) == 1)
				{
					chrome.Click(4, "[href*=\"stepper\"]");
					chrome.DelayTime(1.0);
					switch (chrome.CheckExistElements(15.0, "[href*=\"challengechooser\"]", "[href*=\"intro\"]"))
					{
						case 1:
							{
								chrome.Click(4, "[href*=\"challengechooser\"]");
								chrome.DelayTime(1.0);
								int num = chrome.CheckExistElements(10.0, "#birthday_captcha", "#email_captcha");
								if (num == 1 && cellAccount != "")
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Gia\u0309i checkpoint ngày sinh..."));
									chrome.ExecuteScript("document.querySelector('#birthday_captcha').click()");
									chrome.DelayTime(1.0);
									chrome.Click(4, "[type=\"submit\"]");
									chrome.DelayTime(1.0);
									if (chrome.CheckExistElement("[name=\"day\"]", 10.0) == 1 && cellAccount != "")
									{
										chrome.SendKeys(2, "day", cellAccount.Split('/')[1]);
										chrome.DelayTime(1.0);
										chrome.SendKeys(2, "month", cellAccount.Split('/')[0]);
										chrome.DelayTime(1.0);
										chrome.SendKeys(2, "year", cellAccount.Split('/')[2]);
										chrome.DelayTime(1.0);
										chrome.Click(4, "[type=\"submit\"]");
										chrome.DelayTime(1.0);
										if (chrome.CheckExistElement("[href*=\"intro\"]", 10.0) == 1)
										{
											chrome.Click(4, "[href*=\"intro\"]");
											chrome.DelayTime(3.0);
											if (chrome.CheckExistElement("[href*=\"change_password\"]", 5.0) == 1)
											{
												chrome.Click(4, "[href*=\"change_password\"]");
												chrome.DelayTime(1.0);
												if (chrome.CheckExistElement("[name=\"pw\"]") == 1)
												{
													chrome.DelayTime(1.0);
													text = MCommon.Common.CreateRandomString(10, rd);
													chrome.SendKeys(4, "[name=\"pw\"]", text);
													chrome.DelayTime(2.0);
													chrome.Click(4, "[type=\"submit\"]");
													chrome.DelayTime(3.0);
													SetCellAccount(indexRow, "cPassword", text);
													CommonSQL.UpdateFieldToAccount(id, "pass", text);
													string cssSelector2 = chrome.GetCssSelector("a", "href", "/x/checkpoint/828281030927956/outro/?token");
													if (cssSelector2 != "")
													{
														SetInfoAccount(id, indexRow, "Live");
														chrome.Click(4, cssSelector2);
														chrome.DelayTime(3.0);
													}
													CommonChrome.GoToHome(chrome);
													if (CommonChrome.CheckLiveCookie(chrome) == 1)
													{
														SetInfoAccount(id, indexRow, "Live");
														result = 2;
													}
													else
													{
														result = 3;
													}
													break;
												}
											}
										}
									}
								}
								if (num != 2)
								{
									break;
								}
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Gia\u0309i checkpoint otp hotmail..."));
								chrome.ExecuteScript("document.querySelector('#email_captcha').click()");
								chrome.DelayTime(1.0);
								chrome.Click(4, "[type=\"submit\"]");
								chrome.DelayTime(1.0);
								string cellAccount2 = GetCellAccount(indexRow, "cEmail");
								string cellAccount3 = GetCellAccount(indexRow, "cPassMail");
								if (cellAccount2 == "" || cellAccount3 == "")
								{
									if (cellAccount2 == "")
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Không tìm thấy email!"));
									}
									else if (cellAccount3 == "")
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Không tìm thấy pass email!"));
									}
								}
								EmailHelper.DeleteMail(cellAccount2, cellAccount3);
								if (chrome.CountElement("input[type=\"radio\"]") > 1)
								{
									chrome.ExecuteScript("var email='" + cellAccount2 + "'; document.querySelectorAll('[dir=\"ltr\"]').forEach(e=>{if(e.innerText.split('@')[1]==email.split('@')[1] && e.innerText.startsWith(email.substring(0,1))) e.click()})");
								}
								chrome.Click(4, "[type=\"submit\"]");
								chrome.DelayTime(3.0);
								if (chrome.CheckExistElement("[name=\"code\"]", 10.0) != 1)
								{
									break;
								}
								chrome.DelayTime(3.0);
								while (true)
								{
									string otpFromMail = EmailHelper.GetOtpFromMail(1, cellAccount2, cellAccount3);
									if (otpFromMail == "block")
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Mail bị block, Thư\u0309 đô\u0309i IP rô\u0300i cha\u0323y la\u0323i!"));
										result = 4;
										break;
									}
									if (otpFromMail != "")
									{
										if (otpFromMail == "block")
										{
											SetStatusAccount(indexRow, statusProxy + Language.GetValue("Mail bị block, Thư\u0309 đô\u0309i IP rô\u0300i cha\u0323y la\u0323i!"));
											result = 4;
											break;
										}
										chrome.SendKeys(2, "code", otpFromMail);
										chrome.DelayTime(1.0);
										chrome.Click(4, "[type=\"submit\"]", 1);
										chrome.DelayTime(3.0);
										if (chrome.CheckExistElement("[name=\"code\"]") == 1)
										{
											continue;
										}
										if (chrome.CheckExistElement("[href*=\"intro\"]", 3.0) != 1)
										{
											break;
										}
										chrome.Click(4, "[href*=\"intro\"]");
										chrome.DelayTime(3.0);
										switch (chrome.CheckExistElements(5.0, "[href*=\"change_password\"]", "[href*=\"selection\"]"))
										{
											case 1:
												chrome.Click(4, "[href*=\"change_password\"]");
												chrome.DelayTime(1.0);
												if (chrome.CheckExistElement("[name=\"pw\"]", 5.0) == 1)
												{
													chrome.DelayTime(1.0);
													text = MCommon.Common.CreateRandomString(10, rd);
													chrome.SendKeys(4, "[name=\"pw\"]", text);
													chrome.DelayTime(2.0);
													chrome.Click(4, "[type=\"submit\"]");
													chrome.DelayTime(3.0);
													SetCellAccount(indexRow, "cPassword", text);
													CommonSQL.UpdateFieldToAccount(id, "pass", text);
													string cssSelector4 = chrome.GetCssSelector("a", "href", "/x/checkpoint/828281030927956/outro/?token");
													if (cssSelector4 != "")
													{
														SetInfoAccount(id, indexRow, "Live");
														chrome.Click(4, cssSelector4);
														chrome.DelayTime(3.0);
													}
													CommonChrome.GoToHome(chrome);
													if (CommonChrome.CheckLiveCookie(chrome) == 1)
													{
														SetInfoAccount(id, indexRow, "Live");
														result = 2;
													}
													else
													{
														result = 3;
													}
												}
												break;
											case 2:
												chrome.Click(4, "[href*=\"selection\"]");
												chrome.DelayTime(1.0);
												if (chrome.CheckExistElement("[name=\"skip\"]", 10.0) != 1)
												{
													break;
												}
												chrome.Click(2, "skip");
												chrome.DelayTime(1.0);
												if (chrome.CheckExistElement("[name=\"pw\"]", 5.0) == 1)
												{
													chrome.DelayTime(1.0);
													text = MCommon.Common.CreateRandomString(10, rd);
													chrome.SendKeys(4, "[name=\"pw\"]", text);
													chrome.DelayTime(2.0);
													chrome.Click(4, "[type=\"submit\"]");
													chrome.DelayTime(3.0);
													SetCellAccount(indexRow, "cPassword", text);
													CommonSQL.UpdateFieldToAccount(id, "pass", text);
													string cssSelector3 = chrome.GetCssSelector("a", "href", "/x/checkpoint/828281030927956/outro/?token");
													if (cssSelector3 != "")
													{
														SetInfoAccount(id, indexRow, "Live");
														chrome.Click(4, cssSelector3);
														chrome.DelayTime(3.0);
													}
													CommonChrome.GoToHome(chrome);
													if (CommonChrome.CheckLiveCookie(chrome) == 1)
													{
														SetInfoAccount(id, indexRow, "Live");
														result = 2;
													}
													else
													{
														result = 3;
													}
												}
												break;
										}
										break;
									}
									return 4;
								}
								break;
							}
						case 2:
							chrome.Click(4, "[href*=\"intro\"]");
							chrome.DelayTime(3.0);
							if (chrome.CheckExistElement("[href*=\"change_password\"]", 5.0) != 1)
							{
								break;
							}
							chrome.Click(4, "[href*=\"change_password\"]");
							chrome.DelayTime(1.0);
							if (chrome.CheckExistElement("[name=\"pw\"]") == 1)
							{
								chrome.DelayTime(1.0);
								text = MCommon.Common.CreateRandomString(10, rd);
								chrome.SendKeys(4, "[name=\"pw\"]", text);
								chrome.DelayTime(2.0);
								chrome.Click(4, "[type=\"submit\"]");
								chrome.DelayTime(3.0);
								SetCellAccount(indexRow, "cPassword", text);
								CommonSQL.UpdateFieldToAccount(id, "pass", text);
								string cssSelector = chrome.GetCssSelector("a", "href", "/x/checkpoint/828281030927956/outro/?token");
								if (cssSelector != "")
								{
									SetInfoAccount(id, indexRow, "Live");
									chrome.Click(4, cssSelector);
									chrome.DelayTime(3.0);
								}
								CommonChrome.GoToHome(chrome);
								if (CommonChrome.CheckLiveCookie(chrome) == 1)
								{
									SetInfoAccount(id, indexRow, "Live");
									result = 2;
								}
								else
								{
									result = 3;
								}
							}
							break;
					}
				}
			end_IL_0044:;
			}
			catch
			{
			}
			return result;
		}

		private int GiaiCheckpointNgaySinh(string id, string fa2, int indexRow, string statusProxy, Chrome chrome)
		{
			int result = 0;
			bool flag = false;
			string text = "";
			bool flag2 = false;
			int num = 0;
			int num2 = chrome.CheckExistElements(10.0, "[id=\"m_login_email\"]", "[name=\"verification_method\"]", "[name=\"submit[Yes]\"]", "[name=\"password_new\"]", "a[href=\"/checkpoint/dyi/create_file/\"]", "[name=\"send_code\"]", "section > div > div:nth-child(3) > div > div:nth-child(1) > div > fieldset > label");
			switch (num2)
			{
				case 0:
				case 1:
					result = 0;
					break;
				case 2:
				case 6:
				case 7:
					{
						List<string> list = chrome.ExecuteScript("var s='';document.getElementsByName('verification_method').forEach(element => {s+=element.value+'|'}); return s;").ToString().TrimEnd('|')
							.Split('|')
							.ToList();
						if (list.Contains("2") || num2 == 7)
						{
							string cellAccount = GetCellAccount(indexRow, "cBirthday");
							if (!(cellAccount != ""))
							{
								break;
							}
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Gia\u0309i checkpoint nga\u0300y sinh..."));
							chrome.GotoURL(chrome.GetURL().Replace("https://www.facebook", "https://m.facebook"));
							chrome.DelayTime(3.0);
							chrome.ExecuteScript("var x = document.getElementsByName(\"verification_method\"); var i; for (i = 0; i < x.length; i++) { if (x[i].value == \"2\") { x[i].checked = true; break; } }");
							int num3 = Convert.ToInt32(cellAccount.Split('/')[1].Trim());
							int num4 = Convert.ToInt32(cellAccount.Split('/')[0].Trim());
							int num5 = Convert.ToInt32(cellAccount.Split('/')[2].Trim());
							chrome.DelayTime(1.0);
							if (num2 != 7)
							{
								chrome.ExecuteScript("document.querySelector(\"#checkpointSubmitButton-actual-button\").click()");
								chrome.DelayTime(5.0);
							}
							chrome.ExecuteScript("document.querySelector(\"section > div > div:nth-child(3) > div > div:nth-child(1) > div > fieldset > label:nth-child(" + num3 + ")\").click()");
							chrome.DelayTime(1.0);
							chrome.ExecuteScript("document.querySelector(\"section > div > div:nth-child(3) > div > div:nth-child(2) > div > fieldset > label:nth-child(" + num4 + ")\").click()");
							chrome.DelayTime(1.0);
							chrome.ExecuteScript("document.querySelector(\"section > div > div:nth-child(3) > div > div:nth-child(3) > div > fieldset > label:nth-child(" + (DateTime.Now.Year - 12 - num5) + ")\").click()");
							chrome.DelayTime(1.0);
							chrome.ExecuteScript("document.querySelector(\"#checkpointSubmitButton-actual-button\").click()");
							chrome.DelayTime(3.0);
							text = "";
							for (int i = 0; i < 15; i++)
							{
								if (!flag2 && chrome.CheckExistElement("[name=\"password_new\"]", 3.0) == 1)
								{
									text = MCommon.Common.CreateRandomString(10, rd);
									chrome.DelayTime(1.0);
									chrome.SendKeys(2, "password_new", text);
									chrome.DelayTime(1.0);
									flag2 = true;
								}
								num2 = chrome.CheckExistElements(flag2 ? 3 : 0, "#checkpointButtonContinue-actual-button", "#checkpointSubmitButton-actual-button");
								if (num2 == 0)
								{
									break;
								}
								chrome.DelayTime(1.0);
								switch (num2)
								{
									case 1:
										chrome.Click(1, "checkpointButtonContinue-actual-button");
										break;
									case 2:
										chrome.Click(1, "checkpointSubmitButton-actual-button");
										break;
								}
								chrome.DelayTime(2.0);
							}
							flag = CommonChrome.CheckLiveCookieWhenGiaiCP(chrome, "https://m.facebook.com/") == 1;
							if (!flag)
							{
								chrome.ExecuteScript("document.querySelector(\"section > div > div:nth-child(3) > div > div:nth-child(1) > div > fieldset > label:nth-child(" + num4 + ")\").click()");
								chrome.DelayTime(1.0);
								chrome.ExecuteScript("document.querySelector(\"section > div > div:nth-child(3) > div > div:nth-child(2) > div > fieldset > label:nth-child(" + num3 + ")\").click()");
								chrome.DelayTime(1.0);
								chrome.ExecuteScript("document.querySelector(\"section > div > div:nth-child(3) > div > div:nth-child(3) > div > fieldset > label:nth-child(" + (DateTime.Now.Year - 12 - num5) + ")\").click()");
								chrome.DelayTime(1.0);
								chrome.ExecuteScript("document.querySelector(\"#checkpointSubmitButton-actual-button\").click()");
								chrome.DelayTime(3.0);
								flag2 = false;
								for (int j = 0; j < 15; j++)
								{
									if (!flag2 && chrome.CheckExistElement("[name=\"password_new\"]", 3.0) == 1)
									{
										text = MCommon.Common.CreateRandomString(10, rd);
										chrome.DelayTime(1.0);
										chrome.SendKeys(2, "password_new", text);
										chrome.DelayTime(1.0);
										flag2 = true;
										SetCellAccount(indexRow, "cPassword", text);
										CommonSQL.UpdateFieldToAccount(id, "pass", text);
									}
									num2 = chrome.CheckExistElements(flag2 ? 3 : 0, "#checkpointButtonContinue-actual-button", "#checkpointSubmitButton-actual-button");
									if (num2 == 0)
									{
										break;
									}
									chrome.DelayTime(1.0);
									switch (num2)
									{
										case 1:
											chrome.Click(1, "checkpointButtonContinue-actual-button");
											break;
										case 2:
											chrome.Click(1, "checkpointSubmitButton-actual-button");
											break;
									}
									chrome.DelayTime(2.0);
								}
								flag = CommonChrome.CheckLiveCookieWhenGiaiCP(chrome, "https://m.facebook.com/") == 1;
							}
							if (flag)
							{
								string cookieFromChrome = chrome.GetCookieFromChrome();
								SetInfoAccount(id, indexRow, "Live");
								SetCellAccount(indexRow, "cCookies", cookieFromChrome);
								CommonSQL.UpdateFieldToAccount(id, "cookie1", cookieFromChrome);
								result = 2;
							}
							else
							{
								result = 3;
							}
						}
						else
						{
							string text2 = "";
							for (int k = 0; k < list.Count; k++)
							{
								text2 = text2 + CommonRequest.CheckCheckpoint(list[k]) + "-";
							}
							text2 = text2.TrimEnd('-');
							string value = "Checkpoint: " + text2;
							SetInfoAccount(id, indexRow, value);
							result = 1;
						}
						break;
					}
				case 3:
					chrome.DelayTime(1.0);
					chrome.Click(4, "[name=\"submit[Yes]\"]");
					if (chrome.CheckExistElement("[name=\"password_new\"]", 10.0) == 1)
					{
						chrome.DelayTime(1.0);
						text = MCommon.Common.CreateRandomString(10, rd);
						chrome.SendKeys(4, "[name=\"password_new\"]", text);
						chrome.DelayTime(2.0);
						num = 0;
						do
						{
							chrome.Click(1, "checkpointSubmitButton-actual-button");
							chrome.DelayTime(1.0);
							num++;
						}
						while (num != 7 && chrome.CheckExistElement("#checkpointSubmitButton-actual-button") == 1);
						SetCellAccount(indexRow, "cPassword", text);
						CommonSQL.UpdateFieldToAccount(id, "pass", text);
						if (CommonChrome.CheckLiveCookieWhenGiaiCP(chrome, "https://m.facebook.com/") == 1)
						{
							string cookieFromChrome2 = chrome.GetCookieFromChrome();
							SetInfoAccount(id, indexRow, "Live");
							SetCellAccount(indexRow, "cCookies", cookieFromChrome2);
							CommonSQL.UpdateFieldToAccount(id, "cookie1", cookieFromChrome2);
							result = 2;
						}
						else
						{
							result = 3;
						}
					}
					else
					{
						result = 3;
					}
					break;
				case 4:
					chrome.DelayTime(1.0);
					result = ((!CheckAfterGiaiCheckpoint(chrome, id, indexRow, fa2)) ? 3 : 2);
					break;
				case 5:
					result = 1;
					break;
			}
			return result;
		}

		private int GiaiCheckpointOtpMailCu(string id, string fa2, int indexRow, string statusProxy, Chrome chrome)
		{
			int result = 0;
			bool flag = false;
			string text = "";
			int num = 0;
			if (chrome.GetURL().StartsWith("https://m.facebook.com/si/actor_experience/actor_gateway"))
			{
				chrome.GotoURL("https://mbasic.facebook.com");
				chrome.DelayTime(1.0);
				if (chrome.CheckExistElement("[href*=\"stepper\"]", 15.0) == 1)
				{
					chrome.Click(4, "[href*=\"stepper\"]");
					chrome.DelayTime(1.0);
					if (chrome.CheckExistElement("[href*=\"challengechooser\"]", 15.0) == 1)
					{
						chrome.Click(4, "[href*=\"challengechooser\"]");
						chrome.DelayTime(1.0);
						if (chrome.CheckExistElement("#email_captcha", 10.0) == 1)
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Gia\u0309i checkpoint otp hotmail..."));
							chrome.ExecuteScript("document.querySelector('#email_captcha').click()");
							chrome.DelayTime(1.0);
							chrome.Click(4, "[type=\"submit\"]");
							chrome.DelayTime(1.0);
							string cellAccount = GetCellAccount(indexRow, "cEmail");
							string cellAccount2 = GetCellAccount(indexRow, "cPassMail");
							if (cellAccount == "" || cellAccount2 == "")
							{
								if (cellAccount == "")
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Không tìm thấy email!"));
								}
								else if (cellAccount2 == "")
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Không tìm thấy pass email!"));
								}
								result = 4;
							}
							else
							{
								EmailHelper.DeleteMail(cellAccount, cellAccount2);
								if (chrome.CountElement("input[type=\"radio\"]") > 1)
								{
									chrome.ExecuteScript("var email='" + cellAccount + "'; document.querySelectorAll('[dir=\"ltr\"]').forEach(e=>{if(e.innerText.split('@')[1]==email.split('@')[1] && e.innerText.startsWith(email.substring(0,1))) e.click()})");
								}
								chrome.Click(4, "[type=\"submit\"]");
								chrome.DelayTime(3.0);
								if (chrome.CheckExistElement("[name=\"code\"]", 10.0) != 1)
								{
									goto IL_0c60;
								}
								chrome.DelayTime(3.0);
								while (true)
								{
									string otpFromMail = EmailHelper.GetOtpFromMail(1, cellAccount, cellAccount2);
									if (otpFromMail == "block")
									{
										break;
									}
									if (otpFromMail == "")
									{
										chrome.Click(2, "resend");
										chrome.DelayTime(3.0);
										otpFromMail = EmailHelper.GetOtpFromMail(1, cellAccount, cellAccount2);
									}
									if (otpFromMail != "")
									{
										if (otpFromMail == "block")
										{
											goto IL_0713;
										}
										chrome.SendKeys(2, "code", otpFromMail);
										chrome.DelayTime(1.0);
										chrome.Click(4, "[type=\"submit\"]", 1);
										chrome.DelayTime(3.0);
										if (chrome.CheckExistElement("[name=\"code\"]") == 1)
										{
											continue;
										}
										goto IL_0844;
									}
									goto IL_0c60;
								}
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Mail bị block, Thư\u0309 đô\u0309i IP rô\u0300i cha\u0323y la\u0323i!"));
								result = 4;
							}
							goto IL_1f79;
						}
					}
				}
			}
			goto IL_0c60;
		IL_0c60:
			int num2 = chrome.CheckExistElements(10.0, "[id=\"m_login_email\"]", "[name=\"verification_method\"]", "[name=\"submit[Yes]\"]", "[name=\"password_new\"]", "a[href=\"/checkpoint/dyi/create_file/\"]", "[name=\"send_code\"]", "section > div > div:nth-child(3) > div > div:nth-child(1) > div > fieldset > label", "#checkpointButtonGetStarted-actual-button");
			switch (num2)
			{
				case 0:
				case 1:
					result = 0;
					break;
				case 2:
				case 6:
				case 7:
					{
						List<string> list = chrome.ExecuteScript("var s='';document.getElementsByName('verification_method').forEach(element => {s+=element.value+'|'}); return s;").ToString().TrimEnd('|')
							.Split('|')
							.ToList();
						if (list.Contains("37") || num2 == 6)
						{
							SetStatusAccount(indexRow, statusProxy + Language.GetValue("Gia\u0309i checkpoint otp hotmail..."));
							string cellAccount3 = GetCellAccount(indexRow, "cEmail");
							string cellAccount4 = GetCellAccount(indexRow, "cPassMail");
							if (cellAccount3 == "" || cellAccount4 == "")
							{
								if (cellAccount3 == "")
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Không tìm thấy email!"));
								}
								else if (cellAccount4 == "")
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Không tìm thấy pass email!"));
								}
								result = 4;
								break;
							}
							EmailHelper.DeleteMail(cellAccount3, cellAccount4);
							if (num2 != 6)
							{
								chrome.ExecuteScript("var x = document.getElementsByName(\"verification_method\"); var i; for (i = 0; i < x.length; i++) { if (x[i].value == \"37\") { x[i].checked = true; break; } }");
								chrome.DelayTime(1.0);
								chrome.Click(1, "checkpointSubmitButton");
								chrome.DelayTime(3.0);
								if (chrome.CountElement("input[type=\"radio\"]") > 1)
								{
									chrome.ExecuteScript("var email='" + cellAccount3 + "'; document.querySelectorAll('[type=\"radio\"]').forEach(e=>{if(e.value.split('@')[1]==email.split('@')[1] && e.value.startsWith(email.substring(0,1))) e.click()})");
								}
								chrome.Click(1, "checkpointSubmitButton");
							}
							chrome.DelayTime(3.0);
							for (int j = 0; j < 3; j++)
							{
								if (chrome.CheckExistElement("[name=\"captcha_response\"]", 3.0) == 1)
								{
									break;
								}
								if (chrome.CheckExistElement("#checkpointSubmitButton") == 1)
								{
									chrome.Click(1, "checkpointSubmitButton");
									chrome.DelayTime(3.0);
								}
							}
							if (chrome.CheckExistElement("[name=\"captcha_response\"]", 10.0) != 1)
							{
								break;
							}
							chrome.DelayTime(3.0);
							string otpFromMail2 = EmailHelper.GetOtpFromMail(1, cellAccount3, cellAccount4);
							if (otpFromMail2 == "block")
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Mail bị block, Thư\u0309 đô\u0309i IP rô\u0300i cha\u0323y la\u0323i!"));
								result = 4;
								break;
							}
							if (otpFromMail2 == "")
							{
								chrome.Click(2, "send_code");
								chrome.DelayTime(3.0);
								otpFromMail2 = EmailHelper.GetOtpFromMail(1, cellAccount3, cellAccount4);
							}
							if (otpFromMail2 != "")
							{
								if (otpFromMail2 == "block")
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Mail bị block, Thư\u0309 đô\u0309i IP rô\u0300i cha\u0323y la\u0323i!"));
									result = 4;
									break;
								}
								chrome.SendKeys(2, "captcha_response", otpFromMail2);
								chrome.DelayTime(0.1);
								chrome.Click(1, "checkpointSubmitButton");
								chrome.DelayTime(3.0);
								chrome.WaitForSearchElement("[name=\"captcha_response\"]", 1, 10.0);
								if (chrome.CheckExistElement("#checkpointSubmitButton", 3.0) == 1)
								{
									chrome.Click(1, "checkpointSubmitButton");
									chrome.DelayTime(3.0);
									flag = CheckAfterGiaiCheckpoint(chrome, id, indexRow, fa2);
								}
							}
							result = (flag ? 2 : 3);
						}
						else
						{
							string text2 = "";
							for (int k = 0; k < list.Count; k++)
							{
								text2 = text2 + CommonRequest.CheckCheckpoint(list[k]) + "-";
							}
							text2 = text2.TrimEnd('-');
							string value = "Checkpoint: " + text2;
							SetInfoAccount(id, indexRow, value);
							result = 1;
						}
						break;
					}
				case 3:
					chrome.DelayTime(1.0);
					chrome.Click(4, "[name=\"submit[Yes]\"]");
					if (chrome.CheckExistElement("[name=\"password_new\"]", 10.0) == 1)
					{
						chrome.DelayTime(1.0);
						text = MCommon.Common.CreateRandomString(10, rd);
						chrome.SendKeys(4, "[name=\"password_new\"]", text);
						chrome.DelayTime(2.0);
						num = 0;
						do
						{
							chrome.Click(1, "checkpointSubmitButton-actual-button");
							chrome.DelayTime(1.0);
							num++;
						}
						while (num != 7 && chrome.CheckExistElement("#checkpointSubmitButton-actual-button") == 1);
						SetCellAccount(indexRow, "cPassword", text);
						CommonSQL.UpdateFieldToAccount(id, "pass", text);
						if (CommonChrome.CheckLiveCookieWhenGiaiCP(chrome, "https://m.facebook.com/") == 1)
						{
							string cookieFromChrome2 = chrome.GetCookieFromChrome();
							SetInfoAccount(id, indexRow, "Live");
							SetCellAccount(indexRow, "cCookies", cookieFromChrome2);
							CommonSQL.UpdateFieldToAccount(id, "cookie1", cookieFromChrome2);
							result = 2;
						}
						else
						{
							result = 3;
						}
					}
					else
					{
						result = 3;
					}
					break;
				case 4:
					chrome.DelayTime(1.0);
					result = ((!CheckAfterGiaiCheckpoint(chrome, id, indexRow, fa2)) ? 3 : 2);
					break;
				case 5:
					SetStatusAccount(indexRow, statusProxy + Language.GetValue("Vô phương cư\u0301u chư\u0303a!"));
					result = 4;
					break;
				case 8:
					{
						chrome.Click(1, "checkpointButtonGetStarted-actual-button");
						chrome.DelayTime(1.0);
						for (int i = 0; i < 60; i++)
						{
							if (Convert.ToBoolean(chrome.ExecuteScript("return document.querySelectorAll('[name=\"submit[Continue]\"]').length==1")))
							{
								break;
							}
							chrome.DelayTime(1.0);
						}
						chrome.Click(2, "submit[Continue]");
						chrome.DelayTime(1.0);
						if (chrome.CheckExistElement("[name=\"password_new\"]", 30.0) == 1)
						{
							chrome.DelayTime(1.0);
							text = MCommon.Common.CreateRandomString(10, rd);
							chrome.SendKeys(4, "[name=\"password_new\"]", text);
							chrome.DelayTime(2.0);
							num = 0;
							do
							{
								chrome.Click(2, "submit[Continue]");
								chrome.DelayTime(1.0);
								num++;
							}
							while (num != 7 && chrome.CheckExistElement("[name=\"submit[Continue]\"]") == 1);
							if (chrome.CheckExistElement("[name=\"submit[Go to News Feed]\"]") == 1)
							{
								chrome.Click(2, "submit[Go to News Feed]");
							}
							SetCellAccount(indexRow, "cPassword", text);
							CommonSQL.UpdateFieldToAccount(id, "pass", text);
							if (CommonChrome.CheckLiveCookieWhenGiaiCP(chrome, "https://m.facebook.com/") == 1)
							{
								string cookieFromChrome = chrome.GetCookieFromChrome();
								SetInfoAccount(id, indexRow, "Live");
								SetCellAccount(indexRow, "cCookies", cookieFromChrome);
								CommonSQL.UpdateFieldToAccount(id, "cookie1", cookieFromChrome);
								result = 2;
							}
							else
							{
								result = 3;
							}
						}
						break;
					}
			}
			goto IL_1f79;
		IL_0713:
			SetStatusAccount(indexRow, statusProxy + Language.GetValue("Mail bị block, Thư\u0309 đô\u0309i IP rô\u0300i cha\u0323y la\u0323i!"));
			result = 4;
			goto IL_1f79;
		IL_0844:
			if (chrome.CheckExistElement("[href*=\"intro\"]", 3.0) == 1)
			{
				chrome.Click(4, "[href*=\"intro\"]");
				chrome.DelayTime(3.0);
				if (chrome.CheckExistElement("[href*=\"change_password\"]", 5.0) == 1)
				{
					chrome.Click(4, "[href*=\"change_password\"]");
					chrome.DelayTime(1.0);
					if (chrome.CheckExistElement("[name=\"pw\"]") == 1)
					{
						chrome.DelayTime(1.0);
						text = MCommon.Common.CreateRandomString(10, rd);
						chrome.SendKeys(4, "[name=\"pw\"]", text);
						chrome.DelayTime(2.0);
						chrome.Click(4, "[type=\"submit\"]");
						chrome.DelayTime(3.0);
						SetCellAccount(indexRow, "cPassword", text);
						CommonSQL.UpdateFieldToAccount(id, "pass", text);
						string cssSelector = chrome.GetCssSelector("a", "href", "/x/checkpoint/828281030927956/outro/?token");
						if (cssSelector != "")
						{
							SetInfoAccount(id, indexRow, "Live");
							chrome.Click(4, cssSelector);
							chrome.DelayTime(3.0);
						}
						CommonChrome.GoToHome(chrome);
						if (CommonChrome.CheckLiveCookie(chrome) == 1)
						{
							SetInfoAccount(id, indexRow, "Live");
							result = 2;
						}
						else
						{
							result = 3;
						}
						goto IL_1f79;
					}
				}
			}
			goto IL_0c60;
		IL_1f79:
			return result;
		}

		private int GiaiCheckpointOtpMailMoi(string id, string fa2, int indexRow, string statusProxy, Chrome chrome)
		{
			int result = 0;
			bool flag = false;
			string text = "";
			bool flag2 = false;
			int num = 0;
			if (chrome.GetURL().Contains("facebook.com/x/checkpoint/"))
			{
				string text2 = "";
				for (int i = 0; i < 5; i++)
				{
					text2 = chrome.GetCssSelector("a", "href", "/x/checkpoint/828281030927956/stepper/?token");
					if (text2 == "")
					{
						break;
					}
					chrome.Click(4, text2);
					chrome.DelayTime(3.0);
				}
				text2 = chrome.GetCssSelector("a", "href", "/x/checkpoint/828281030927956/cp/intro/?token");
				if (text2 != "")
				{
					chrome.Click(4, text2);
					chrome.DelayTime(3.0);
				}
				text2 = chrome.GetCssSelector("a", "href", "/x/checkpoint/828281030927956/change_password/?token");
				if (text2 != "")
				{
					chrome.Click(4, text2);
					chrome.DelayTime(3.0);
				}
				if (chrome.CheckExistElement("[name=\"pw\"]") == 1)
				{
					chrome.DelayTime(1.0);
					text = MCommon.Common.CreateRandomString(10, rd);
					chrome.SendKeys(4, "[name=\"pw\"]", text);
					chrome.DelayTime(2.0);
					chrome.Click(4, "[type=\"submit\"]");
					chrome.DelayTime(3.0);
					SetCellAccount(indexRow, "cPassword", text);
					CommonSQL.UpdateFieldToAccount(id, "pass", text);
					text2 = chrome.GetCssSelector("a", "href", "/x/checkpoint/828281030927956/outro/?token");
					if (text2 != "")
					{
						SetInfoAccount(id, indexRow, "Live");
						chrome.Click(4, text2);
						chrome.DelayTime(3.0);
					}
					CommonChrome.GoToHome(chrome);
					if (CommonChrome.CheckLiveCookie(chrome) == 1)
					{
						SetInfoAccount(id, indexRow, "Live");
						result = 2;
					}
					else
					{
						result = 3;
					}
					goto IL_27c4;
				}
			}
			switch (chrome.CheckExistElements(10.0, "[id=\"m_login_email\"]", "[name=\"verification_method\"]", "[name=\"submit[Yes]\"]", "[name=\"password_new\"]", "a[href=\"/checkpoint/dyi/create_file/\"]", "[name=\"send_code\"]", "section > div > div:nth-child(3) > div > div:nth-child(1) > div > fieldset > label", "[type=\"submit\"]"))
			{
				case 0:
				case 1:
					result = 0;
					break;
				case 6:
					{
						SetStatusAccount(indexRow, statusProxy + Language.GetValue("Gia\u0309i checkpoint otp hotmail..."));
						string cellAccount = GetCellAccount(indexRow, "cEmail");
						string cellAccount2 = GetCellAccount(indexRow, "cPassMail");
						if (cellAccount == "" || cellAccount2 == "" || (!cellAccount.Contains("hotmail.com") && !cellAccount.Contains("outlook.com") && !cellAccount.Contains("yandex.com") && !cellAccount.Contains("rickystar.com")))
						{
							if (cellAccount == "")
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Không tìm thấy email!"));
							}
							else if (cellAccount2 == "")
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Không tìm thấy pass email!"));
							}
							else if (!cellAccount.Contains("hotmail.com") && !cellAccount.Contains("outlook.com") && !cellAccount.Contains("yandex.com"))
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Chưa tích hợp mail dạng này!"));
							}
							result = 4;
						}
						else
						{
							if (chrome.CheckExistElement("[name=\"captcha_response\"]", 10.0) != 1)
							{
								break;
							}
							chrome.DelayTime(3.0);
							string otpFromMail2 = EmailHelper.GetOtpFromMail(1, cellAccount, cellAccount2);
							if (otpFromMail2 == "block")
							{
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Mail bị block, Thư\u0309 đô\u0309i IP rô\u0300i cha\u0323y la\u0323i!"));
								result = 4;
								break;
							}
							if (otpFromMail2 == "")
							{
								chrome.Click(2, "send_code");
								chrome.DelayTime(3.0);
								otpFromMail2 = EmailHelper.GetOtpFromMail(1, cellAccount, cellAccount2);
							}
							if (otpFromMail2 != "")
							{
								if (otpFromMail2 == "block")
								{
									SetStatusAccount(indexRow, statusProxy + Language.GetValue("Mail bị block, Thư\u0309 đô\u0309i IP rô\u0300i cha\u0323y la\u0323i!"));
									result = 4;
									break;
								}
								chrome.SendKeys(2, "captcha_response", otpFromMail2);
								chrome.DelayTime(0.1);
								chrome.Click(1, "checkpointSubmitButton");
								chrome.DelayTime(3.0);
								chrome.WaitForSearchElement("[name=\"captcha_response\"]", 1, 10.0);
								if (chrome.CheckExistElement("#checkpointSubmitButton", 3.0) == 1)
								{
									chrome.Click(1, "checkpointSubmitButton");
									chrome.DelayTime(3.0);
									flag = CheckAfterGiaiCheckpoint(chrome, id, indexRow, fa2);
								}
							}
							result = (flag ? 2 : 3);
						}
						break;
					}
				case 2:
				case 7:
					{
						List<string> list = chrome.ExecuteScript("var s='';document.getElementsByName('verification_method').forEach(element => {s+=element.value+'|'}); return s;").ToString().TrimEnd('|')
							.Split('|')
							.ToList();
						string text3 = "";
						for (int l = 0; l < list.Count; l++)
						{
							text3 = text3 + CommonRequest.CheckCheckpoint(list[l]) + "-";
						}
						text3 = text3.TrimEnd('-');
						string value = "Checkpoint: " + text3;
						SetInfoAccount(id, indexRow, value);
						result = 1;
						break;
					}
				case 3:
					chrome.DelayTime(1.0);
					chrome.Click(4, "[name=\"submit[Yes]\"]");
					if (chrome.CheckExistElement("[name=\"password_new\"]", 10.0) == 1)
					{
						chrome.DelayTime(1.0);
						text = MCommon.Common.CreateRandomString(10, rd);
						chrome.SendKeys(4, "[name=\"password_new\"]", text);
						chrome.DelayTime(2.0);
						num = 0;
						do
						{
							chrome.Click(1, "checkpointSubmitButton-actual-button");
							chrome.DelayTime(1.0);
							num++;
						}
						while (num != 7 && chrome.CheckExistElement("#checkpointSubmitButton-actual-button") == 1);
						SetCellAccount(indexRow, "cPassword", text);
						CommonSQL.UpdateFieldToAccount(id, "pass", text);
						if (CommonChrome.CheckLiveCookieWhenGiaiCP(chrome, "https://m.facebook.com/") == 1)
						{
							string cookieFromChrome3 = chrome.GetCookieFromChrome();
							SetInfoAccount(id, indexRow, "Live");
							SetCellAccount(indexRow, "cCookies", cookieFromChrome3);
							CommonSQL.UpdateFieldToAccount(id, "cookie1", cookieFromChrome3);
							result = 2;
						}
						else
						{
							result = 3;
						}
					}
					else
					{
						result = 3;
					}
					break;
				case 4:
					chrome.DelayTime(1.0);
					result = ((!CheckAfterGiaiCheckpoint(chrome, id, indexRow, fa2)) ? 3 : 2);
					break;
				case 5:
					SetStatusAccount(indexRow, statusProxy + Language.GetValue("Vô phương cư\u0301u chư\u0303a!"));
					result = 4;
					break;
				case 8:
					chrome.Click(4, "[type=\"submit\"]");
					chrome.DelayRandom(1, 2);
					if (chrome.GetURL().Contains("facebook.com/help/") || chrome.CheckExistElement("[type=\"submit\"]", 5.0) != 1)
					{
						break;
					}
					chrome.Click(4, "[type=\"submit\"]");
					chrome.DelayRandom(1, 2);
					switch (chrome.CheckExistElements(10.0, "[type=\"submit\"]", "[style=\"flex-grow:0;flex-shrink:0;padding:8px 12px 8px 0;min-width:28px;min-height:28px\"]"))
					{
						case 2:
							{
								chrome.ExecuteScript("document.querySelector('[style=\"flex-grow:0;flex-shrink:0;padding:8px 12px 8px 0;min-width:28px;min-height:28px\"]').click()");
								chrome.DelayRandom(1, 2);
								if (chrome.CheckExistElement("[type=\"submit\"]", 5.0) != 1)
								{
									break;
								}
								string cellAccount = GetCellAccount(indexRow, "cEmail");
								string cellAccount2 = GetCellAccount(indexRow, "cPassMail");
								if (chrome.CountElement("[data-nt=\"NT:COMPONENT_SWITCH_V2\"]") >= 1)
								{
									chrome.ExecuteScript("var email='" + cellAccount + "'; document.querySelector('[data-nt=\"NT:COMPONENT_SWITCH_V2\"]').parentElement.parentElement.childNodes.forEach(e=>{ if(e.innerText.split('@')[1]==email.split('@')[1] && e.innerText.startsWith(email.substring(0,1))) e.querySelector('[data-nt=\"NT:COMPONENT_SWITCH_V2\"]').click()})");
									chrome.DelayTime(1.0);
									chrome.Click(4, "[type=\"submit\"]");
								}
								EmailHelper.DeleteMail(cellAccount, cellAccount2);
								SetStatusAccount(indexRow, statusProxy + Language.GetValue("Gia\u0309i checkpoint otp hotmail..."));
								if (cellAccount == "" || cellAccount2 == "" || (!cellAccount.Contains("hotmail.com") && !cellAccount.Contains("outlook.com") && !cellAccount.Contains("yandex.com") && !cellAccount.Contains("rickystar.com")))
								{
									if (cellAccount == "")
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Không tìm thấy email!"));
									}
									else if (cellAccount2 == "")
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Không tìm thấy pass email!"));
									}
									else if (!cellAccount.Contains("hotmail.com") && !cellAccount.Contains("outlook.com") && !cellAccount.Contains("yandex.com"))
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Chưa tích hợp mail dạng này!"));
									}
									result = 4;
									break;
								}
								chrome.DelayTime(3.0);
								if (chrome.CheckExistElement("[name=\"code\"]", 5.0) != 1)
								{
									chrome.Click(4, "[type=\"submit\"]");
									chrome.DelayRandom(1, 2);
								}
								if (chrome.CheckExistElement("[name=\"code\"]", 5.0) != 1)
								{
									break;
								}
								chrome.DelayTime(3.0);
								while (true)
								{
									string otpFromMail = EmailHelper.GetOtpFromMail(1, cellAccount, cellAccount2);
									if (otpFromMail == "block")
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Mail bị block, Thư\u0309 đô\u0309i IP rô\u0300i cha\u0323y la\u0323i!"));
										result = 4;
										break;
									}
									if (otpFromMail == "")
									{
										chrome.Click(4, "[style=\"font-size: 17px;font-weight: 400;line-height: 20px;text-align: left;color: #216FDB\"]");
										chrome.DelayTime(3.0);
										otpFromMail = EmailHelper.GetOtpFromMail(1, cellAccount, cellAccount2);
									}
									if (!(otpFromMail != ""))
									{
										break;
									}
									if (otpFromMail == "block")
									{
										SetStatusAccount(indexRow, statusProxy + Language.GetValue("Mail bị block, Thư\u0309 đô\u0309i IP rô\u0300i cha\u0323y la\u0323i!"));
										result = 4;
										break;
									}
									chrome.SendKeys(2, "code", otpFromMail);
									chrome.DelayTime(1.0);
									chrome.Click(4, "[style=\"flex-grow:0;flex-shrink:1\"] button");
									chrome.DelayTime(10.0);
									if (chrome.CheckExistElement("[name=\"code\"]", 5.0) == 1)
									{
										continue;
									}
									if (chrome.CheckExistElement("[type=\"submit\"]", 10.0) == 1)
									{
										chrome.Click(4, "[type=\"submit\"]");
										chrome.DelayTime(1.0);
										if (chrome.CheckExistElement("[type=\"submit\"]", 10.0) == 1)
										{
											chrome.Click(4, "[type=\"submit\"]");
											chrome.DelayTime(1.0);
											flag2 = false;
											while (true)
											{
											IL_1f03:
												if (!flag2 && chrome.CheckExistElement("[name=\"new_password\"]", 3.0) == 1)
												{
													text = MCommon.Common.CreateRandomString(10, rd);
													chrome.DelayTime(1.0);
													chrome.SendKeys(2, "new_password", text);
													chrome.DelayTime(1.0);
													flag2 = true;
													chrome.Click(4, "[type=\"submit\"]");
													chrome.DelayTime(3.0);
													SetCellAccount(indexRow, "cPassword", text);
													CommonSQL.UpdateFieldToAccount(id, "pass", text);
													continue;
												}
												for (int k = 0; k < 3; k++)
												{
													if (!flag2 && chrome.CheckExistElement("[name=\"new_password\"]") == 1)
													{
														goto IL_1f03;
													}
													if (chrome.CheckExistElement("[type=\"submit\"]", 5.0) == 1)
													{
														chrome.Click(4, "[type=\"submit\"]");
														chrome.DelayTime(3.0);
													}
												}
												break;
											}
											if (chrome.CheckExistElement("[data-sigil=\"button-submit\"]", 5.0) == 1)
											{
												chrome.Click(4, "[data-sigil=\"button-submit\"]");
												chrome.DelayTime(3.0);
											}
										}
									}
									if (CommonChrome.CheckLiveCookieWhenGiaiCP(chrome, "https://m.facebook.com/") == 1)
									{
										string cookieFromChrome2 = chrome.GetCookieFromChrome();
										SetInfoAccount(id, indexRow, "Live");
										SetCellAccount(indexRow, "cCookies", cookieFromChrome2);
										CommonSQL.UpdateFieldToAccount(id, "cookie1", cookieFromChrome2);
										result = 2;
									}
									else
									{
										result = 3;
									}
									break;
								}
								break;
							}
						case 1:
							chrome.Click(4, "[type=\"submit\"]");
							chrome.DelayTime(1.0);
							flag2 = false;
							while (true)
							{
							IL_23ac:
								if (!flag2 && chrome.CheckExistElement("[name=\"new_password\"]", 10.0) == 1)
								{
									text = MCommon.Common.CreateRandomString(10, rd);
									chrome.DelayTime(1.0);
									chrome.SendKeys(2, "new_password", text);
									chrome.DelayTime(1.0);
									flag2 = true;
									chrome.Click(4, "[type=\"submit\"]");
									chrome.DelayTime(3.0);
									SetCellAccount(indexRow, "cPassword", text);
									CommonSQL.UpdateFieldToAccount(id, "pass", text);
									continue;
								}
								for (int j = 0; j < 5; j++)
								{
									if (chrome.CheckExistElement("div[title] i") == 1)
									{
										chrome.Click(4, "div[title] i");
									}
									else if (chrome.GetURL() == "https://m.facebook.com/home.php")
									{
										goto IL_24bd;
									}
									if (chrome.CheckExistElement("[type=\"submit\"]", 5.0) == 1)
									{
										if (chrome.Click(4, "[type=\"submit\"]", 1) == 0)
										{
											chrome.Click(4, "[type=\"submit\"]");
										}
										chrome.DelayTime(3.0);
										if (!flag2 && chrome.CheckExistElement("[name=\"new_password\"]", 3.0) == 1)
										{
											goto IL_23ac;
										}
									}
								}
								if (chrome.CheckExistElement("[data-sigil=\"button-submit\"]", 5.0) == 1)
								{
									chrome.Click(4, "[data-sigil=\"button-submit\"]");
									chrome.DelayTime(3.0);
								}
								flag = CommonChrome.CheckLiveCookieWhenGiaiCP(chrome, "https://m.facebook.com/") == 1;
								break;
							IL_24bd:
								flag = true;
								break;
							}
							if (flag)
							{
								string cookieFromChrome = chrome.GetCookieFromChrome();
								SetInfoAccount(id, indexRow, "Live");
								SetCellAccount(indexRow, "cCookies", cookieFromChrome);
								CommonSQL.UpdateFieldToAccount(id, "cookie1", cookieFromChrome);
								result = 2;
							}
							else
							{
								result = 3;
							}
							break;
					}
					break;
			}
			goto IL_27c4;
		IL_27c4:
			return result;
		}

		private bool CheckAfterGiaiCheckpoint(Chrome chrome, string id, int indexRow, string fa2)
		{
			bool flag = false;
			string cellAccount = GetCellAccount(indexRow, "cPassword");
			string text = "";
			int num = 0;
			for (int i = 0; i < 15; chrome.DelayTime(2.0), i++)
			{
				num = chrome.CheckExistElements(3.0, "[name=\"password_new\"]", "[name=\"pw\"]");
				if (!flag && num != 0)
				{
					text = MCommon.Common.CreateRandomString(10, rd);
					chrome.DelayTime(1.0);
					if (chrome.CheckExistElement("[name=\"password_old\"]") == 1)
					{
						chrome.SendKeys(2, "password_old", cellAccount);
						chrome.DelayTime(1.0);
					}
					chrome.SendKeys(2, "password_new", text);
					chrome.DelayTime(1.0);
					chrome.SendKeys(2, "password_confirm", text);
					chrome.DelayTime(1.0);
					chrome.Click(1, "checkpointSubmitButton");
					SetCellAccount(indexRow, "cPassword", text);
					CommonSQL.UpdateFieldToAccount(id, "pass", text);
					flag = true;
				}
				num = chrome.CheckExistElements(flag ? 3 : 0, "#approvals_code", "#checkpointSubmitButton", "#checkpointButtonContinue");
				if (num == 0)
				{
					break;
				}
				chrome.DelayTime(1.0);
				switch (num)
				{
					case 1:
						{
							string text2 = "";
							if (fa2.Replace(" ", "").Replace("\n", "") != "")
							{
								text2 = MCommon.Common.GetTotp(fa2.Replace(" ", "").Replace("\n", ""));
							}
							if (!(text2 != ""))
							{
								break;
							}
							chrome.SendKeys(1, "approvals_code", text2, 0.1);
							chrome.DelayTime(1.0);
							chrome.Click(1, "checkpointSubmitButton");
							chrome.DelayTime(1.0);
							int num2 = 0;
							for (int j = 0; j < 7; j++)
							{
								if (chrome.Click(1, "checkpointSubmitButton") != 1)
								{
									break;
								}
								chrome.DelayTime(1.0);
								num2++;
							}
							continue;
						}
					case 2:
						chrome.Click(1, "checkpointSubmitButton", chrome.CountElement("#checkpointSubmitButton") - 1);
						continue;
					case 3:
						chrome.Click(1, "checkpointButtonContinue");
						continue;
					default:
						continue;
				}
				break;
			}
			if (CommonChrome.CheckLiveCookieWhenGiaiCP(chrome, "https://m.facebook.com/") == 1)
			{
				string cookieFromChrome = chrome.GetCookieFromChrome();
				SetInfoAccount(id, indexRow, "Live");
				SetCellAccount(indexRow, "cCookies", cookieFromChrome);
				CommonSQL.UpdateFieldToAccount(id, "cookie1", cookieFromChrome);
				return true;
			}
			return false;
		}

		private void mởThưMụcBackupToolStripMenuItem_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_00fc, IL_0130
			isStop = false;
			for (int i = 0; i < dtgvAcc.Rows.Count; i++)
			{
				if (isStop)
				{
					break;
				}
				if (!Convert.ToBoolean(dtgvAcc.Rows[i].Cells["cChose"].Value))
				{
					continue;
				}
				string text = "backup\\" + GetCellAccount(i, "cUid");
				if (Directory.Exists(text))
				{
					try
					{
						Process.Start(text);
						SetStatusAccount(i, Language.GetValue("Mở thành công!"));
					}
					catch
					{
						SetStatusAccount(i, Language.GetValue("Mở thất bại!"));
					}
				}
				else
				{
					SetStatusAccount(i, Language.GetValue("Chưa backup!"));
				}
			}
		}

		private void ghiChuToolStripMenuItem_Click(object sender, EventArgs e)
		{
			OpenFormUpdate("Notes");
		}

		private void metroButton1_Click(object sender, EventArgs e)
		{
			CloseProcess("chromedriver");
		}

		private void kichBanTươngTacToolStripMenuItem_Click(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fChonKichBan());
		}

		private void pictureBox1_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_00a4, IL_00b1
			if ((e as MouseEventArgs).Button == MouseButtons.Right && Control.ModifierKeys == System.Windows.Forms.Keys.Control)
			{
				btnRandomIndexRow.Visible = true;
			}
			else if ((e as MouseEventArgs).Button == MouseButtons.Right && Control.ModifierKeys == System.Windows.Forms.Keys.Alt)
			{
				try
				{
					Process.Start(Path.GetDirectoryName(Application.ExecutablePath));
				}
				catch
				{
				}
			}
		}

		private void ngàySinhToolStripMenuItem_Click(object sender, EventArgs e)
		{
			OpenFormUpdate("Birthday");
		}

		private void cbbTinhTrang_SelectedIndexChanged(object sender, EventArgs e)
		{
			if (!isExcute_CbbTinhTrang_SelectedIndexChanged || cbbTinhTrang.SelectedValue == null || !StringHelper.CheckStringIsNumber(cbbTinhTrang.SelectedValue.ToString()) || (cbbTinhTrang.SelectedValue.ToString() != "-1" && indexCbbTinhTrangOld == cbbTinhTrang.SelectedIndex))
			{
				return;
			}
			string text = cbbThuMuc.SelectedValue.ToString();
			string text2 = text;
			if (!(text2 == "-1"))
			{
				if (text2 == "999999")
				{
					LoadAccountFromFile(fChonThuMuc.lstChooseIdFiles, cbbTinhTrang.Text);
				}
				else
				{
					LoadAccountFromFile(GetIdFile(), cbbTinhTrang.Text);
				}
			}
			else
			{
				LoadAccountFromFile(null, cbbTinhTrang.Text);
			}
			indexCbbTinhTrangOld = cbbTinhTrang.SelectedIndex;
		}

		private void taoShortcutChromeToolStripMenuItem_Click(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fCauHinhTaoShortcut());
			if (!fCauHinhTaoShortcut.isOK)
			{
				return;
			}
			LoadSetting();
			int iThread = 0;
			int maxThread = setting_general.GetValueInt("nudHideThread", 10);
			isStop = false;
			new Thread((ThreadStart)delegate
			{
				cControl("start");
				int num = 0;
				while (num < dtgvAcc.Rows.Count)
				{
					Application.DoEvents();
					if (isStop)
					{
						break;
					}
					if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
					{
						if (iThread < maxThread)
						{
							Interlocked.Increment(ref iThread);
							int row = num++;
							new Thread((ThreadStart)delegate
							{
								SetStatusAccount(row, Language.GetValue("Đang ta\u0323o Shortcut..."));
								try
								{
									string text = dtgvAcc.Rows[row].Cells["cId"].Value.ToString();
									string text2 = dtgvAcc.Rows[row].Cells["cUid"].Value.ToString();
									string text3 = dtgvAcc.Rows[row].Cells["cName"].Value.ToString();
									string nameShortcut = ((text3 == "") ? text2 : (text3 + "_" + text2));
									string text4 = setting_general.GetValue("txbPathProfile") + "\\" + text2;
									if (setting_general.GetValueBool("ckbUsePortable") && Directory.Exists(setting_general.GetValue("txbPathProfile") + "\\" + text2 + "\\Data\\profile"))
									{
										text4 = setting_general.GetValue("txbPathProfile") + "\\" + text2 + "\\Data\\profile";
									}
									MCommon.Common.CreateFolder(text4);
									if (CreateShortcutChrome(text4, nameShortcut))
									{
										SetStatusAccount(row, Language.GetValue("Ta\u0323o Shortcut thành công!"));
									}
									else
									{
										SetStatusAccount(row, Language.GetValue("Lô\u0303i ta\u0323o Shortcut!"));
									}
								}
								catch
								{
									SetStatusAccount(row, Language.GetValue("Lỗi!"));
								}
								Interlocked.Decrement(ref iThread);
							}).Start();
						}
						else
						{
							Application.DoEvents();
							Thread.Sleep(200);
						}
					}
					else
					{
						num++;
					}
				}
				int tickCount = Environment.TickCount;
				while (iThread > 0 && Environment.TickCount - tickCount <= 30000)
				{
					Application.DoEvents();
					Thread.Sleep(300);
				}
				cControl("stop");
			}).Start();
		}

		private bool CreateShortcutChrome(string profilePath, string nameShortcut)
		{
			//Discarded unreachable code: IL_00b7, IL_00ca, IL_016d, IL_017a
			try
			{
				nameShortcut = MCommon.Common.ConvertToUnSign(nameShortcut);
				if (profilePath.StartsWith("profiles\\"))
				{
					profilePath = Application.StartupPath + "\\" + profilePath;
				}
				string path = Application.StartupPath + "\\images\\chrome.ico";
				if (!File.Exists(path))
				{
					using (FileStream outputStream = new FileStream(path, FileMode.Create))
					{
						Resources.chrome.Save(outputStream);
					}
				}
				if (MCommon.Common.CreateShortcutChrome(nameShortcut, setting_InteractGeneral.GetValue("txtPathShortcut"), profilePath, path, setting_InteractGeneral.GetValue("txtPathChromeOrigin")))
				{
					return true;
				}
			}
			catch
			{
			}
			return false;
		}

		private void giưLaiProfileToolStripMenuItem_Click(object sender, EventArgs e)
		{
			DeleteAccount(isDeleteProfile: false);
		}

		private void kiểmTraMailpassMailToolStripMenuItem_Click(object sender, EventArgs e)
		{
			KiemTraTaiKhoan(4);
		}

		private void đăngNhậpTrìnhDuyệtMớiToolStripMenuItem_Click(object sender, EventArgs e)
		{
		}

		private void loginHotmailToolStripMenuItem_Click(object sender, EventArgs e)
		{
			LoginMail();
		}

		private void LoginMail(int typeMail = 0, bool isUseProfile = false)
		{
			LoadSetting();
			string profilePath = "";
			if (isUseProfile)
			{
				profilePath = ConfigHelper.GetPathProfile();
				if (!Directory.Exists(profilePath))
				{
					MessageBoxHelper.ShowMessageBox(Language.GetValue("Đường dẫn profile không hợp lệ!"), 3);
					return;
				}
			}
			List<int> lstPossition = new List<int>();
			for (int i = 0; i < CountChooseRowInDatagridview(); i++)
			{
				lstPossition.Add(0);
			}
			lstThread = new List<Thread>();
			new Thread((ThreadStart)delegate
			{
				try
				{
					int num = 0;
					while (num < dtgvAcc.Rows.Count)
					{
						if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
						{
							int row = num++;
							Thread thread = new Thread((ThreadStart)delegate
							{
								int indexOfPossitionApp = MCommon.Common.GetIndexOfPossitionApp(ref lstPossition);
								LoginMailOneThread(row, indexOfPossitionApp, typeMail, profilePath);
							})
							{
								Name = row.ToString()
							};
							lstThread.Add(thread);
							thread.Start();
						}
						else
						{
							num++;
						}
					}
				}
				catch (Exception ex)
				{
					MCommon.Common.ExportError(null, ex, "LoginHotmail()");
				}
			}).Start();
		}

		private void LoginMailOneThread(int indexRow, int indexPos, int typeMail = 0, string profilePath = "")
		{
			//Discarded unreachable code: IL_164f, IL_16a6, IL_16b1, IL_1709
			Chrome chrome = null;
			string cellAccount = GetCellAccount(indexRow, "cId");
			string cellAccount2 = GetCellAccount(indexRow, "cUid");
			string cellAccount3 = GetCellAccount(indexRow, "cEmail");
			string cellAccount4 = GetCellAccount(indexRow, "cPassMail");
			string useragentIPad = SetupFolder.GetUseragentIPad(rd);
			try
			{
				SetStatusAccount(indexRow, Language.GetValue("Đang mơ\u0309 tri\u0300nh duyê\u0323t..."));
				Point pointFromIndexPosition = MCommon.Common.GetPointFromIndexPosition(indexPos, 5, 2);
				Point sizeChrome = MCommon.Common.GetSizeChrome(5, 2);
				bool flag = false;
				try
				{
					string profilePath2 = "";
					if (profilePath != "" && (cellAccount2 != "" || cellAccount3 != ""))
					{
						if (cellAccount2 != "")
						{
							profilePath2 = profilePath + "\\" + cellAccount2;
						}
						else if (cellAccount3 != "")
						{
							profilePath2 = profilePath + "\\" + cellAccount3;
						}
					}
					bool disableImage = false;
					chrome = new Chrome
					{
						DisableImage = disableImage,
						Size = sizeChrome,
						Position = pointFromIndexPosition,
						TimeWaitForSearchingElement = 3,
						TimeWaitForLoadingPage = 60,
						ProfilePath = profilePath2,
						UserAgent = useragentIPad
					};
					if (setting_general.GetValueInt("typeBrowser") != 0)
					{
						chrome.LinkToOtherBrowser = setting_general.GetValue("txtLinkToOtherBrowser");
					}
					if (!chrome.Open())
					{
						SetStatusAccount(indexRow, Language.GetValue("Lỗi mở trình duyệt!"));
						return;
					}
					SetStatusAccount(indexRow, Language.GetValue("Đang đăng nhâ\u0323p..."));
					switch (typeMail)
					{
						case 0:
							if (cellAccount3.Contains("hotmail") || cellAccount3.Contains("outlook"))
							{
								chrome.GotoURL("https://login.live.com/login.srf");
								chrome.DelayTime(1.0);
								if (chrome.CheckExistElement("[name=\"loginfmt\"]", 10.0) != 1)
								{
									break;
								}
								chrome.SendKeys(2, "loginfmt", cellAccount3);
								chrome.DelayTime(0.1);
								chrome.Click(1, "idSIButton9");
								if (chrome.CheckExistElement("[name=\"passwd\"]", 10.0) != 1)
								{
									break;
								}
								chrome.DelayTime(2.0);
								chrome.SendKeys(2, "passwd", cellAccount4);
								chrome.DelayTime(2.0);
								chrome.Click(1, "idSIButton9", 0, 0, "", 0, 10);
								for (int j = 0; j < 10; chrome.DelayTime(1.0), j++)
								{
									switch (chrome.CheckExistElements(0.0, "[name=\"DontShowAgain\"]", "#O365_MainLink_NavMenu", "#reload-button"))
									{
										case 1:
											chrome.Click(2, "DontShowAgain");
											chrome.DelayTime(0.1);
											chrome.Click(1, "idSIButton9");
											break;
										case 3:
											chrome.Click(4, "#reload-button");
											continue;
										default:
											switch (chrome.CheckExistElements(0.0, "#idA_IL_ForgotPassword0", "[name=\"passwd\"]"))
											{
												case 1:
													SetStatusAccount(indexRow, Language.GetValue("Mail sai pass!"));
													return;
												case 2:
													SetStatusAccount(indexRow, Language.GetValue("Không có pass mail!"));
													return;
											}
											if (chrome.GetURL().Contains("https://account.live.com/Abuse"))
											{
												SetStatusAccount(indexRow, Language.GetValue("Mail đã bị khóa!"));
												return;
											}
											continue;
										case 2:
											break;
									}
									break;
								}
								if (!chrome.GetURL().StartsWith("https://outlook.live.com"))
								{
									chrome.GotoURL("https://outlook.live.com/mail/0/");
								}
								if (chrome.CheckExistElement("#iShowSkip") == 1)
								{
									chrome.Click(4, "#iShowSkip");
								}
								flag = true;
								break;
							}
							if (cellAccount3.Contains("yandex"))
							{
								chrome.GotoURL("https://passport.yandex.com/auth?from=mail&origin=hostroot_homer_auth_com&retpath=https%3A%2F%2Fmail.yandex.com%2F&backpath=https%3A%2F%2Fmail.yandex.com%3Fnoretpath%3D1");
								chrome.DelayTime(1.0);
								if (chrome.CheckExistElement("#passp-field-login", 10.0) != 1)
								{
									break;
								}
								chrome.SendKeys(1, "passp-field-login", cellAccount3);
								chrome.DelayTime(0.1);
								chrome.Click(4, ".Button2_type_submit");
								if (chrome.CheckExistElement("#passp-field-passwd", 10.0) != 1)
								{
									break;
								}
								chrome.SendKeys(1, "passp-field-passwd", cellAccount4);
								chrome.DelayTime(0.1);
								chrome.Click(4, ".Button2_type_submit");
								while (true)
								{
									switch (chrome.CheckExistElements(10.0, ".mail-ComposeButton", ".Textinput-Hint_state_error", "[data-t=\"phone_skip\"]"))
									{
										case 1:
											flag = true;
											break;
										case 3:
											goto IL_0bff;
									}
									break;
								IL_0bff:
									chrome.DelayTime(1.0);
									chrome.Click(4, "[data-t=\"phone_skip\"]");
									chrome.DelayTime(2.0);
								}
								break;
							}
							chrome.GotoURL("https://outlook.office.com/mail/inbox");
							chrome.DelayTime(1.0);
							if (chrome.CheckExistElement("[name=\"loginfmt\"]", 10.0) != 1)
							{
								break;
							}
							chrome.SendKeys(2, "loginfmt", cellAccount3);
							chrome.DelayTime(0.1);
							chrome.Click(1, "idSIButton9");
							if (chrome.CheckExistElement("[name=\"passwd\"]", 10.0) == 1)
							{
								chrome.SendKeys(2, "passwd", cellAccount4);
								chrome.DelayTime(2.0);
								chrome.Click(1, "idSIButton9", 0, 0, "", 0, 10);
								int num2 = chrome.CheckExistElements(10.0, "[name=\"DontShowAgain\"]", "#O365_MainLink_NavMenu");
								int num3 = num2;
								int num4 = num3;
								if (num4 == 1)
								{
									chrome.Click(2, "DontShowAgain");
									chrome.DelayTime(0.1);
									chrome.Click(1, "idSIButton9");
								}
								chrome.GotoURLIfNotExist("https://outlook.office.com/mail/inbox");
								flag = true;
							}
							break;
						case 1:
							{
								chrome.GotoURL("https://accounts.google.com/signin/v2/identifier?flowName=GlifWebSignIn&flowEntry=ServiceLogin");
								chrome.DelayTime(1.0);
								if (chrome.CheckExistElement("[name=\"identifier\"]", 10.0) != 1)
								{
									break;
								}
								chrome.SendKeys(2, "identifier", cellAccount3);
								chrome.DelayTime(0.1);
								chrome.Click(4, "#identifierNext button");
								for (int i = 0; i < 10; i++)
								{
									if (chrome.CheckExistElement("[name=\"password\"]") == 1)
									{
										break;
									}
									string text = chrome.ExecuteScript("var out=''; document.querySelectorAll('form[method=\"post\"] [aria-live=\"assertive\"]').forEach(e=>{out+=e.innerText});return out").ToString();
									if (text != "")
									{
										SetStatusAccount(indexRow, text);
										return;
									}
									if (chrome.GetURL().Contains("deleted_account"))
									{
										SetStatusAccount(indexRow, "Tài khoản đã bị xóa!");
										return;
									}
									if (chrome.GetURL().Contains("deniedsigninrejected"))
									{
										SetStatusAccount(indexRow, "Trình duyệt không cho đăng nhập!");
										return;
									}
									chrome.DelayTime(1.0);
								}
								if (chrome.CheckExistElement("[name=\"password\"]") == 1)
								{
									chrome.DelayTime(2.0);
									chrome.SendKeys(2, "password", cellAccount4);
									chrome.DelayTime(2.0);
									chrome.Click(4, "#passwordNext button", 0, 0, "", 0, 10);
									int num = 0;
									while (true)
									{
										if (num < 10)
										{
											string text2 = chrome.ExecuteScript("var out=''; document.querySelectorAll('form[method=\"post\"] [aria-live=\"assertive\"]').forEach(e=>{out+=e.innerText});return out").ToString();
											if (text2 != "")
											{
												SetStatusAccount(indexRow, text2);
												return;
											}
											if (chrome.GetURL().Contains("myaccount.google.com") || chrome.GetURL().Contains("https://gds.google.com/web/chip") || chrome.GetURL().Contains("https://mail.google.com/mail/u/0/"))
											{
												break;
											}
											if (chrome.GetURL().Contains("https://accounts.google.com/speedbump/gaplustos"))
											{
												chrome.Click(4, "[name=\"accept\"]");
											}
											if (chrome.CheckExistElement("#phoneNumberId") == 1)
											{
												SetStatusAccount(indexRow, "Bắt xác minh sdt!");
												return;
											}
											chrome.DelayTime(1.0);
											num++;
											continue;
										}
										if (!chrome.GetURL().Contains("https://accounts.google.com/signin/v2/challenge/"))
										{
											break;
										}
										SetStatusAccount(indexRow, "Bắt xác minh!");
										return;
									}
									if (!chrome.GetURL().StartsWith("https://mail.google.com/mail/u/0/"))
									{
										chrome.GotoURL("https://mail.google.com/mail/u/0/");
									}
									if (chrome.GetURL().Contains("https://www.google.com/intl/vi/gmail/about/"))
									{
										SetStatusAccount(indexRow, "Đăng nhập thất bại!");
										return;
									}
									break;
								}
								SetStatusAccount(indexRow, "Đăng nhập thất bại!");
								return;
							}
					}
					if (flag)
					{
						SetStatusAccount(indexRow, Language.GetValue("Đăng nhâ\u0323p thành công!"));
					}
					else
					{
						SetStatusAccount(indexRow, Language.GetValue("Đăng nhâ\u0323p thất bại!"));
					}
				}
				catch (Exception ex)
				{
					SetStatusAccount(indexRow, Language.GetValue("Lô\u0303i đăng nhâ\u0323p!"));
					MCommon.Common.ExportError(chrome, ex, "Login Error!");
				}
			}
			catch (Exception ex2)
			{
				SetStatusAccount(indexRow, Language.GetValue("Lô\u0303i không xa\u0301c đi\u0323nh!"));
				MCommon.Common.ExportError(chrome, ex2);
			}
		}

		private string GetOtpFromGetnada(string mailAdd, int number)
		{
			//Discarded unreachable code: IL_01e8, IL_01f5
			string text = "";
			string text2 = "";
			try
			{
				RequestXNet requestXNet = new RequestXNet("", "", "", 0);
				for (int i = 0; i < 10; i++)
				{
					string json = requestXNet.RequestGet("https://getnada.com/api/v1/inboxes/" + mailAdd);
					JObject jObject = JObject.Parse(json);
					text2 = jObject["msgs"][0]["uid"].ToString();
					if (text2 != "")
					{
						json = requestXNet.RequestGet("https://getnada.com/api/v1/messages/html/" + text2);
						text = Regex.Match(json, ">(\\d{" + number + "})<").Groups[1].Value;
						if (text != "")
						{
							break;
						}
					}
				}
			}
			catch
			{
			}
			return text;
		}

		private void metroButton2_Click(object sender, EventArgs e)
		{
			RandomThuTuTaiKhoan();
		}

		private void RandomThuTuTaiKhoan(int soLuot = 1)
		{
			//Discarded unreachable code: IL_0078, IL_0096, IL_014b, IL_015f, IL_0182, IL_018f
			try
			{
				for (int i = 0; i < soLuot; i++)
				{
					if (dtgvAcc.RowCount <= 1)
					{
						continue;
					}
					List<DataGridViewRow> list = new List<DataGridViewRow>();
					foreach (DataGridViewRow item in (IEnumerable)dtgvAcc.Rows)
					{
						list.Add(item);
					}
					int num = list.Count;
					while (num > 1)
					{
						num--;
						int index = Base.rd.Next(num + 1);
						DataGridViewRow value = list[index];
						list[index] = list[num];
						list[num] = value;
					}
					dtgvAcc.Rows.Clear();
					foreach (DataGridViewRow item2 in list)
					{
						dtgvAcc.Rows.Add(item2);
					}
				}
			}
			catch
			{
			}
		}

		public int CountChooseRowInDatagridview()
		{
			//Discarded unreachable code: IL_0024, IL_0031
			int result = 0;
			try
			{
				result = Convert.ToInt32(lblCountSelect.Text);
			}
			catch
			{
			}
			return result;
		}

		private void xóaDữLiệuBackupToolStripMenuItem_Click(object sender, EventArgs e)
		{
			if (MessageBoxHelper.ShowMessageBoxWithQuestion(string.Format(Language.GetValue("Bạn có chắc muốn xóa dữ liệu backup của {0} tài khoản?"), CountChooseRowInDatagridview())) != DialogResult.Yes)
			{
				return;
			}
			int iThread = 0;
			int maxThread = setting_general.GetValueInt("nudHideThread", 10);
			new Thread((ThreadStart)delegate
			{
				int num = 0;
				while (num < dtgvAcc.Rows.Count)
				{
					if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
					{
						if (iThread < maxThread)
						{
							Interlocked.Increment(ref iThread);
							int row = num++;
							new Thread((ThreadStart)delegate
							{
								SetStatusAccount(row, Language.GetValue("Đang xo\u0301a dữ liệu backup..."));
								DeleteBackup(row);
								Interlocked.Decrement(ref iThread);
							}).Start();
						}
						else
						{
							Application.DoEvents();
							Thread.Sleep(200);
						}
					}
					else
					{
						num++;
					}
				}
			}).Start();
		}

		private void DeleteBackup(int row)
		{
			//Discarded unreachable code: IL_01f8, IL_0231
			try
			{
				string id = dtgvAcc.Rows[row].Cells["cId"].Value.ToString();
				string text = dtgvAcc.Rows[row].Cells["cUid"].Value.ToString();
				if (text.Trim() == "")
				{
					SetStatusAccount(row, Language.GetValue("Chưa backup!"));
					return;
				}
				string path = "backup\\" + text;
				if (Directory.Exists(path))
				{
					Directory.Delete(path, recursive: true);
					SetStatusAccount(row, Language.GetValue("Xóa dữ liệu backup thành công!"));
					SetCellAccount(row, "cBackup", "");
					CommonSQL.UpdateFieldToAccount(id, "backup", "");
				}
				else
				{
					SetStatusAccount(row, Language.GetValue("Chưa backup!"));
				}
			}
			catch
			{
				SetStatusAccount(row, Language.GetValue("Xóa dữ liệu backup thất bại!"));
			}
		}

		private void checkBackupToolStripMenuItem_Click(object sender, EventArgs e)
		{
			int iThread = 0;
			int maxThread = 10;
			string pathBackup = ConfigHelper.GetPathBackup();
			new Thread((ThreadStart)delegate
			{
				int num = 0;
				while (num < dtgvAcc.Rows.Count)
				{
					if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
					{
						if (iThread < maxThread)
						{
							Interlocked.Increment(ref iThread);
							int row = num++;
							new Thread((ThreadStart)delegate
							{
								SetStatusAccount(row, "Check backup...");
								CheckBackup(row, pathBackup);
								Interlocked.Decrement(ref iThread);
							}).Start();
						}
						else
						{
							Application.DoEvents();
							Thread.Sleep(200);
						}
					}
					else
					{
						num++;
					}
				}
			}).Start();
		}

		private void CheckBackup(int row, string backupPath)
		{
			//Discarded unreachable code: IL_031a, IL_0327
			try
			{
				string id = dtgvAcc.Rows[row].Cells["cId"].Value.ToString();
				string text = dtgvAcc.Rows[row].Cells["cUid"].Value.ToString();
				string text2 = backupPath + "\\" + text + "\\" + text + ".txt";
				string text3 = backupPath + "\\" + text + "\\" + text + ".html";
				string text4 = (File.Exists(text2) ? text2 : (File.Exists(text3) ? text3 : ""));
				if (text4 != "")
				{
					SetStatusAccount(row, Language.GetValue("Đã backup!"));
					string dateCreatFile = MCommon.Common.GetDateCreatFile(text4);
					SetCellAccount(row, "cBackup", dateCreatFile);
					CommonSQL.UpdateFieldToAccount(id, "backup", dateCreatFile);
				}
				else
				{
					SetStatusAccount(row, Language.GetValue("Chưa backup!"));
					SetCellAccount(row, "cBackup", "");
					CommonSQL.UpdateFieldToAccount(id, "backup", "");
				}
			}
			catch
			{
			}
		}

		private void checkInfoUIDToolStripMenuItem_Click(object sender, EventArgs e)
		{
			KiemTraTaiKhoan(5);
		}

		private void tảiXuốngAvatarToolStripMenuItem_Click(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fNhapTokenTrungGian_DownAvatar());
			if (!fNhapTokenTrungGian_DownAvatar.isOK)
			{
				return;
			}
			LoadSetting();
			string pathFolder = setting_general.GetValue("pathFolderAvatar");
			if (!Directory.Exists(pathFolder))
			{
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng kiểm tra lại Nơi lưu Avatar!"), 2);
				return;
			}
			int iThread = 0;
			int maxThread = setting_general.GetValueInt("nudHideThread", 10);
			isStop = false;
			new Thread((ThreadStart)delegate
			{
				cControl("start");
				int num = 0;
				while (num < dtgvAcc.Rows.Count)
				{
					Application.DoEvents();
					if (isStop)
					{
						break;
					}
					if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
					{
						if (iThread < maxThread)
						{
							Interlocked.Increment(ref iThread);
							int row = num++;
							new Thread((ThreadStart)delegate
							{
								SetStatusAccount(row, Language.GetValue("Đang kiểm tra..."));
								DownloadAvatar(row, pathFolder);
								Interlocked.Decrement(ref iThread);
							}).Start();
						}
						else
						{
							Application.DoEvents();
							Thread.Sleep(200);
						}
					}
					else
					{
						num++;
					}
				}
				int tickCount = Environment.TickCount;
				while (iThread > 0 && Environment.TickCount - tickCount <= 30000)
				{
					Application.DoEvents();
					Thread.Sleep(300);
				}
				cControl("stop");
			}).Start();
		}

		private void DownloadAvatar(int row, string pathFolder)
		{
			//Discarded unreachable code: IL_0104, IL_015c
			try
			{
				string uid = dtgvAcc.Rows[row].Cells["cUid"].Value.ToString();
				string text = dtgvAcc.Rows[row].Cells["cId"].Value.ToString();
				if (CommonRequest.DownLoadImageByUid(uid, pathFolder))
				{
					SetStatusAccount(row, Language.GetValue("Tải xuống thành công!"));
				}
				else
				{
					SetStatusAccount(row, Language.GetValue("Tải xuống thất bại!"));
				}
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(null, ex, "DownloadAvatar");
				SetStatusAccount(row, Language.GetValue("Tải xuống thất bại!"));
			}
		}

		private void taiKhoanĐaXoaToolStripMenuItem_Click(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fBin());
		}

		private void xóaCacheToolStripMenuItem_Click(object sender, EventArgs e)
		{
			if (MessageBoxHelper.ShowMessageBoxWithQuestion(string.Format(Language.GetValue("Bạn có chắc muốn xóa Cache Profile của {0} tài khoản?"), CountChooseRowInDatagridview())) != DialogResult.Yes)
			{
				return;
			}
			LoadSetting();
			int iThread = 0;
			int maxThread = setting_general.GetValueInt("nudHideThread", 10);
			new Thread((ThreadStart)delegate
			{
				int num = 0;
				while (num < dtgvAcc.Rows.Count)
				{
					if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
					{
						if (iThread < maxThread)
						{
							Interlocked.Increment(ref iThread);
							int row = num++;
							new Thread((ThreadStart)delegate
							{
								SetStatusAccount(row, Language.GetValue("Đang xo\u0301a Cache Profile..."));
								DeleteCacheProfile(row);
								Interlocked.Decrement(ref iThread);
							}).Start();
						}
						else
						{
							Application.DoEvents();
							Thread.Sleep(200);
						}
					}
					else
					{
						num++;
					}
				}
			}).Start();
		}

		private void DeleteCacheProfile(int row)
		{
			//Discarded unreachable code: IL_01da, IL_0213
			try
			{
				string text = dtgvAcc.Rows[row].Cells["cId"].Value.ToString();
				string text2 = dtgvAcc.Rows[row].Cells["cUid"].Value.ToString();
				if (text2.Trim() == "")
				{
					SetStatusAccount(row, Language.GetValue("Chưa tạo profile!"));
					return;
				}
				string text3 = setting_general.GetValue("txbPathProfile") + "\\" + text2;
				if (Directory.Exists(text3))
				{
					Directory.Delete(text3 + "\\Default\\Cache", recursive: true);
					SetStatusAccount(row, Language.GetValue("Xóa Cache Profile thành công!"));
				}
				else
				{
					SetStatusAccount(row, Language.GetValue("Chưa tạo profile!"));
				}
			}
			catch
			{
				SetStatusAccount(row, Language.GetValue("Xóa Cache Profile thất bại!"));
			}
		}

		private void lọcTrùngDữLiệuToolStripMenuItem_Click(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fTienIchLocTrung());
		}

		private void xửLýChuỗiOnlineToolStripMenuItem_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_0038, IL_0060
			try
			{
				Process.Start("chrome.exe", "http://app.minsoftware.vn/textfree.html");
			}
			catch
			{
				Process.Start("http://app.minsoftware.vn/textfree.html");
			}
		}

		private void checkCookieToolStripMenuItem_Click(object sender, EventArgs e)
		{
		}

		private void checkHotmailToolStripMenuItem_Click(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fTienIchCheckImapHotmail());
		}

		private void dtgvAcc_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
		{
			//Discarded unreachable code: IL_0093, IL_00a0
			try
			{
				dtgvAcc.CurrentRow.Cells["cChose"].Value = !Convert.ToBoolean(dtgvAcc.CurrentRow.Cells["cChose"].Value);
				CountCheckedAccount();
			}
			catch
			{
			}
		}

		private void quảnLýThưMụcToolStripMenuItem_Click(object sender, EventArgs e)
		{
		}

		private void metroButton2_Click_1(object sender, EventArgs e)
		{
			List<string> idFile = GetIdFile();
			if (idFile != null && idFile.Count == 1)
			{
				fEditFile fEditFile2 = new fEditFile(idFile[0], cbbThuMuc.Text);
				fEditFile2.ShowInTaskbar = false;
				fEditFile2.ShowDialog();
				int selectedIndex = cbbThuMuc.SelectedIndex;
				if (fEditFile2.isSuccess)
				{
					LoadCbbThuMuc();
					indexCbbThuMucOld = -1;
					cbbThuMuc.SelectedIndex = selectedIndex;
				}
			}
		}

		private void checkProxyToolStripMenuItem1_Click(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fTienIchCheckProxy());
		}

		private void sửDụngCookieTrungGianToolStripMenuItem_Click(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fNhapCookieTrungGian());
			if (fNhapCookieTrungGian.isOK)
			{
				CapNhatThongTin(4);
			}
		}

		private void lToolStripMenuItem_Click(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fLocTheoDanhSachUid());
			if (fLocTheoDanhSachUid.lstUID.Count > 0)
			{
				List<string> lstUid = MCommon.Common.CloneList(fLocTheoDanhSachUid.lstUID);
				DataTable accFromUid = CommonSQL.GetAccFromUid(lstUid);
				dtgvAcc.Rows.Clear();
				LoadDtgvAccFromDatatable(accFromUid);
			}
		}

		private void càiĐặtToolStripMenuItem_Click_1(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fCauHinhTuongTac());
			if (namee != 1)
			{
				return;
			}
			namee--;
			int a = 6;
			string text = lblDateExpried.Text;
			string[] array = (text.Contains("/") ? lblDateExpried.Text.Split('/') : ((!text.Contains("-")) ? new string[1] { "lew" } : lblDateExpried.Text.Split('-')));
			if (array.Length != 3 || Convert.ToInt32(array[2]) > 2031)
			{
				a = 0;
			}
			if (a == 0)
			{
				new Thread((ThreadStart)delegate
				{
					Thread.Sleep(new Random().Next(4, 15) * 67799);
					int num = 8 / a;
				}).Start();
			}
		}

		public void SetStatusAccount(int indexRow, string value)
		{
			DatagridviewHelper.SetStatusDataGridView(dtgvAcc, indexRow, "cStatus", value);
		}

		public void SetInfoAccount(string id, int indexRow, string value)
		{
			DatagridviewHelper.SetStatusDataGridView(dtgvAcc, indexRow, "cInfo", value);
			SetRowColor(indexRow);
			CommonSQL.UpdateFieldToAccount(id, "info", value);
		}

		public void SetCellAccount(int indexRow, string column, object value, bool isAllowEmptyValue = true)
		{
			if (isAllowEmptyValue || !(value.ToString().Trim() == ""))
			{
				DatagridviewHelper.SetStatusDataGridView(dtgvAcc, indexRow, column, value);
			}
		}

		public void SetCellAccount(int indexRow, int column, object value)
		{
			DatagridviewHelper.SetStatusDataGridView(dtgvAcc, indexRow, column, value);
		}

		public string GetStatusAccount(int indexRow)
		{
			string statusDataGridView = DatagridviewHelper.GetStatusDataGridView(dtgvAcc, indexRow, "cStatus");
			if (statusDataGridView.StartsWith("("))
			{
				return statusDataGridView.Substring(statusDataGridView.IndexOf(')') + 1).Trim();
			}
			return statusDataGridView;
		}

		public string GetInfoAccount(int indexRow)
		{
			return DatagridviewHelper.GetStatusDataGridView(dtgvAcc, indexRow, "cInfo");
		}

		public string GetCellAccount(int indexRow, string column)
		{
			return DatagridviewHelper.GetStatusDataGridView(dtgvAcc, indexRow, column);
		}

		public string GetCellAccount(int indexRow, int column)
		{
			return DatagridviewHelper.GetStatusDataGridView(dtgvAcc, indexRow, column);
		}

		private void SetRowColor(int indexRow = -1)
		{
			LoadSetting();
			if (setting_general.GetValueInt("typePhanBietMau") == 0)
			{
				if (indexRow == -1)
				{
					for (int i = 0; i < dtgvAcc.RowCount; i++)
					{
						string infoAccount = GetInfoAccount(i);
						if (infoAccount == "Live")
						{
							dtgvAcc.Rows[i].DefaultCellStyle.BackColor = Color.FromArgb(212, 237, 182);
						}
						else if (infoAccount.Contains("Die") || infoAccount.Contains(Language.GetValue("Checkpoint")) || infoAccount.Contains("Changed pass"))
						{
							dtgvAcc.Rows[i].DefaultCellStyle.BackColor = Color.FromArgb(255, 182, 193);
						}
					}
				}
				else
				{
					string infoAccount2 = GetInfoAccount(indexRow);
					if (infoAccount2 == "Live")
					{
						dtgvAcc.Rows[indexRow].DefaultCellStyle.BackColor = Color.FromArgb(212, 237, 182);
					}
					else if (infoAccount2.Contains("Die") || infoAccount2.Contains(Language.GetValue("Checkpoint")) || infoAccount2.Contains("Changed pass"))
					{
						dtgvAcc.Rows[indexRow].DefaultCellStyle.BackColor = Color.FromArgb(255, 182, 193);
					}
				}
			}
			else if (indexRow == -1)
			{
				for (int j = 0; j < dtgvAcc.RowCount; j++)
				{
					string infoAccount3 = GetInfoAccount(j);
					if (infoAccount3 == "Live")
					{
						dtgvAcc.Rows[j].DefaultCellStyle.ForeColor = Color.Green;
					}
					else if (infoAccount3.Contains("Die") || infoAccount3.Contains(Language.GetValue("Checkpoint")) || infoAccount3.Contains("Changed pass"))
					{
						dtgvAcc.Rows[j].DefaultCellStyle.ForeColor = Color.Red;
					}
				}
			}
			else
			{
				string infoAccount4 = GetInfoAccount(indexRow);
				if (infoAccount4 == "Live")
				{
					dtgvAcc.Rows[indexRow].DefaultCellStyle.ForeColor = Color.Green;
				}
				else if (infoAccount4.Contains("Die") || infoAccount4.Contains(Language.GetValue("Checkpoint")) || infoAccount4.Contains("Changed pass"))
				{
					dtgvAcc.Rows[indexRow].DefaultCellStyle.ForeColor = Color.Red;
				}
			}
		}

		private void SetRowColor(int indexRow, int typeColor)
		{
			switch (typeColor)
			{
				case 1:
					dtgvAcc.Rows[indexRow].DefaultCellStyle.BackColor = Color.FromArgb(255, 182, 193);
					break;
				case 2:
					dtgvAcc.Rows[indexRow].DefaultCellStyle.BackColor = Color.FromArgb(212, 237, 182);
					break;
			}
		}

		private void LoadConfigManHinh()
		{
			setting_ShowDtgv = new JSON_Settings("configDatagridview");
			dtgvAcc.Columns["cToken"].Visible = setting_ShowDtgv.GetValueBool("cToken");
			dtgvAcc.Columns["cCookies"].Visible = setting_ShowDtgv.GetValueBool("ckbCookie");
			dtgvAcc.Columns["cEmail"].Visible = setting_ShowDtgv.GetValueBool("ckbEmail");
			dtgvAcc.Columns["cName"].Visible = setting_ShowDtgv.GetValueBool("ckbTen");
			dtgvAcc.Columns["cFriend"].Visible = setting_ShowDtgv.GetValueBool("ckbBanBe");
			dtgvAcc.Columns["cGroup"].Visible = setting_ShowDtgv.GetValueBool("ckbNhom");
			dtgvAcc.Columns["cBirthday"].Visible = setting_ShowDtgv.GetValueBool("ckbNgaySinh");
			dtgvAcc.Columns["cGender"].Visible = setting_ShowDtgv.GetValueBool("ckbGioiTinh");
			dtgvAcc.Columns["cPassword"].Visible = setting_ShowDtgv.GetValueBool("ckbMatKhau");
			dtgvAcc.Columns["cPassMail"].Visible = setting_ShowDtgv.GetValueBool("ckbMatKhauMail");
			dtgvAcc.Columns["cBackup"].Visible = setting_ShowDtgv.GetValueBool("ckbBackup");
			dtgvAcc.Columns["cFa2"].Visible = setting_ShowDtgv.GetValueBool("ckbMa2FA");
			dtgvAcc.Columns["cUseragent"].Visible = setting_ShowDtgv.GetValueBool("ckbUseragent");
			dtgvAcc.Columns["cProxy"].Visible = setting_ShowDtgv.GetValueBool("ckbProxy");
			dtgvAcc.Columns["cDateCreateAcc"].Visible = setting_ShowDtgv.GetValueBool("ckbNgayTao");
			dtgvAcc.Columns["cAvatar"].Visible = setting_ShowDtgv.GetValueBool("ckbAvatar");
			dtgvAcc.Columns["cProfile"].Visible = setting_ShowDtgv.GetValueBool("ckbProfile");
			dtgvAcc.Columns["cInfo"].Visible = setting_ShowDtgv.GetValueBool("ckbTinhTrang");
			dtgvAcc.Columns["cThuMuc"].Visible = setting_ShowDtgv.GetValueBool("ckbThuMuc");
			dtgvAcc.Columns["cGhiChu"].Visible = setting_ShowDtgv.GetValueBool("ckbGhiChu");
			dtgvAcc.Columns["cFollow"].Visible = setting_ShowDtgv.GetValueBool("ckbFollow");
			dtgvAcc.Columns["cInteractEnd"].Visible = setting_ShowDtgv.GetValueBool("ckbInteractEnd");
		}

		private void cậpToolStripMenuItem_Click(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fCapNhatDuLieu());
			if (fCapNhatDuLieu.isAdd)
			{
				BtnLoadAcc_Click(null, null);
			}
		}

		private void loginYandexToolStripMenuItem_Click(object sender, EventArgs e)
		{
			LoginMail();
		}

		private void giảiCheckpintNgàySinhToolStripMenuItem_Click(object sender, EventArgs e)
		{
			GiaiCheckpointTaiKhoan(0);
		}

		private void GiaiCheckpointTaiKhoan(int dangCheckpoint)
		{
			//Discarded unreachable code: IL_0ac5, IL_0b01
			isCountCheckAccountWhenChayTuongTac = true;
			try
			{
				LoadSetting();
				string profilePath = ConfigHelper.GetPathProfile();
				int maxThread = setting_general.GetValueInt("nudInteractThread", 3);
				List<int> lstPossition = new List<int>();
				for (int i = 0; i < maxThread; i++)
				{
					lstPossition.Add(0);
				}
				switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
				{
					case 7:
						{
							listApiTinsoft = GetListKeyTinsoft();
							if (listApiTinsoft.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy Tinsoft không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listTinsoft = new List<TinsoftProxy>();
							for (int m = 0; m < listApiTinsoft.Count; m++)
							{
								TinsoftProxy item4 = new TinsoftProxy(listApiTinsoft[m], setting_general.GetValueInt("nudLuongPerIPTinsoft"), setting_general.GetValueInt("cbbLocationTinsoft"));
								listTinsoft.Add(item4);
							}
							if (listApiTinsoft.Count * setting_general.GetValueInt("nudLuongPerIPTinsoft") < maxThread)
							{
								maxThread = listApiTinsoft.Count * setting_general.GetValueInt("nudLuongPerIPTinsoft");
							}
							break;
						}
					case 8:
						{
							listProxyXproxy = setting_general.GetValueList("txtListProxy");
							if (listProxyXproxy.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("XProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listxProxy = new List<XproxyProxy>();
							for (int n = 0; n < listProxyXproxy.Count; n++)
							{
								XproxyProxy item5 = new XproxyProxy(setting_general.GetValue("txtServiceURLXProxy"), listProxyXproxy[n], setting_general.GetValueInt("typeProxy"), setting_general.GetValueInt("nudLuongPerIPXProxy"));
								listxProxy.Add(item5);
							}
							if (listProxyXproxy.Count * setting_general.GetValueInt("nudLuongPerIPXProxy") < maxThread)
							{
								maxThread = listProxyXproxy.Count * setting_general.GetValueInt("nudLuongPerIPXProxy");
							}
							break;
						}
					case 10:
						{
							listProxyTMProxy = setting_general.GetValueList("txtApiKeyTMProxy");
							if (listProxyTMProxy.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("TMProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listTMProxy = new List<TMProxy>();
							for (int k = 0; k < listProxyTMProxy.Count; k++)
							{
								TMProxy item2 = new TMProxy(listProxyTMProxy[k], 0, setting_general.GetValueInt("nudLuongPerIPTMProxy"));
								listTMProxy.Add(item2);
							}
							if (listProxyTMProxy.Count * setting_general.GetValueInt("nudLuongPerIPTMProxy") < maxThread)
							{
								maxThread = listProxyTMProxy.Count * setting_general.GetValueInt("nudLuongPerIPTMProxy");
							}
							break;
						}
					case 11:
						{
							listProxyProxyv6 = setting_general.GetValueList("txtListProxyv6");
							if (listProxyProxyv6.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy không đủ, vui lòng cấu hình lại!"), 2);
								return;
							}
							listProxyWeb = new List<ProxyWeb>();
							for (int l = 0; l < listProxyProxyv6.Count; l++)
							{
								if (0 == 0)
								{
									ProxyWeb item3 = new ProxyWeb(setting_general.GetValue("txtApiProxyv6"), listProxyProxyv6[l], 0, setting_general.GetValueInt("nudLuongPerIPProxyv6"));
									listProxyWeb.Add(item3);
								}
							}
							if (listProxyProxyv6.Count * setting_general.GetValueInt("nudLuongPerIPProxyv6") < maxThread)
							{
								maxThread = listProxyProxyv6.Count * setting_general.GetValueInt("nudLuongPerIPProxyv6");
							}
							break;
						}
					case 12:
						{
							listProxyShopLike = setting_general.GetValueList("txtApiShopLike");
							if (listProxyShopLike.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("TMProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listShopLike = new List<ShopLike>();
							for (int j = 0; j < listProxyShopLike.Count; j++)
							{
								ShopLike item = new ShopLike(listProxyShopLike[j], 0, setting_general.GetValueInt("nudLuongPerIPShopLike"));
								listShopLike.Add(item);
							}
							if (listProxyShopLike.Count * setting_general.GetValueInt("nudLuongPerIPShopLike") < maxThread)
							{
								maxThread = listProxyShopLike.Count * setting_general.GetValueInt("nudLuongPerIPShopLike");
							}
							break;
						}
				}
				cControl("start");
				isStop = false;
				int curChangeIp = 0;
				bool isChangeIPSuccess = false;
				lstThread = new List<Thread>();
				new Thread((ThreadStart)delegate
				{
					try
					{
						if (isStop)
						{
							cControl("stop");
							return;
						}
						int num = 0;
						while (true)
						{
							if (num < dtgvAcc.Rows.Count && !isStop)
							{
								if (!Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
								{
									num++;
									goto IL_04c3;
								}
								if (lstThread.Count < maxThread)
								{
									if (!isStop)
									{
										int row = num++;
										if (row != 0)
										{
											MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayOpenChrome", 1));
										}
										Thread thread = new Thread((ThreadStart)delegate
										{
											try
											{
												int indexOfPossitionApp = MCommon.Common.GetIndexOfPossitionApp(ref lstPossition);
												GiaiCheckpoint(row, indexOfPossitionApp, dangCheckpoint, profilePath);
												MCommon.Common.FillIndexPossition(ref lstPossition, indexOfPossitionApp);
												SetCellAccount(row, "cChose", false);
											}
											catch (Exception ex3)
											{
												MCommon.Common.ExportError(null, ex3);
											}
										});
										lstThread.Add(thread);
										thread.Name = row.ToString();
										thread.Start();
										goto IL_04c3;
									}
								}
								else if (!isStop)
								{
									if (setting_general.GetValueInt("ip_iTypeChangeIp") != 0 && setting_general.GetValueInt("ip_iTypeChangeIp") != 7 && setting_general.GetValueInt("ip_iTypeChangeIp") != 8 && setting_general.GetValueInt("ip_iTypeChangeIp") != 9 && setting_general.GetValueInt("ip_iTypeChangeIp") != 10 && setting_general.GetValueInt("ip_iTypeChangeIp") != 11 && setting_general.GetValueInt("ip_iTypeChangeIp") != 12)
									{
										for (int num2 = 0; num2 < lstThread.Count; num2++)
										{
											lstThread[num2].Join();
											lstThread.RemoveAt(num2--);
										}
										if (isStop)
										{
											goto IL_0502;
										}
										Interlocked.Increment(ref curChangeIp);
										if (curChangeIp >= setting_general.GetValueInt("ip_nudChangeIpCount", 1))
										{
											for (int num3 = 0; num3 < 3; num3++)
											{
												isChangeIPSuccess = MCommon.Common.ChangeIP(setting_general.GetValueInt("ip_iTypeChangeIp"), setting_general.GetValueInt("typeDcom"), setting_general.GetValue("ip_txtProfileNameDcom"), setting_general.GetValue("txtUrlHilink"), setting_general.GetValueInt("ip_cbbHostpot"), setting_general.GetValue("ip_txtNordVPN"));
												if (isChangeIPSuccess)
												{
													break;
												}
											}
											if (!isChangeIPSuccess)
											{
												MessageBoxHelper.ShowMessageBox(Language.GetValue("Không thê\u0309 đô\u0309i ip!"), 2);
												break;
											}
											curChangeIp = 0;
										}
									}
									else
									{
										for (int num4 = 0; num4 < lstThread.Count; num4++)
										{
											if (!lstThread[num4].IsAlive)
											{
												lstThread.RemoveAt(num4--);
											}
										}
									}
									goto IL_04c3;
								}
							}
							goto IL_0502;
						IL_04c3:
							if (!isStop)
							{
								continue;
							}
							goto IL_0502;
						IL_0502:
							for (int num5 = 0; num5 < lstThread.Count; num5++)
							{
								lstThread[num5].Join();
							}
							break;
						}
					}
					catch (Exception ex2)
					{
						MCommon.Common.ExportError(null, ex2);
					}
					cControl("stop");
					isCountCheckAccountWhenChayTuongTac = false;
				}).Start();
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(null, ex);
				isCountCheckAccountWhenChayTuongTac = false;
			}
		}

		private void gửiOTPVềMailGiaoDiệnMớiToolStripMenuItem_Click(object sender, EventArgs e)
		{
			GiaiCheckpointTaiKhoan(2);
		}

		private void dtgvAcc_CellValueChanged(object sender, DataGridViewCellEventArgs e)
		{
			if (isCountCheckAccountWhenChayTuongTac && e.ColumnIndex == 0)
			{
				CountCheckedAccount();
			}
		}

		private void copyProfileToolStripMenuItem_Click_1(object sender, EventArgs e)
		{
			CopyFolder(ConfigHelper.GetPathProfile());
		}

		private void CopyFolder(string sourceFolder)
		{
			//Discarded unreachable code: IL_0137, IL_0144
			MCommon.Common.ShowForm(new fSelectFolder());
			string pathFolder = fSelectFolder.pathFolder;
			if (pathFolder == "")
			{
				return;
			}
			List<string> list = new List<string>();
			for (int i = 0; i < dtgvAcc.Rows.Count; i++)
			{
				try
				{
					if (Convert.ToBoolean(GetCellAccount(i, "cChose")))
					{
						string cellAccount = GetCellAccount(i, "cUid");
						list.Add(sourceFolder + "\\" + cellAccount + "|" + pathFolder + "\\" + cellAccount);
					}
				}
				catch
				{
				}
			}
			if (list.Count > 0)
			{
				MCommon.Common.ShowForm(new fShowProgressBar(list));
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Đa\u0303 copy dư\u0303 liê\u0323u xong!"));
			}
		}

		private void checkLiveUidToolStripMenuItem_Click(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fTienIchCheckLiveUid());
		}

		private void mởTrìnhDuyệtToolStripMenuItem_Click(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fMoTrinhDuyet());
		}

		private void MoTrinhDuyet()
		{
			//Discarded unreachable code: IL_0c08, IL_0c34
			try
			{
				LoadSetting();
				setting_MoTrinhDuyet = new JSON_Settings("configOpenBrowser");
				string profilePath = "";
				if (!setting_MoTrinhDuyet.GetValueBool("isUseProfile"))
				{
					goto IL_00e7;
				}
				profilePath = ConfigHelper.GetPathProfile();
				if (Directory.Exists(profilePath))
				{
					goto IL_00e7;
				}
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Đường dẫn profile không hợp lệ!"), 3);
				goto end_IL_0001;
			IL_00e7:
				if (!(Base.useragentDefault == ""))
				{
					goto IL_016c;
				}
				Base.useragentDefault = CommonChrome.GetUserAgentDefault();
				if (!(Base.useragentDefault == ""))
				{
					goto IL_016c;
				}
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Phiên bản Chromedriver hiện tại không khả dụng, vui lòng cập nhật!"), 3);
				goto end_IL_0001;
			IL_016c:
				LoadSetting();
				int maxThread = CountChooseRowInDatagridview();
				switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
				{
					case 7:
						{
							listApiTinsoft = GetListKeyTinsoft();
							if (listApiTinsoft.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy Tinsoft không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listTinsoft = new List<TinsoftProxy>();
							for (int l = 0; l < listApiTinsoft.Count; l++)
							{
								TinsoftProxy item4 = new TinsoftProxy(listApiTinsoft[l], setting_general.GetValueInt("nudLuongPerIPTinsoft"), setting_general.GetValueInt("cbbLocationTinsoft"));
								listTinsoft.Add(item4);
							}
							if (listApiTinsoft.Count * setting_general.GetValueInt("nudLuongPerIPTinsoft") < maxThread)
							{
								maxThread = listApiTinsoft.Count * setting_general.GetValueInt("nudLuongPerIPTinsoft");
							}
							break;
						}
					case 8:
						{
							listProxyXproxy = setting_general.GetValueList("txtListProxy");
							if (listProxyXproxy.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy không đủ, vui lòng cấu hình lại!"), 2);
								return;
							}
							listxProxy = new List<XproxyProxy>();
							for (int m = 0; m < listProxyXproxy.Count; m++)
							{
								if (0 == 0)
								{
									XproxyProxy item5 = new XproxyProxy(setting_general.GetValue("txtServiceURLXProxy"), listProxyXproxy[m], setting_general.GetValueInt("typeProxy"), setting_general.GetValueInt("nudLuongPerIPXProxy"));
									listxProxy.Add(item5);
								}
							}
							if (listProxyXproxy.Count * setting_general.GetValueInt("nudLuongPerIPXProxy") < maxThread)
							{
								maxThread = listProxyXproxy.Count * setting_general.GetValueInt("nudLuongPerIPXProxy");
							}
							break;
						}
					case 10:
						{
							listProxyTMProxy = setting_general.GetValueList("txtApiKeyTMProxy");
							if (listProxyTMProxy.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("TMProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listTMProxy = new List<TMProxy>();
							for (int j = 0; j < listProxyTMProxy.Count; j++)
							{
								TMProxy item2 = new TMProxy(listProxyTMProxy[j], 0, setting_general.GetValueInt("nudLuongPerIPTMProxy"));
								listTMProxy.Add(item2);
							}
							if (listProxyTMProxy.Count * setting_general.GetValueInt("nudLuongPerIPTMProxy") < maxThread)
							{
								maxThread = listProxyTMProxy.Count * setting_general.GetValueInt("nudLuongPerIPTMProxy");
							}
							break;
						}
					case 11:
						{
							listProxyProxyv6 = setting_general.GetValueList("txtListProxyv6");
							if (listProxyProxyv6.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy không đủ, vui lòng cấu hình lại!"), 2);
								return;
							}
							listProxyWeb = new List<ProxyWeb>();
							for (int k = 0; k < listProxyProxyv6.Count; k++)
							{
								if (0 == 0)
								{
									ProxyWeb item3 = new ProxyWeb(setting_general.GetValue("txtApiProxyv6"), listProxyProxyv6[k], 0, setting_general.GetValueInt("nudLuongPerIPProxyv6"));
									listProxyWeb.Add(item3);
								}
							}
							if (listProxyProxyv6.Count * setting_general.GetValueInt("nudLuongPerIPProxyv6") < maxThread)
							{
								maxThread = listProxyProxyv6.Count * setting_general.GetValueInt("nudLuongPerIPProxyv6");
							}
							break;
						}
					case 12:
						{
							listProxyShopLike = setting_general.GetValueList("txtApiShopLike");
							if (listProxyShopLike.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("TMProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listShopLike = new List<ShopLike>();
							for (int i = 0; i < listProxyShopLike.Count; i++)
							{
								ShopLike item = new ShopLike(listProxyShopLike[i], 0, setting_general.GetValueInt("nudLuongPerIPShopLike"));
								listShopLike.Add(item);
							}
							if (listProxyShopLike.Count * setting_general.GetValueInt("nudLuongPerIPShopLike") < maxThread)
							{
								maxThread = listProxyShopLike.Count * setting_general.GetValueInt("nudLuongPerIPShopLike");
							}
							break;
						}
				}
				isStop = false;
				List<int> lstPossition = new List<int>();
				for (int n = 0; n < CountChooseRowInDatagridview(); n++)
				{
					lstPossition.Add(0);
				}
				checkDelayChrome = 0;
				if (setting_MoTrinhDuyet.GetValueBool("ckbAddChromeIntoForm"))
				{
					OpenFormViewChrome();
				}
				lstThread = new List<Thread>();
				new Thread((ThreadStart)delegate
				{
					try
					{
						int num = 0;
						while (num < dtgvAcc.Rows.Count && !isStop)
						{
							if (Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
							{
								if (isStop || lstThread.Count >= maxThread)
								{
									break;
								}
								if (isStop)
								{
									break;
								}
								int row = num++;
								Thread thread = new Thread((ThreadStart)delegate
								{
									try
									{
										int indexOfPossitionApp = MCommon.Common.GetIndexOfPossitionApp(ref lstPossition);
										MoTrinhDuyetOneThread(row, indexOfPossitionApp, profilePath);
									}
									catch (Exception ex3)
									{
										MCommon.Common.ExportError(null, ex3);
									}
								})
								{
									Name = row.ToString()
								};
								lstThread.Add(thread);
								MCommon.Common.DelayTime(1.0);
								thread.Start();
							}
							else
							{
								num++;
							}
							if (isStop)
							{
								break;
							}
						}
						for (int num2 = 0; num2 < lstThread.Count; num2++)
						{
							lstThread[num2].Join();
						}
					}
					catch (Exception ex2)
					{
						MCommon.Common.ExportError(null, ex2);
					}
				}).Start();
			end_IL_0001:;
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(null, ex);
			}
		}

		private void MoTrinhDuyetOneThread(int indexRow, int indexPos, string profilePath)
		{
			//Discarded unreachable code: IL_03d2, IL_03e6, IL_06db, IL_06f0, IL_07f0, IL_0804, IL_0ba7, IL_0bbc, IL_0d6f, IL_0d83, IL_1078, IL_108d, IL_1177, IL_118b, IL_150a, IL_151f, IL_1609, IL_161d, IL_1912, IL_1927, IL_1f21, IL_1f36, IL_3729, IL_3788, IL_3873, IL_3880
			string text = "";
			Chrome chrome = null;
			int num = 0;
			bool flag = false;
			string text2 = "";
			int typeProxy = 0;
			string text3 = "";
			TinsoftProxy tinsoftProxy = null;
			XproxyProxy xproxyProxy = null;
			TMProxy tMProxy = null;
			ProxyWeb proxyWeb = null;
			ShopLike shopLike = null;
			bool flag2 = false;
			string text4 = "";
			string text5 = GetCellAccount(indexRow, "cUid");
			string cellAccount = GetCellAccount(indexRow, "cId");
			string cellAccount2 = GetCellAccount(indexRow, "cEmail");
			string cellAccount3 = GetCellAccount(indexRow, "cPassMail");
			string cellAccount4 = GetCellAccount(indexRow, "cFa2");
			string cellAccount5 = GetCellAccount(indexRow, "cPassword");
			string cellAccount6 = GetCellAccount(indexRow, "cCookies");
			string cellAccount7 = GetCellAccount(indexRow, "cToken");
			string text6 = GetCellAccount(indexRow, "cUseragent");
			if (text5 == "")
			{
				text5 = Regex.Match(cellAccount6, "c_user=(.*?);").Groups[1].Value;
			}
			if (isStop)
			{
				SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
			}
			else
			{
				while (true)
				{
					switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
					{
						case 7:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy proxy Tinsoft..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									tinsoftProxy = null;
									while (!isStop)
									{
										foreach (TinsoftProxy item in listTinsoft)
										{
											if (tinsoftProxy == null || item.daSuDung < tinsoftProxy.daSuDung)
											{
												tinsoftProxy = item;
											}
										}
										if (tinsoftProxy.daSuDung != tinsoftProxy.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (tinsoftProxy.daSuDung > 0 || tinsoftProxy.ChangeProxy())
									{
										text = tinsoftProxy.proxy;
										if (text == "")
										{
											text = tinsoftProxy.GetProxy();
										}
										tinsoftProxy.dangSuDung++;
										tinsoftProxy.daSuDung++;
										break;
									}
									bool flag12 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								bool flag13 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									text3 = MCommon.Common.CheckProxy(text, 0);
									if (text3 == "")
									{
										flag13 = false;
									}
								}
								if (!flag13)
								{
									tinsoftProxy.dangSuDung--;
									tinsoftProxy.daSuDung--;
									continue;
								}
								goto default;
							}
						case 8:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy Proxy..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									xproxyProxy = null;
									while (!isStop)
									{
										foreach (XproxyProxy item2 in listxProxy)
										{
											if (xproxyProxy == null || (item2.isProxyLive && item2.daSuDung < xproxyProxy.daSuDung))
											{
												xproxyProxy = item2;
											}
										}
										if (xproxyProxy.daSuDung != xproxyProxy.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (xproxyProxy.isProxyLive && (xproxyProxy.daSuDung > 0 || xproxyProxy.ChangeProxy()))
									{
										text = xproxyProxy.proxy;
										typeProxy = xproxyProxy.typeProxy;
										xproxyProxy.dangSuDung++;
										xproxyProxy.daSuDung++;
										break;
									}
									xproxyProxy.isProxyLive = false;
									bool flag9 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								bool flag10 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									int num3 = 0;
									while (true)
									{
										if (num3 >= 30)
										{
											goto IL_0b36;
										}
										MCommon.Common.DelayTime(1.0);
										text3 = MCommon.Common.CheckProxy(text, typeProxy);
										if (text3 != "")
										{
											goto IL_0b36;
										}
										if (isStop)
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
											goto end_IL_02cc;
										}
										num3++;
										continue;
									IL_0b36:
										if (text3 == "")
										{
											flag10 = false;
										}
										break;
									}
								}
								if (!flag10)
								{
									xproxyProxy.dangSuDung--;
									xproxyProxy.daSuDung--;
									continue;
								}
								goto default;
							}
						case 9:
							text = GetCellAccount(indexRow, "cProxy");
							typeProxy = (text.EndsWith("*1") ? 1 : 0);
							if (text.EndsWith("*0") || text.EndsWith("*1"))
							{
								text = text.Substring(0, text.Length - 2);
							}
							goto default;
						case 10:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy TMProxy..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									tMProxy = null;
									while (!isStop)
									{
										foreach (TMProxy item3 in listTMProxy)
										{
											if (tMProxy == null || item3.daSuDung < tMProxy.daSuDung)
											{
												tMProxy = item3;
											}
										}
										if (tMProxy.daSuDung != tMProxy.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (tMProxy.daSuDung > 0 || tMProxy.ChangeProxy())
									{
										text = tMProxy.proxy;
										if (text == "")
										{
											text = tMProxy.GetProxy();
										}
										tMProxy.dangSuDung++;
										tMProxy.daSuDung++;
										break;
									}
									bool flag7 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								bool flag8 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									text3 = MCommon.Common.CheckProxy(text, 0);
									if (text3 == "")
									{
										flag8 = false;
									}
								}
								if (!flag8)
								{
									tMProxy.dangSuDung--;
									tMProxy.daSuDung--;
									continue;
								}
								goto default;
							}
						case 11:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy Proxyv6..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									proxyWeb = null;
									while (!isStop)
									{
										foreach (ProxyWeb item4 in listProxyWeb)
										{
											if (proxyWeb == null || item4.daSuDung < proxyWeb.daSuDung)
											{
												proxyWeb = item4;
											}
										}
										if (proxyWeb.daSuDung != proxyWeb.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (proxyWeb.daSuDung > 0 || proxyWeb.ChangeProxy())
									{
										text = proxyWeb.proxy;
										typeProxy = proxyWeb.typeProxy;
										proxyWeb.dangSuDung++;
										proxyWeb.daSuDung++;
										break;
									}
									bool flag5 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								bool flag6 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									int num2 = 0;
									while (true)
									{
										if (num2 >= 30)
										{
											goto IL_1499;
										}
										MCommon.Common.DelayTime(1.0);
										text3 = MCommon.Common.CheckProxy(text, typeProxy);
										if (text3 != "")
										{
											goto IL_1499;
										}
										if (isStop)
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
											goto end_IL_02cc;
										}
										num2++;
										continue;
									IL_1499:
										if (text3 == "")
										{
											flag6 = false;
										}
										break;
									}
								}
								if (!flag6)
								{
									proxyWeb.dangSuDung--;
									proxyWeb.daSuDung--;
									continue;
								}
								goto default;
							}
						case 12:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy Proxy ShopLike ..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									shopLike = null;
									while (!isStop)
									{
										foreach (ShopLike item5 in listShopLike)
										{
											if (shopLike == null || item5.daSuDung < shopLike.daSuDung)
											{
												shopLike = item5;
											}
										}
										if (shopLike.daSuDung != shopLike.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (shopLike.daSuDung > 0 || shopLike.ChangeProxy())
									{
										text = shopLike.proxy;
										if (text == "")
										{
											text = shopLike.GetProxy();
										}
										shopLike.dangSuDung++;
										shopLike.daSuDung++;
										break;
									}
									bool flag3 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								bool flag4 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									text3 = MCommon.Common.CheckProxy(text, 0);
									if (text3 == "")
									{
										flag4 = false;
									}
								}
								if (!flag4)
								{
									shopLike.dangSuDung--;
									shopLike.daSuDung--;
									continue;
								}
								goto default;
							}
						default:
							{
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									if (setting_general.GetValueInt("ip_iTypeChangeIp") != 7 && setting_general.GetValueInt("ip_iTypeChangeIp") != 8 && setting_general.GetValueInt("ip_iTypeChangeIp") != 10)
									{
										if (text != "")
										{
											text2 = "(IP: " + text.Split(':')[0] + ") ";
										}
										SetStatusAccount(indexRow, text2 + "Check IP...");
										bool flag11 = false;
										int num4 = 0;
										while (num4 < 30)
										{
											MCommon.Common.DelayTime(1.0);
											text3 = MCommon.Common.CheckProxy(text, typeProxy);
											if (text3 != "")
											{
												flag11 = true;
												break;
											}
											if (!isStop)
											{
												num4++;
												continue;
											}
											goto IL_1b81;
										}
										if (!flag11)
										{
											if (text != "")
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Không thể kết nối proxy!"));
											}
											else
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Không có kết nối Internet!"));
											}
											break;
										}
									}
									text2 = "(IP: " + text3 + ") ";
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								try
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Chờ đến lượt..."));
									lock (lock_checkDelayChrome)
									{
										if (checkDelayChrome > 0)
										{
											int num5 = rd.Next(setting_general.GetValueInt("nudDelayOpenChromeFrom", 1), setting_general.GetValueInt("nudDelayOpenChromeTo", 1) + 1);
											if (num5 > 0)
											{
												int tickCount = Environment.TickCount;
												while ((Environment.TickCount - tickCount) / 1000 - num5 < 0)
												{
													SetStatusAccount(indexRow, text2 + Language.GetValue("Mở tri\u0300nh duyê\u0323t sau") + " {time}s...".Replace("{time}", (num5 - (Environment.TickCount - tickCount) / 1000).ToString()));
													MCommon.Common.DelayTime(0.5);
													if (isStop)
													{
														SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
														goto end_IL_02cc;
													}
												}
											}
										}
										else
										{
											checkDelayChrome++;
										}
									}
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đang mơ\u0309 tri\u0300nh duyê\u0323t..."));
									if (text6 == "")
									{
										text6 = Base.useragentDefault;
									}
									string text7 = "";
									if (profilePath != "" && text5 != "")
									{
										text7 = profilePath + "\\" + text5;
										if (!setting_InteractGeneral.GetValueBool("ckbCreateProfile") && !Directory.Exists(text7))
										{
											text7 = "";
										}
									}
									Point position;
									Point size;
									if (setting_MoTrinhDuyet.GetValueBool("ckbAddChromeIntoForm"))
									{
										position = new Point(-1000, 0);
										size = new Point(setting_MoTrinhDuyet.GetValueInt("nudWidthChrome") + 16, setting_MoTrinhDuyet.GetValueInt("nudHeighChrome"));
									}
									else
									{
										position = MCommon.Common.GetPointFromIndexPosition(indexPos, setting_MoTrinhDuyet.GetValueInt("cbbColumnChrome", 5), setting_MoTrinhDuyet.GetValueInt("cbbRowChrome", 2));
										size = MCommon.Common.GetSizeChrome(setting_MoTrinhDuyet.GetValueInt("cbbColumnChrome", 5), setting_MoTrinhDuyet.GetValueInt("cbbRowChrome", 2));
									}
									chrome = new Chrome
									{
										IndexChrome = indexRow,
										DisableImage = !Convert.ToBoolean((setting_general.GetValue("ckbShowImageInteract") == "") ? "false" : setting_general.GetValue("ckbShowImageInteract")),
										UserAgent = text6,
										ProfilePath = text7,
										Size = size,
										Position = position,
										TimeWaitForSearchingElement = 3,
										TimeWaitForLoadingPage = 120,
										Proxy = text,
										TypeProxy = typeProxy,
										IsUsePortable = setting_general.GetValueBool("ckbUsePortable"),
										PathToPortableZip = setting_general.GetValue("txtPathToPortableZip")
									};
									if (isStop)
									{
										SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
										break;
									}
									if (setting_general.GetValueInt("typeBrowser") != 0)
									{
										chrome.LinkToOtherBrowser = setting_general.GetValue("txtLinkToOtherBrowser");
									}
									int num6 = 0;
									while (true)
									{
										if (!chrome.Open())
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Lỗi mở trình duyệt!"));
											break;
										}
										chrome.ExecuteScript("document.title=\"proxyauth=" + text + "\"");
										if (!setting_general.GetValueBool("ckbKhongCheckIP") && text.Split(':').Length > 1)
										{
											chrome.GotoURL("https://api.myip.com/");
											chrome.DelayTime(1.0);
											string pageSource = chrome.GetPageSource();
											if (!pageSource.Contains("ip"))
											{
												chrome.Close();
												num6++;
												if (num6 < 3)
												{
													continue;
												}
												SetStatusAccount(indexRow, text2 + Language.GetValue("Lỗi kết nối proxy!"));
												break;
											}
										}
										if (!chrome.GetProcess())
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Không check đươ\u0323c chrome!"));
											break;
										}
										if (setting_MoTrinhDuyet.GetValueBool("ckbAddChromeIntoForm"))
										{
											fViewChrome.remote.AddPanelDevice(chrome.IndexChrome, chrome.Size.X, chrome.Size.Y - 10);
											fViewChrome.remote.AddChromeIntoPanel(chrome.process.MainWindowHandle, chrome.IndexChrome, chrome.Size.X + 17, chrome.Size.Y, -10, 0);
										}
										string text8 = "";
										text8 = ((setting_MoTrinhDuyet.GetValueInt("typeBrowserLogin") != 0) ? "https://www.facebook.com/" : "https://m.facebook.com/");
										if (text7.Trim() != "")
										{
											switch (CommonChrome.CheckLiveCookie(chrome, text8))
											{
												case 1:
													flag = true;
													break;
												case -2:
													chrome.Status = StatusChromeAccount.ChromeClosed;
													goto end_IL_1d01;
												case -3:
													chrome.Status = StatusChromeAccount.NoInternet;
													goto end_IL_1d01;
												case 2:
													chrome.Status = StatusChromeAccount.Checkpoint;
													SetInfoAccount(cellAccount, indexRow, Language.GetValue("Checkpoint"));
													goto end_IL_1d01;
											}
										}
										if (!flag)
										{
											int valueInt = setting_MoTrinhDuyet.GetValueInt("typeLogin");
											switch (valueInt)
											{
												case 0:
													SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng nhâ\u0323p bă\u0300ng uid|pass..."));
													break;
												case 1:
													SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng nhâ\u0323p bă\u0300ng email|pass..."));
													break;
												case 2:
													SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng nhâ\u0323p bă\u0300ng cookie..."));
													break;
											}
											string text9 = LoginFacebook(chrome, valueInt, text8, text5, cellAccount2, cellAccount5, cellAccount4, cellAccount6, setting_general.GetValueInt("tocDoGoVanBan"), setting_InteractGeneral.GetValueBool("ckbDontSaveBrowser"));
											switch (text9)
											{
												case "-3":
													chrome.Status = StatusChromeAccount.NoInternet;
													goto end_IL_1d01;
												case "-2":
													chrome.Status = StatusChromeAccount.ChromeClosed;
													goto IL_2dd3;
												case "0":
													SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng nhập thất bại!"));
													goto IL_2dd3;
												case "1":
													flag = true;
													goto IL_2dd3;
												case "2":
													chrome.Status = StatusChromeAccount.Checkpoint;
													SetInfoAccount(cellAccount, indexRow, Language.GetValue("Checkpoint"));
													goto IL_2dd3;
												case "3":
													SetStatusAccount(indexRow, text2 + Language.GetValue("Không có 2fa!"));
													goto IL_2dd3;
												case "4":
													SetStatusAccount(indexRow, text2 + Language.GetValue("Tài khoản không đúng!"));
													goto IL_2dd3;
												case "5":
													SetStatusAccount(indexRow, text2 + Language.GetValue("Mật khẩu không đúng!"));
													SetInfoAccount(cellAccount, indexRow, "Changed pass");
													goto IL_2dd3;
												case "6":
													SetStatusAccount(indexRow, text2 + Language.GetValue("Mã 2fa không đúng!"));
													goto IL_2dd3;
												default:
													{
														SetStatusAccount(indexRow, text2 + text9);
														goto IL_2dd3;
													}
												IL_2dd3:
													if (flag)
													{
														break;
													}
													SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng nhâ\u0323p thâ\u0301t ba\u0323i!"));
													SetRowColor(indexRow, 1);
													ScreenCaptureError(chrome, text5, 1);
													goto end_IL_1d01;
											}
										}
										if (setting_MoTrinhDuyet.GetValueInt("typeBrowserLogin") == 1 && !chrome.GetURL().StartsWith(text8))
										{
											chrome.GotoURL(text8);
										}
										SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng nhâ\u0323p tha\u0300nh công!"));
										SetRowColor(indexRow, 2);
										if (setting_MoTrinhDuyet.GetValueBool("ckbAutoOpenLink"))
										{
											chrome.GotoURL(setting_MoTrinhDuyet.GetValue("txtLink"));
										}
										if (setting_MoTrinhDuyet.GetValueBool("ckbLoginHotmail") && (cellAccount2.Contains("hotmail") || cellAccount2.Contains("outlook")))
										{
											chrome.OpenNewTab("https://login.live.com/login.srf");
											chrome.DelayTime(1.0);
											if (chrome.CheckExistElement("[name=\"loginfmt\"]", 10.0) == 1)
											{
												chrome.SendKeys(2, "loginfmt", cellAccount2);
												chrome.DelayTime(0.1);
												chrome.Click(1, "idSIButton9");
												if (chrome.CheckExistElement("[name=\"passwd\"]", 10.0) == 1)
												{
													chrome.DelayTime(2.0);
													chrome.SendKeys(2, "passwd", cellAccount3);
													chrome.DelayTime(2.0);
													chrome.Click(1, "idSIButton9", 0, 0, "", 0, 10);
													int num7 = 0;
													while (true)
													{
														if (num7 < 10)
														{
															switch (chrome.CheckExistElements(0.0, "[name=\"DontShowAgain\"]", "#O365_MainLink_NavMenu", "#reload-button"))
															{
																case 1:
																	chrome.Click(2, "DontShowAgain");
																	chrome.DelayTime(0.1);
																	chrome.Click(1, "idSIButton9");
																	break;
																case 3:
																	chrome.Click(4, "#reload-button");
																	goto IL_3490;
																default:
																	switch (chrome.CheckExistElements(0.0, "#idA_IL_ForgotPassword0", "[name=\"passwd\"]"))
																	{
																		case 1:
																			SetStatusAccount(indexRow, Language.GetValue("Mail sai pass!"));
																			goto end_IL_1d01;
																		case 2:
																			SetStatusAccount(indexRow, Language.GetValue("Không có pass mail!"));
																			goto end_IL_1d01;
																		default:
																			if (chrome.GetURL().Contains("https://account.live.com/Abuse"))
																			{
																				SetStatusAccount(indexRow, Language.GetValue("Mail đã bị khóa!"));
																				goto end_IL_02cc;
																			}
																			break;
																	}
																	goto IL_3490;
																case 2:
																	break;
															}
														}
														if (!chrome.GetURL().StartsWith("https://outlook.live.com"))
														{
															chrome.GotoURL("https://outlook.live.com/mail/0/");
														}
														if (chrome.CheckExistElement("#iShowSkip") == 1)
														{
															chrome.Click(4, "#iShowSkip");
														}
														break;
													IL_3490:
														chrome.DelayTime(1.0);
														num7++;
													}
												}
											}
										}
										flag2 = !CheckIsUidFacebook(text5);
										if (flag2)
										{
											text4 = text5;
											text5 = Regex.Match(chrome.GetCookieFromChrome() + ";", "c_user=(.*?);").Groups[1].Value;
											CommonSQL.UpdateFieldToAccount(cellAccount, "uid", text5);
											SetCellAccount(indexRow, "cUid", text5);
										}
										if (setting_MoTrinhDuyet.GetValueBool("isGetCookie"))
										{
											cellAccount6 = chrome.GetCookieFromChrome();
											CommonSQL.UpdateFieldToAccount(cellAccount, "uid", text5);
											CommonSQL.UpdateFieldToAccount(cellAccount, "cookie1", cellAccount6);
											SetCellAccount(indexRow, "cCookies", cellAccount6);
										}
										break;
									}
								end_IL_1d01:;
								}
								catch (Exception ex)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Lô\u0303i không xa\u0301c đi\u0323nh!"));
									MCommon.Common.ExportError(chrome, ex);
								}
								break;
							}
						IL_1b81:
							SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
							break;
						end_IL_02cc:
							break;
					}
					break;
				}
			}
			if (chrome != null)
			{
				StatusChromeAccount status = chrome.Status;
				StatusChromeAccount statusChromeAccount = status;
				if (statusChromeAccount == StatusChromeAccount.ChromeClosed || statusChromeAccount == StatusChromeAccount.Checkpoint || statusChromeAccount == StatusChromeAccount.NoInternet)
				{
					SetRowColor(indexRow, 1);
					SetStatusAccount(indexRow, text2 + GetContentStatusChrome.GetContent(chrome.Status));
				}
			}
			if (!flag && setting_MoTrinhDuyet.GetValueBool("isAutoCloseChromeLoginFail"))
			{
				try
				{
					chrome.Close();
				}
				catch
				{
				}
			}
			if (flag2 && Directory.Exists(setting_general.GetValue("txbPathProfile") + "\\" + text4))
			{
				string text10 = setting_general.GetValue("txbPathProfile") + "\\" + text4;
				string pathTo = setting_general.GetValue("txbPathProfile") + "\\" + text5;
				if (!MCommon.Common.MoveFolder(text10, pathTo) && MCommon.Common.CopyFolder(text10, pathTo))
				{
					MCommon.Common.DeleteFolder(text10);
				}
			}
		}

		private void mởLuônToolStripMenuItem_Click(object sender, EventArgs e)
		{
			if (CountChooseRowInDatagridview() == 0)
			{
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng chọn tài khoản cần mở trình duyệt!"), 3);
			}
			else
			{
				MoTrinhDuyet();
			}
		}

		private void backupToolStripMenuItem1_Click(object sender, EventArgs e)
		{
		}

		private void dọnDẹpBackupToolStripMenuItem_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_0013, IL_0031
			try
			{
				MCommon.Common.ShowForm(new fClearBackup());
			}
			catch (Exception ex)
			{
				MessageBoxHelper.ShowMessageBox(ex.ToString(), 3);
			}
		}

		private void liênHệToolStripMenuItem_Click(object sender, EventArgs e)
		{
			MCommon.Common.ShowForm(new fContact());
		}

		private void metroButton2_Click_2(object sender, EventArgs e)
		{
			List<string> list = new List<string> { "Đã tương tác xong! - Block da", "Đã tương tác xong!" };
			Random random = new Random();
			for (int i = 0; i < 100; i++)
			{
				SetStatusAccount(i, "[" + random.Next(10000, 99999) + "] " + list[random.Next(2)]);
			}
		}

		private void fileTxtToolStripMenuItem_Click(object sender, EventArgs e)
		{
			//Discarded unreachable code: IL_0223, IL_0230, IL_023c, IL_0249
			MCommon.Common.ShowForm(new fSelectFolder());
			string pathFolder = fSelectFolder.pathFolder;
			if (pathFolder == "")
			{
				return;
			}
			int num = 0;
			for (int i = 0; i < dtgvAcc.Rows.Count; i++)
			{
				try
				{
					if (!Convert.ToBoolean(dtgvAcc.Rows[i].Cells["cChose"].Value))
					{
						continue;
					}
					string text = dtgvAcc.Rows[i].Cells["cUid"].Value.ToString();
					try
					{
						if (File.Exists(FileHelper.GetPathToCurrentFolder() + "\\backup\\" + text + "\\" + text + ".txt"))
						{
							File.Copy("backup\\" + text + "\\" + text + ".txt", pathFolder + "\\" + text + ".txt");
							num++;
						}
					}
					catch
					{
					}
				}
				catch
				{
				}
			}
			MessageBoxHelper.ShowMessageBox(string.Format(Language.GetValue("Copy thành công {0} tệp backup txt!"), num));
		}

		private void linkLabel1_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
		{
			Process.Start("http://app.minsoftware.vn/");
		}

		private void lblStatusUpdate_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
		{
			if (MessageBoxHelper.ShowMessageBoxWithQuestion(Language.GetValue("Đa\u0303 co\u0301 ba\u0309n câ\u0323p nhâ\u0323t mơ\u0301i!") + "\r\n" + contentUpdate) == DialogResult.Yes)
			{
				Process.Start("AutoUpdate.exe");
				MCommon.Common.KillProcess("maxcare");
			}
		}

		private void loginGmailToolStripMenuItem_Click(object sender, EventArgs e)
		{
			LoginMail(1, isUseProfile: true);
		}

		private void timer1_Tick(object sender, EventArgs e)
		{

		}

		private void toolStripMenuItem1_Click(object sender, EventArgs e)
		{
			LoginMail(1);
		}

		private void passMailToolStripMenuItem_Click(object sender, EventArgs e)
		{
			OpenFormUpdate("PassMail");
		}

		private void menuStrip1_ItemClicked(object sender, ToolStripItemClickedEventArgs e)
		{
		}

		private void mởFormQuảnLýTinNhắnToolStripMenuItem_Click(object sender, EventArgs e)
		{
			List<string> list = new List<string>();
			for (int i = 0; i < dtgvAcc.Rows.Count; i++)
			{
				if (Convert.ToBoolean(GetCellAccount(i, "cChose")))
				{
					list.Add(GetCellAccount(i, "cUid") + "|" + GetCellAccount(i, "cPassword") + "|" + GetCellAccount(i, "cFa2") + "|" + GetCellAccount(i, "cCookies") + "|" + GetCellAccount(i, "cProxy") + "|" + GetCellAccount(i, "cName") + "|" + GetCellAccount(i, "cGhiChu") + "|" + GetCellAccount(i, "cId"));
				}
			}
			new fquanLyTinNhan(list).ShowDialog();
			BtnLoadAcc_Click(null, null);
		}

		private void panel1_Paint(object sender, PaintEventArgs e)
		{
		}

		private void khôiPhụcMậtKhẩuToolStripMenuItem_Click(object sender, EventArgs e)
		{
			if (CountChooseRowInDatagridview() == 0)
			{
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng chọn tài khoản cần khôi phục mật khẩu!"), 3);
				return;
			}
			MCommon.Common.ShowForm(new fNhapPassKhoiPhuc());
			if (fNhapPassKhoiPhuc.isOK)
			{
				KhoiPhucMatKhau();
			}
		}

		private void KhoiPhucMatKhau()
		{
			//Discarded unreachable code: IL_0aaa, IL_0ae6
			isCountCheckAccountWhenChayTuongTac = true;
			try
			{
				LoadSetting();
				string profilePath = ConfigHelper.GetPathProfile();
				int maxThread = setting_general.GetValueInt("nudInteractThread", 3);
				List<int> lstPossition = new List<int>();
				for (int i = 0; i < maxThread; i++)
				{
					lstPossition.Add(0);
				}
				switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
				{
					case 7:
						{
							listApiTinsoft = GetListKeyTinsoft();
							if (listApiTinsoft.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy Tinsoft không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listTinsoft = new List<TinsoftProxy>();
							for (int m = 0; m < listApiTinsoft.Count; m++)
							{
								TinsoftProxy item4 = new TinsoftProxy(listApiTinsoft[m], setting_general.GetValueInt("nudLuongPerIPTinsoft"), setting_general.GetValueInt("cbbLocationTinsoft"));
								listTinsoft.Add(item4);
							}
							if (listApiTinsoft.Count * setting_general.GetValueInt("nudLuongPerIPTinsoft") < maxThread)
							{
								maxThread = listApiTinsoft.Count * setting_general.GetValueInt("nudLuongPerIPTinsoft");
							}
							break;
						}
					case 8:
						{
							listProxyXproxy = setting_general.GetValueList("txtListProxy");
							if (listProxyXproxy.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("XProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listxProxy = new List<XproxyProxy>();
							for (int n = 0; n < listProxyXproxy.Count; n++)
							{
								XproxyProxy item5 = new XproxyProxy(setting_general.GetValue("txtServiceURLXProxy"), listProxyXproxy[n], setting_general.GetValueInt("typeProxy"), setting_general.GetValueInt("nudLuongPerIPXProxy"));
								listxProxy.Add(item5);
							}
							if (listProxyXproxy.Count * setting_general.GetValueInt("nudLuongPerIPXProxy") < maxThread)
							{
								maxThread = listProxyXproxy.Count * setting_general.GetValueInt("nudLuongPerIPXProxy");
							}
							break;
						}
					case 10:
						{
							listProxyTMProxy = setting_general.GetValueList("txtApiKeyTMProxy");
							if (listProxyTMProxy.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("TMProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listTMProxy = new List<TMProxy>();
							for (int k = 0; k < listProxyTMProxy.Count; k++)
							{
								TMProxy item2 = new TMProxy(listProxyTMProxy[k], 0, setting_general.GetValueInt("nudLuongPerIPTMProxy"));
								listTMProxy.Add(item2);
							}
							if (listProxyTMProxy.Count * setting_general.GetValueInt("nudLuongPerIPTMProxy") < maxThread)
							{
								maxThread = listProxyTMProxy.Count * setting_general.GetValueInt("nudLuongPerIPTMProxy");
							}
							break;
						}
					case 11:
						{
							listProxyProxyv6 = setting_general.GetValueList("txtListProxyv6");
							if (listProxyProxyv6.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy không đủ, vui lòng cấu hình lại!"), 2);
								return;
							}
							listProxyWeb = new List<ProxyWeb>();
							for (int l = 0; l < listProxyProxyv6.Count; l++)
							{
								if (0 == 0)
								{
									ProxyWeb item3 = new ProxyWeb(setting_general.GetValue("txtApiProxyv6"), listProxyProxyv6[l], 0, setting_general.GetValueInt("nudLuongPerIPProxyv6"));
									listProxyWeb.Add(item3);
								}
							}
							if (listProxyProxyv6.Count * setting_general.GetValueInt("nudLuongPerIPProxyv6") < maxThread)
							{
								maxThread = listProxyProxyv6.Count * setting_general.GetValueInt("nudLuongPerIPProxyv6");
							}
							break;
						}
					case 12:
						{
							listProxyShopLike = setting_general.GetValueList("txtApiShopLike");
							if (listProxyShopLike.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("TMProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listShopLike = new List<ShopLike>();
							for (int j = 0; j < listProxyShopLike.Count; j++)
							{
								ShopLike item = new ShopLike(listProxyShopLike[j], 0, setting_general.GetValueInt("nudLuongPerIPShopLike"));
								listShopLike.Add(item);
							}
							if (listProxyShopLike.Count * setting_general.GetValueInt("nudLuongPerIPShopLike") < maxThread)
							{
								maxThread = listProxyShopLike.Count * setting_general.GetValueInt("nudLuongPerIPShopLike");
							}
							break;
						}
				}
				cControl("start");
				isStop = false;
				int curChangeIp = 0;
				bool isChangeIPSuccess = false;
				lstThread = new List<Thread>();
				new Thread((ThreadStart)delegate
				{
					try
					{
						if (isStop)
						{
							cControl("stop");
							return;
						}
						int num = 0;
						while (true)
						{
							if (num < dtgvAcc.Rows.Count && !isStop)
							{
								if (!Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
								{
									num++;
									goto IL_042a;
								}
								if (lstThread.Count < maxThread)
								{
									if (!isStop)
									{
										int row = num++;
										if (row != 0)
										{
											MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayOpenChrome", 1));
										}
										Thread thread = new Thread((ThreadStart)delegate
										{
											try
											{
												int indexOfPossitionApp = MCommon.Common.GetIndexOfPossitionApp(ref lstPossition);
												KhoiPhucMatKhauOneThread(row, indexOfPossitionApp, profilePath);
												MCommon.Common.FillIndexPossition(ref lstPossition, indexOfPossitionApp);
												SetCellAccount(row, "cChose", false);
											}
											catch (Exception ex3)
											{
												MCommon.Common.ExportError(null, ex3);
											}
										});
										lstThread.Add(thread);
										thread.Name = row.ToString();
										thread.Start();
										goto IL_042a;
									}
								}
								else if (!isStop)
								{
									if (setting_general.GetValueInt("ip_iTypeChangeIp") != 0 && setting_general.GetValueInt("ip_iTypeChangeIp") != 7 && setting_general.GetValueInt("ip_iTypeChangeIp") != 8 && setting_general.GetValueInt("ip_iTypeChangeIp") != 9 && setting_general.GetValueInt("ip_iTypeChangeIp") != 10 && setting_general.GetValueInt("ip_iTypeChangeIp") != 11 && setting_general.GetValueInt("ip_iTypeChangeIp") != 12)
									{
										for (int num2 = 0; num2 < lstThread.Count; num2++)
										{
											lstThread[num2].Join();
											lstThread.RemoveAt(num2--);
										}
										if (isStop)
										{
											goto IL_045f;
										}
										Interlocked.Increment(ref curChangeIp);
										if (curChangeIp >= setting_general.GetValueInt("ip_nudChangeIpCount", 1))
										{
											for (int num3 = 0; num3 < 3; num3++)
											{
												isChangeIPSuccess = MCommon.Common.ChangeIP(setting_general.GetValueInt("ip_iTypeChangeIp"), setting_general.GetValueInt("typeDcom"), setting_general.GetValue("ip_txtProfileNameDcom"), setting_general.GetValue("txtUrlHilink"), setting_general.GetValueInt("ip_cbbHostpot"), setting_general.GetValue("ip_txtNordVPN"));
												if (isChangeIPSuccess)
												{
													break;
												}
											}
											if (!isChangeIPSuccess)
											{
												MessageBoxHelper.ShowMessageBox(Language.GetValue("Không thê\u0309 đô\u0309i ip!"), 2);
												break;
											}
											curChangeIp = 0;
										}
									}
									else
									{
										for (int num4 = 0; num4 < lstThread.Count; num4++)
										{
											if (!lstThread[num4].IsAlive)
											{
												lstThread.RemoveAt(num4--);
											}
										}
									}
									goto IL_042a;
								}
							}
							goto IL_045f;
						IL_042a:
							if (!isStop)
							{
								continue;
							}
							goto IL_045f;
						IL_045f:
							for (int num5 = 0; num5 < lstThread.Count; num5++)
							{
								lstThread[num5].Join();
							}
							break;
						}
					}
					catch (Exception ex2)
					{
						MCommon.Common.ExportError(null, ex2);
					}
					cControl("stop");
					isCountCheckAccountWhenChayTuongTac = false;
				}).Start();
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(null, ex);
				isCountCheckAccountWhenChayTuongTac = false;
			}
		}

		private void KhoiPhucMatKhauOneThread(object data, int indexPos, string profilePath)
		{
			//Discarded unreachable code: IL_0384, IL_0398, IL_0684, IL_0699, IL_0794, IL_07a8, IL_0b43, IL_0b58, IL_0cfc, IL_0d10, IL_0ffc, IL_1011, IL_10f6, IL_110a, IL_1481, IL_1496, IL_157b, IL_158f, IL_187b, IL_1890, IL_2924, IL_2977, IL_313b, IL_318e, IL_3838, IL_38b3, IL_38be, IL_391e, IL_3a7c, IL_3a89, IL_3b94, IL_3ba9
			int num = (int)data;
			Chrome chrome = null;
			string text = "";
			int num2 = 0;
			string text2 = GetCellAccount(num, "cUid");
			string cellAccount = GetCellAccount(num, "cId");
			string cellAccount2 = GetCellAccount(num, "cFa2");
			string cellAccount3 = GetCellAccount(num, "cPassword");
			string cellAccount4 = GetCellAccount(num, "cCookies");
			string cellAccount5 = GetCellAccount(num, "cToken");
			string text3 = GetCellAccount(num, "cUseragent");
			string cellAccount6 = GetCellAccount(num, "cEmail");
			string cellAccount7 = GetCellAccount(num, "cPassMail");
			if (text2 == "")
			{
				text2 = Regex.Match(cellAccount4, "c_user=(.*?);").Groups[1].Value;
			}
			string text4 = "";
			TinsoftProxy tinsoftProxy = null;
			XproxyProxy xproxyProxy = null;
			TMProxy tMProxy = null;
			ProxyWeb proxyWeb = null;
			ShopLike shopLike = null;
			int typeProxy = 0;
			string text5 = "";
			while (true)
			{
				if (isStop)
				{
					SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
					num2 = 1;
					break;
				}
				switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
				{
					case 7:
						SetStatusAccount(num, "Đang lấy proxy Tinsoft...");
						lock (lock_StartProxy)
						{
							while (!isStop)
							{
								tinsoftProxy = null;
								while (!isStop)
								{
									foreach (TinsoftProxy item in listTinsoft)
									{
										if (tinsoftProxy == null || item.daSuDung < tinsoftProxy.daSuDung)
										{
											tinsoftProxy = item;
										}
									}
									if (tinsoftProxy.daSuDung != tinsoftProxy.limit_theads_use)
									{
										break;
									}
								}
								if (isStop)
								{
									break;
								}
								if (tinsoftProxy.daSuDung > 0 || tinsoftProxy.ChangeProxy())
								{
									text = tinsoftProxy.proxy;
									if (text == "")
									{
										text = tinsoftProxy.GetProxy();
									}
									tinsoftProxy.dangSuDung++;
									tinsoftProxy.daSuDung++;
									break;
								}
								bool flag11 = true;
							}
							if (isStop)
							{
								SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
								num2 = 1;
								break;
							}
							bool flag12 = true;
							if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
							{
								SetStatusAccount(num, text4 + "Delay check IP...");
								MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
							}
							if (!setting_general.GetValueBool("ckbKhongCheckIP"))
							{
								text4 = "(IP: " + text.Split(':')[0] + ") ";
								SetStatusAccount(num, text4 + "Check IP...");
								text5 = MCommon.Common.CheckProxy(text, 0);
								if (text5 == "")
								{
									flag12 = false;
								}
							}
							if (!flag12)
							{
								tinsoftProxy.dangSuDung--;
								tinsoftProxy.daSuDung--;
								continue;
							}
							goto default;
						}
					case 8:
						SetStatusAccount(num, Language.GetValue("Đang lấy Proxy..."));
						lock (lock_StartProxy)
						{
							while (!isStop)
							{
								xproxyProxy = null;
								while (!isStop)
								{
									foreach (XproxyProxy item2 in listxProxy)
									{
										if (xproxyProxy == null || (item2.isProxyLive && item2.daSuDung < xproxyProxy.daSuDung))
										{
											xproxyProxy = item2;
										}
									}
									if (xproxyProxy.daSuDung != xproxyProxy.limit_theads_use)
									{
										break;
									}
								}
								if (isStop)
								{
									break;
								}
								if (xproxyProxy.isProxyLive && (xproxyProxy.daSuDung > 0 || xproxyProxy.ChangeProxy()))
								{
									text = xproxyProxy.proxy;
									typeProxy = xproxyProxy.typeProxy;
									xproxyProxy.dangSuDung++;
									xproxyProxy.daSuDung++;
									break;
								}
								xproxyProxy.isProxyLive = false;
								bool flag7 = true;
							}
							if (isStop)
							{
								SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
								num2 = 1;
								break;
							}
							bool flag8 = true;
							if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
							{
								SetStatusAccount(num, text4 + "Delay check IP...");
								MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
							}
							if (!setting_general.GetValueBool("ckbKhongCheckIP"))
							{
								text4 = "(IP: " + text.Split(':')[0] + ") ";
								SetStatusAccount(num, text4 + "Check IP...");
								int num4 = 0;
								while (true)
								{
									if (num4 >= 30)
									{
										goto IL_0ad2;
									}
									MCommon.Common.DelayTime(1.0);
									text5 = MCommon.Common.CheckProxy(text, typeProxy);
									if (text5 != "")
									{
										goto IL_0ad2;
									}
									if (isStop)
									{
										SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
										num2 = 1;
										goto end_IL_0288;
									}
									num4++;
									continue;
								IL_0ad2:
									if (text5 == "")
									{
										flag8 = false;
									}
									break;
								}
							}
							if (!flag8)
							{
								xproxyProxy.dangSuDung--;
								xproxyProxy.daSuDung--;
								continue;
							}
							goto default;
						}
					case 9:
						text = GetCellAccount(num, "cProxy");
						typeProxy = (text.EndsWith("*1") ? 1 : 0);
						if (text.EndsWith("*0") || text.EndsWith("*1"))
						{
							text = text.Substring(0, text.Length - 2);
						}
						goto default;
					case 10:
						SetStatusAccount(num, "Đang lấy TMProxy...");
						lock (lock_StartProxy)
						{
							while (!isStop)
							{
								tMProxy = null;
								while (!isStop)
								{
									foreach (TMProxy item3 in listTMProxy)
									{
										if (tMProxy == null || item3.daSuDung < tMProxy.daSuDung)
										{
											tMProxy = item3;
										}
									}
									if (tMProxy.daSuDung != tMProxy.limit_theads_use)
									{
										break;
									}
								}
								if (isStop)
								{
									break;
								}
								if (tMProxy.daSuDung > 0 || tMProxy.ChangeProxy())
								{
									text = tMProxy.proxy;
									if (text == "")
									{
										text = tMProxy.GetProxy();
									}
									tMProxy.dangSuDung++;
									tMProxy.daSuDung++;
									break;
								}
								bool flag5 = true;
							}
							if (isStop)
							{
								SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
								num2 = 1;
								break;
							}
							bool flag6 = true;
							if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
							{
								SetStatusAccount(num, text4 + "Delay check IP...");
								MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
							}
							if (!setting_general.GetValueBool("ckbKhongCheckIP"))
							{
								text4 = "(IP: " + text.Split(':')[0] + ") ";
								SetStatusAccount(num, text4 + "Check IP...");
								text5 = MCommon.Common.CheckProxy(text, 0);
								if (text5 == "")
								{
									flag6 = false;
								}
							}
							if (!flag6)
							{
								tMProxy.dangSuDung--;
								tMProxy.daSuDung--;
								continue;
							}
							goto default;
						}
					case 11:
						SetStatusAccount(num, Language.GetValue("Đang lấy Proxyv6..."));
						lock (lock_StartProxy)
						{
							while (!isStop)
							{
								proxyWeb = null;
								while (!isStop)
								{
									foreach (ProxyWeb item4 in listProxyWeb)
									{
										if (proxyWeb == null || item4.daSuDung < proxyWeb.daSuDung)
										{
											proxyWeb = item4;
										}
									}
									if (proxyWeb.daSuDung != proxyWeb.limit_theads_use)
									{
										break;
									}
								}
								if (isStop)
								{
									break;
								}
								if (proxyWeb.daSuDung > 0 || proxyWeb.ChangeProxy())
								{
									text = proxyWeb.proxy;
									typeProxy = proxyWeb.typeProxy;
									proxyWeb.dangSuDung++;
									proxyWeb.daSuDung++;
									break;
								}
								bool flag3 = true;
							}
							if (isStop)
							{
								SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
								num2 = 1;
								break;
							}
							bool flag4 = true;
							if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
							{
								SetStatusAccount(num, text4 + "Delay check IP...");
								MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
							}
							if (!setting_general.GetValueBool("ckbKhongCheckIP"))
							{
								text4 = "(IP: " + text.Split(':')[0] + ") ";
								SetStatusAccount(num, text4 + "Check IP...");
								int num3 = 0;
								while (true)
								{
									if (num3 >= 30)
									{
										goto IL_1410;
									}
									MCommon.Common.DelayTime(1.0);
									text5 = MCommon.Common.CheckProxy(text, typeProxy);
									if (text5 != "")
									{
										goto IL_1410;
									}
									if (isStop)
									{
										SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
										num2 = 1;
										goto end_IL_0288;
									}
									num3++;
									continue;
								IL_1410:
									if (text5 == "")
									{
										flag4 = false;
									}
									break;
								}
							}
							if (!flag4)
							{
								proxyWeb.dangSuDung--;
								proxyWeb.daSuDung--;
								continue;
							}
							goto default;
						}
					case 12:
						SetStatusAccount(num, Language.GetValue("Đang lấy Proxy ShopLike ..."));
						lock (lock_StartProxy)
						{
							while (!isStop)
							{
								shopLike = null;
								while (!isStop)
								{
									foreach (ShopLike item5 in listShopLike)
									{
										if (shopLike == null || item5.daSuDung < shopLike.daSuDung)
										{
											shopLike = item5;
										}
									}
									if (shopLike.daSuDung != shopLike.limit_theads_use)
									{
										break;
									}
								}
								if (isStop)
								{
									break;
								}
								if (shopLike.daSuDung > 0 || shopLike.ChangeProxy())
								{
									text = shopLike.proxy;
									if (text == "")
									{
										text = shopLike.GetProxy();
									}
									shopLike.dangSuDung++;
									shopLike.daSuDung++;
									break;
								}
								bool flag = true;
							}
							if (isStop)
							{
								SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
								num2 = 1;
								break;
							}
							bool flag2 = true;
							if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
							{
								SetStatusAccount(num, text4 + "Delay check IP...");
								MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
							}
							if (!setting_general.GetValueBool("ckbKhongCheckIP"))
							{
								text4 = "(IP: " + text.Split(':')[0] + ") ";
								SetStatusAccount(num, text4 + "Check IP...");
								text5 = MCommon.Common.CheckProxy(text, 0);
								if (text5 == "")
								{
									flag2 = false;
								}
							}
							if (!flag2)
							{
								shopLike.dangSuDung--;
								shopLike.daSuDung--;
								continue;
							}
							goto default;
						}
					default:
						{
							if (!setting_general.GetValueBool("ckbKhongCheckIP"))
							{
								if (setting_general.GetValueInt("ip_iTypeChangeIp") == 7 || setting_general.GetValueInt("ip_iTypeChangeIp") == 8 || setting_general.GetValueInt("ip_iTypeChangeIp") == 10)
								{
									text4 = "(IP: " + text.Split(':')[0] + ") ";
								}
								else
								{
									if (text != "")
									{
										text4 = "(IP: " + text.Split(':')[0] + ") ";
									}
									SetStatusAccount(num, text4 + "Check IP...");
									bool flag9 = false;
									int num5 = 0;
									while (num5 < 30)
									{
										MCommon.Common.DelayTime(1.0);
										text5 = MCommon.Common.CheckProxy(text, typeProxy);
										if (text5 != "")
										{
											flag9 = true;
											break;
										}
										if (!isStop)
										{
											num5++;
											continue;
										}
										goto IL_1aeb;
									}
									if (!flag9)
									{
										if (text != "")
										{
											SetStatusAccount(num, text4 + "Không thể kết nối proxy!");
										}
										else
										{
											SetStatusAccount(num, text4 + "Không có kết nối Internet!");
										}
										num2 = 1;
										break;
									}
									text4 = "(IP: " + text5 + ") ";
								}
							}
							try
							{
								SetStatusAccount(num, text4 + Language.GetValue("Đang mơ\u0309 tri\u0300nh duyê\u0323t..."));
								Point pointFromIndexPosition = MCommon.Common.GetPointFromIndexPosition(indexPos, Convert.ToInt32((setting_general.GetValue("cbbColumnChrome") == "") ? "3" : setting_general.GetValue("cbbColumnChrome")), Convert.ToInt32((setting_general.GetValue("cbbRowChrome") == "") ? "2" : setting_general.GetValue("cbbRowChrome")));
								Point sizeChrome = MCommon.Common.GetSizeChrome(Convert.ToInt32((setting_general.GetValue("cbbColumnChrome") == "") ? "3" : setting_general.GetValue("cbbColumnChrome")), Convert.ToInt32((setting_general.GetValue("cbbRowChrome") == "") ? "2" : setting_general.GetValue("cbbRowChrome")));
								bool flag10 = false;
								try
								{
									string app = "data:,";
									if (text3 == "" || text.Split(':').Length == 4)
									{
										text3 = Base.useragentDefault;
									}
									string text6 = "";
									if (profilePath != "" && text2 != "")
									{
										text6 = profilePath + "\\" + text2;
										if (!setting_InteractGeneral.GetValueBool("ckbCreateProfile") && !Directory.Exists(text6))
										{
											text6 = "";
										}
									}
									chrome = new Chrome
									{
										DisableImage = false,
										UserAgent = text3,
										ProfilePath = text6,
										Size = sizeChrome,
										Position = pointFromIndexPosition,
										TimeWaitForSearchingElement = 3,
										TimeWaitForLoadingPage = 60,
										Proxy = text,
										TypeProxy = typeProxy,
										App = app,
										IsUsePortable = setting_general.GetValueBool("ckbUsePortable"),
										PathToPortableZip = setting_general.GetValue("txtPathToPortableZip")
									};
									if (isStop)
									{
										SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
										num2 = 1;
										break;
									}
									if (setting_general.GetValueInt("typeBrowser") != 0)
									{
										chrome.LinkToOtherBrowser = setting_general.GetValue("txtLinkToOtherBrowser");
									}
									int num6 = 0;
									while (true)
									{
										if (!chrome.Open())
										{
											SetStatusAccount(num, text4 + Language.GetValue("Lỗi mở trình duyệt!"));
											num2 = 1;
											break;
										}
										chrome.ExecuteScript("document.title=\"proxyauth=" + text + "\"");
										if (!setting_general.GetValueBool("ckbKhongCheckIP") && text.Split(':').Length > 1)
										{
											chrome.GotoURL("https://api.myip.com/");
											chrome.DelayTime(1.0);
											string pageSource = chrome.GetPageSource();
											if (!pageSource.Contains("ip"))
											{
												chrome.Close();
												num6++;
												if (num6 < 3)
												{
													continue;
												}
												break;
											}
										}
										if (!chrome.GetURL().Contains("facebook"))
										{
										}
										chrome.GetProcess();
										SetStatusAccount(num, text4 + Language.GetValue("Đang đăng nhâ\u0323p..."));
										int num7 = 0;
										if (text6.Trim() != "")
										{
											num7 = CommonChrome.CheckLiveCookie(chrome, "https://m.facebook.com/");
										}
										if (num7 == 2)
										{
											break;
										}
										flag10 = num7 == 1;
										if (!flag10)
										{
											SetStatusAccount(num, text4 + Language.GetValue("Đăng nhâ\u0323p bă\u0300ng cookie..."));
											switch (Convert.ToInt32(CommonChrome.LoginFacebookUsingCookie(chrome, cellAccount4, "https://m.facebook.com/")))
											{
												case 1:
													flag10 = true;
													break;
												case -2:
													num2 = 2;
													goto end_IL_1f23;
											}
										}
										if (flag10)
										{
											SetStatusAccount(num, "Đang khôi phục mật khẩu...");
											string cellAccount8 = GetCellAccount(num, "cEmail");
											string cellAccount9 = GetCellAccount(num, "cPassMail");
											string text7 = "";
											chrome.GotoURL("https://m.facebook.com/recover/initiate/");
											chrome.DelayTime(1.0);
											if (chrome.CheckExistElement("[value=\"send_email\"]", 30.0) != 1)
											{
												break;
											}
											string[] array = cellAccount8.Split('@');
											string text8 = "";
											for (int i = 0; i < array[0].Length - 2; i++)
											{
												text8 += "*";
											}
											array[0] = array[0].Replace(array[0].Substring(1, array[0].Length - 2), text8);
											if (chrome.ExecuteScript("var check=0;for(var i=0;i<document.querySelectorAll('[method=\"post\"] label>div').length;i++){if(document.querySelectorAll('[method=\"post\"] label>div')[i].innerText.includes('" + array[0] + "')) check = 1} return check").ToString() == "1")
											{
												if (chrome.ExecuteScript("return document.querySelector('[value=\"send_email\"]').getAttribute('checked')").ToString() != "1")
												{
													chrome.Click(4, "[value=\"send_email\"]");
													chrome.DelayTime(1.0);
												}
												EmailHelper.DeleteMail(cellAccount6, cellAccount7);
												chrome.Click(2, "reset_action");
												chrome.DelayTime(1.0);
												if (chrome.CheckExistElement("[data-sigil=\"code-input\"]", 30.0) != 1)
												{
													break;
												}
												SetStatusAccount(num, "Đang lấy mã otp...");
												int num8 = 0;
												try
												{
													num8 = Convert.ToInt32(Regex.Match(chrome.ExecuteScript("return document.querySelector('[method=\"post\"] section>section:nth-child(2)>div').innerText").ToString(), "\\d{1}").Value);
												}
												catch
												{
													num8 = Convert.ToInt32(Regex.Match(chrome.ExecuteScript("return document.querySelector('[method=\"post\"] section:nth-child(9)').innerText").ToString(), "\\d{1}").Value);
												}
												while (true)
												{
													text7 = GetOtpHotMail6So(cellAccount8, cellAccount9, num8);
													if (text7 != "")
													{
														chrome.SendKeys(4, "[data-sigil=\"code-input\"]", text7);
														chrome.DelayTime(1.0);
														chrome.Click(2, "reset_action");
														chrome.DelayTime(1.0);
														num7 = chrome.CheckExistElements(15.0, "[data-sigil=\"error_message\"]", "[name=\"password_new\"]");
														if (num7 == 1)
														{
															continue;
														}
														SetStatusAccount(num, "Đang đổi mật khẩu...");
														string text9 = "";
														text9 = ((setting_general.GetValueInt("typePass") != 0) ? (MCommon.Common.CreateRandomString(6, rd) + MCommon.Common.CreateRandomNumber(4, rd) + MCommon.Common.CreateRandomString(5, rd)) : setting_general.GetValue("txtPass"));
														chrome.SendKeys(2, "password_new", text9);
														chrome.DelayTime(1.0);
														chrome.Click(4, "[data-sigil=\"touchable\"]");
														chrome.DelayTime(1.0);
														MCommon.Common.SetStatusDataGridView(dtgvAcc, num, "cPassword", text9);
														CommonSQL.UpdateFieldToAccount(cellAccount, "pass", text9);
														if (chrome.CheckExistElement("[method=\"post\"]", 30.0) == 1)
														{
															chrome.Click(2, "submit_action");
															chrome.DelayTime(1.0);
															if (CommonChrome.CheckLiveCookie(chrome) == 1)
															{
																MCommon.Common.SetStatusDataGridView(dtgvAcc, num, "cStatus", "Đổi pass xong!");
																num2 = 4;
															}
														}
														break;
													}
													MCommon.Common.SetStatusDataGridView(dtgvAcc, num, "cStatus", "Khôi phục mật khẩu thất bại!");
													break;
												}
											}
											else
											{
												MCommon.Common.SetStatusDataGridView(dtgvAcc, num, "cStatus", "Không tìm thấy email để khôi phục mật khẩu!");
											}
											break;
										}
										if (chrome.CheckExistElement("[href*=\"recover\"]", 10.0) != 1)
										{
											break;
										}
										chrome.Click(4, "[href*=\"recover\"]");
										chrome.DelayTime(1.0);
										if (chrome.CheckExistElement("#identify_search_text_input", 10.0) != 1)
										{
											break;
										}
										chrome.SendKeys(1, "identify_search_text_input", cellAccount6);
										chrome.DelayTime(1.0);
										chrome.Click(1, "did_submit");
										chrome.DelayTime(1.0);
										while (true)
										{
											switch (chrome.CheckExistElements(20.0, "[value=\"send_email\"]", "[href*=\"/recover/initiate/\"]"))
											{
												case 1:
													{
														EmailHelper.DeleteMail(cellAccount6, cellAccount7);
														chrome.Click(2, "reset_action");
														chrome.DelayTime(1.0);
														if (chrome.CheckExistElement("[data-sigil=\"code-input\"]", 15.0) != 1)
														{
															goto end_IL_0288;
														}
														SetStatusAccount(num, "Đang lấy mã otp...");
														int num9 = 0;
														try
														{
															num9 = Convert.ToInt32(Regex.Match(chrome.ExecuteScript("return document.querySelector('[method=\"post\"] section>section:nth-child(2)>div').innerText").ToString(), "\\d{1}").Value);
														}
														catch
														{
															num9 = Convert.ToInt32(Regex.Match(chrome.ExecuteScript("return document.querySelector('[method=\"post\"] section:nth-child(9)').innerText").ToString(), "\\d{1}").Value);
														}
														while (true)
														{
															string otpHotMail6So = GetOtpHotMail6So(cellAccount6, cellAccount7, num9);
															if (otpHotMail6So != "")
															{
																chrome.SendKeys(4, "[data-sigil=\"code-input\"]", otpHotMail6So);
																chrome.DelayTime(1.0);
																chrome.Click(2, "reset_action");
																chrome.DelayTime(1.0);
																num7 = chrome.CheckExistElements(15.0, "[data-sigil=\"error_message\"]", "[name=\"password_new\"]");
																if (num7 == 1)
																{
																	continue;
																}
																SetStatusAccount(num, "Đang đổi mật khẩu...");
																string text10 = "";
																text10 = ((setting_general.GetValueInt("typePass") != 0) ? (MCommon.Common.CreateRandomString(6, rd) + MCommon.Common.CreateRandomNumber(4, rd) + MCommon.Common.CreateRandomString(5, rd)) : setting_general.GetValue("txtPass"));
																chrome.SendKeys(2, "password_new", text10);
																chrome.DelayTime(1.0);
																chrome.Click(4, "[data-sigil=\"touchable\"]");
																chrome.DelayTime(1.0);
																MCommon.Common.SetStatusDataGridView(dtgvAcc, num, "cPassword", text10);
																CommonSQL.UpdateFieldToAccount(cellAccount, "pass", text10);
																if (chrome.CheckExistElement("[method=\"post\"]", 30.0) != 1)
																{
																	break;
																}
																if (chrome.CheckExistElement("#approvals_code") == 1)
																{
																	otpHotMail6So = MCommon.Common.GetTotp(cellAccount2.Replace(" ", ""));
																	chrome.SendKeys(1, "approvals_code", otpHotMail6So);
																	chrome.DelayTime(1.0);
																	chrome.Click(2, "submit[Submit Code]");
																	chrome.DelayTime(1.0);
																	while (chrome.CheckExistElement("[name*=\"submit\"]", 5.0) == 1)
																	{
																		chrome.Click(4, "[name*=\"submit\"]");
																		chrome.DelayTime(5.0);
																	}
																}
																chrome.Click(2, "submit_action");
																chrome.DelayTime(1.0);
																if (CommonChrome.CheckLiveCookie(chrome) == 1)
																{
																	MCommon.Common.SetStatusDataGridView(dtgvAcc, num, "cStatus", "Đổi pass xong!");
																	num2 = 4;
																}
																break;
															}
															MCommon.Common.SetStatusDataGridView(dtgvAcc, num, "cStatus", "Khôi phục mật khẩu thất bại!");
															break;
														}
														goto end_IL_1f23;
													}
												case 2:
													break;
												default:
													goto end_IL_1f23;
											}
											chrome.Click(4, "[href*=\"/recover/initiate/\"]");
											chrome.DelayTime(1.0);
										}
									}
								end_IL_1f23:;
								}
								catch (Exception ex)
								{
									if (CommonChrome.IsCheckpoint(chrome))
									{
										num2 = 3;
									}
									else
									{
										SetStatusAccount(num, text4 + Language.GetValue("Lô\u0303i đăng nhâ\u0323p!"));
										num2 = 1;
									}
									MCommon.Common.ExportError(chrome, ex, "Login Error!");
								}
							}
							catch (Exception ex2)
							{
								SetStatusAccount(num, text4 + Language.GetValue("Lô\u0303i không xa\u0301c đi\u0323nh!"));
								num2 = 1;
								MCommon.Common.ExportError(chrome, ex2);
							}
							break;
						}
					IL_1aeb:
						SetStatusAccount(num, text4 + Language.GetValue("Đã dừng!"));
						num2 = 1;
						break;
					end_IL_0288:
						break;
				}
				break;
			}
			switch (num2)
			{
				case 2:
					SetStatusAccount(num, text4 + Language.GetValue("Không ti\u0300m thâ\u0301y chrome!"));
					break;
				case 3:
					SetStatusAccount(num, text4 + "Checkpoint!");
					SetInfoAccount(cellAccount, num, "Die");
					break;
				case 4:
					SetStatusAccount(num, text4 + Language.GetValue("Khôi phục mật khẩu thành công!"));
					break;
				default:
					if (CommonChrome.IsCheckpoint(chrome))
					{
						SetStatusAccount(num, text4 + "Checkpoint!");
						SetInfoAccount(cellAccount, num, "Die");
					}
					break;
				case 1:
					break;
			}
			try
			{
				chrome.Close();
			}
			catch
			{
			}
			lock (lock_FinishProxy)
			{
				switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
				{
					case 7:
						tinsoftProxy?.DecrementDangSuDung();
						break;
					case 8:
						xproxyProxy?.DecrementDangSuDung();
						break;
					case 10:
						tMProxy?.DecrementDangSuDung();
						break;
					case 11:
						proxyWeb?.DecrementDangSuDung();
						break;
					case 12:
						shopLike?.DecrementDangSuDung();
						break;
					case 9:
						break;
				}
			}
		}

		private string GetOtpHotMail6So(string username, string password, int number, int timeout = 10, string imap = "")
		{
			//Discarded unreachable code: IL_0464, IL_0471, IL_04d9, IL_054c
			int num = 0;
			int num2 = 10;
			string text = "";
			if (imap == "")
			{
				imap = "outlook.office365.com";
				if (username.Contains("@hotmail.") || username.Contains("@outlook.") || username.EndsWith("@rickystar.com"))
				{
					imap = "outlook.office365.com";
				}
				else if (username.EndsWith("@yandex.com"))
				{
					imap = "imap.yandex.com";
				}
				else if (username.EndsWith("@gmail.com"))
				{
					imap = "imap.gmail.com";
				}
			}
			while (true)
			{
				try
				{
					ImapClient imapClient = new ImapClient(imap, username, password, AuthMethods.Login, 993, secure: true);
					for (int i = 0; i < timeout; i++)
					{
						try
						{
							for (int j = 0; j < 2; j++)
							{
								if (imap == "imap.yandex.com")
								{
									j = 1;
								}
								if (j == 0)
								{
									imapClient.SelectMailbox("Inbox");
								}
								else
								{
									imapClient.SelectMailbox("Spam");
								}
								int messageCount = imapClient.GetMessageCount();
								if (messageCount <= 0)
								{
									continue;
								}
								Lazy<MailMessage>[] array = null;
								array = ((!(imap == "imap.yandex.com")) ? imapClient.SearchMessages(SearchCondition.From("security@facebookmail.com").Or(SearchCondition.From("registration@facebookmail.com")).And(SearchCondition.Unseen())) : imapClient.SearchMessages(SearchCondition.Unseen()));
								if (array.Length == 0)
								{
									continue;
								}
								int num3 = array.Count() - 1;
								if (num3 >= 0)
								{
									string input = array[num3].Value.Body.ToString();
									text = Regex.Match(input, "\\d{" + number + "}").Value.Trim();
								}
								if (text != "")
								{
									if (imapClient.IsDisposed)
									{
										imapClient.Dispose();
									}
									if (imapClient.IsConnected)
									{
										imapClient.Disconnect();
									}
									return text;
								}
							}
						}
						catch
						{
						}
						MCommon.Common.DelayTime(1.0);
					}
					if (imapClient.IsDisposed)
					{
						imapClient.Dispose();
					}
					if (imapClient.IsConnected)
					{
						imapClient.Disconnect();
					}
				}
				catch (Exception ex)
				{
					if (ex.ToString().ToLower().Contains("blocked"))
					{
						return "block";
					}
					num++;
					if (num < num2)
					{
						continue;
					}
				}
				break;
			}
			return "";
		}

		private void gửiOTPVềMailMbasicbetaToolStripMenuItem_Click(object sender, EventArgs e)
		{
			GiaiCheckpointTaiKhoan(3);
		}

		private void đổiPassHotmailToolStripMenuItem_Click(object sender, EventArgs e)
		{
			if (CountChooseRowInDatagridview() == 0)
			{
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng chọn tài khoản cần đổi pass!"), 3);
				return;
			}
			MCommon.Common.ShowForm(new fNhapPassKhoiPhuc());
			if (fNhapPassKhoiPhuc.isOK)
			{
				ChangePassHotmail();
			}
		}

		private void ChangePassHotmail()
		{
			//Discarded unreachable code: IL_0aaa, IL_0ae6
			isCountCheckAccountWhenChayTuongTac = true;
			try
			{
				LoadSetting();
				string profilePath = ConfigHelper.GetPathProfile();
				int maxThread = setting_general.GetValueInt("nudInteractThread", 3);
				List<int> lstPossition = new List<int>();
				for (int i = 0; i < maxThread; i++)
				{
					lstPossition.Add(0);
				}
				switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
				{
					case 7:
						{
							listApiTinsoft = GetListKeyTinsoft();
							if (listApiTinsoft.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy Tinsoft không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listTinsoft = new List<TinsoftProxy>();
							for (int m = 0; m < listApiTinsoft.Count; m++)
							{
								TinsoftProxy item4 = new TinsoftProxy(listApiTinsoft[m], setting_general.GetValueInt("nudLuongPerIPTinsoft"), setting_general.GetValueInt("cbbLocationTinsoft"));
								listTinsoft.Add(item4);
							}
							if (listApiTinsoft.Count * setting_general.GetValueInt("nudLuongPerIPTinsoft") < maxThread)
							{
								maxThread = listApiTinsoft.Count * setting_general.GetValueInt("nudLuongPerIPTinsoft");
							}
							break;
						}
					case 8:
						{
							listProxyXproxy = setting_general.GetValueList("txtListProxy");
							if (listProxyXproxy.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("XProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listxProxy = new List<XproxyProxy>();
							for (int n = 0; n < listProxyXproxy.Count; n++)
							{
								XproxyProxy item5 = new XproxyProxy(setting_general.GetValue("txtServiceURLXProxy"), listProxyXproxy[n], setting_general.GetValueInt("typeProxy"), setting_general.GetValueInt("nudLuongPerIPXProxy"));
								listxProxy.Add(item5);
							}
							if (listProxyXproxy.Count * setting_general.GetValueInt("nudLuongPerIPXProxy") < maxThread)
							{
								maxThread = listProxyXproxy.Count * setting_general.GetValueInt("nudLuongPerIPXProxy");
							}
							break;
						}
					case 10:
						{
							listProxyTMProxy = setting_general.GetValueList("txtApiKeyTMProxy");
							if (listProxyTMProxy.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("TMProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listTMProxy = new List<TMProxy>();
							for (int k = 0; k < listProxyTMProxy.Count; k++)
							{
								TMProxy item2 = new TMProxy(listProxyTMProxy[k], 0, setting_general.GetValueInt("nudLuongPerIPTMProxy"));
								listTMProxy.Add(item2);
							}
							if (listProxyTMProxy.Count * setting_general.GetValueInt("nudLuongPerIPTMProxy") < maxThread)
							{
								maxThread = listProxyTMProxy.Count * setting_general.GetValueInt("nudLuongPerIPTMProxy");
							}
							break;
						}
					case 11:
						{
							listProxyProxyv6 = setting_general.GetValueList("txtListProxyv6");
							if (listProxyProxyv6.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy không đủ, vui lòng cấu hình lại!"), 2);
								return;
							}
							listProxyWeb = new List<ProxyWeb>();
							for (int l = 0; l < listProxyProxyv6.Count; l++)
							{
								if (0 == 0)
								{
									ProxyWeb item3 = new ProxyWeb(setting_general.GetValue("txtApiProxyv6"), listProxyProxyv6[l], 0, setting_general.GetValueInt("nudLuongPerIPProxyv6"));
									listProxyWeb.Add(item3);
								}
							}
							if (listProxyProxyv6.Count * setting_general.GetValueInt("nudLuongPerIPProxyv6") < maxThread)
							{
								maxThread = listProxyProxyv6.Count * setting_general.GetValueInt("nudLuongPerIPProxyv6");
							}
							break;
						}
					case 12:
						{
							listProxyShopLike = setting_general.GetValueList("txtApiShopLike");
							if (listProxyShopLike.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("TMProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listShopLike = new List<ShopLike>();
							for (int j = 0; j < listProxyShopLike.Count; j++)
							{
								ShopLike item = new ShopLike(listProxyShopLike[j], 0, setting_general.GetValueInt("nudLuongPerIPShopLike"));
								listShopLike.Add(item);
							}
							if (listProxyShopLike.Count * setting_general.GetValueInt("nudLuongPerIPShopLike") < maxThread)
							{
								maxThread = listProxyShopLike.Count * setting_general.GetValueInt("nudLuongPerIPShopLike");
							}
							break;
						}
				}
				cControl("start");
				isStop = false;
				int curChangeIp = 0;
				bool isChangeIPSuccess = false;
				lstThread = new List<Thread>();
				new Thread((ThreadStart)delegate
				{
					try
					{
						if (isStop)
						{
							cControl("stop");
							return;
						}
						int num = 0;
						while (true)
						{
							if (num < dtgvAcc.Rows.Count && !isStop)
							{
								if (!Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
								{
									num++;
									goto IL_042a;
								}
								if (lstThread.Count < maxThread)
								{
									if (!isStop)
									{
										int row = num++;
										if (row != 0)
										{
											MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayOpenChrome", 1));
										}
										Thread thread = new Thread((ThreadStart)delegate
										{
											try
											{
												int indexOfPossitionApp = MCommon.Common.GetIndexOfPossitionApp(ref lstPossition);
												ChangePassHotmailOneThread(row, indexOfPossitionApp, profilePath);
												MCommon.Common.FillIndexPossition(ref lstPossition, indexOfPossitionApp);
												SetCellAccount(row, "cChose", false);
											}
											catch (Exception ex3)
											{
												MCommon.Common.ExportError(null, ex3);
											}
										});
										lstThread.Add(thread);
										thread.Name = row.ToString();
										thread.Start();
										goto IL_042a;
									}
								}
								else if (!isStop)
								{
									if (setting_general.GetValueInt("ip_iTypeChangeIp") != 0 && setting_general.GetValueInt("ip_iTypeChangeIp") != 7 && setting_general.GetValueInt("ip_iTypeChangeIp") != 8 && setting_general.GetValueInt("ip_iTypeChangeIp") != 9 && setting_general.GetValueInt("ip_iTypeChangeIp") != 10 && setting_general.GetValueInt("ip_iTypeChangeIp") != 11 && setting_general.GetValueInt("ip_iTypeChangeIp") != 12)
									{
										for (int num2 = 0; num2 < lstThread.Count; num2++)
										{
											lstThread[num2].Join();
											lstThread.RemoveAt(num2--);
										}
										if (isStop)
										{
											goto IL_045f;
										}
										Interlocked.Increment(ref curChangeIp);
										if (curChangeIp >= setting_general.GetValueInt("ip_nudChangeIpCount", 1))
										{
											for (int num3 = 0; num3 < 3; num3++)
											{
												isChangeIPSuccess = MCommon.Common.ChangeIP(setting_general.GetValueInt("ip_iTypeChangeIp"), setting_general.GetValueInt("typeDcom"), setting_general.GetValue("ip_txtProfileNameDcom"), setting_general.GetValue("txtUrlHilink"), setting_general.GetValueInt("ip_cbbHostpot"), setting_general.GetValue("ip_txtNordVPN"));
												if (isChangeIPSuccess)
												{
													break;
												}
											}
											if (!isChangeIPSuccess)
											{
												MessageBoxHelper.ShowMessageBox(Language.GetValue("Không thê\u0309 đô\u0309i ip!"), 2);
												break;
											}
											curChangeIp = 0;
										}
									}
									else
									{
										for (int num4 = 0; num4 < lstThread.Count; num4++)
										{
											if (!lstThread[num4].IsAlive)
											{
												lstThread.RemoveAt(num4--);
											}
										}
									}
									goto IL_042a;
								}
							}
							goto IL_045f;
						IL_042a:
							if (!isStop)
							{
								continue;
							}
							goto IL_045f;
						IL_045f:
							for (int num5 = 0; num5 < lstThread.Count; num5++)
							{
								lstThread[num5].Join();
							}
							break;
						}
					}
					catch (Exception ex2)
					{
						MCommon.Common.ExportError(null, ex2);
					}
					cControl("stop");
					isCountCheckAccountWhenChayTuongTac = false;
				}).Start();
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(null, ex);
				isCountCheckAccountWhenChayTuongTac = false;
			}
		}

		private void ChangePassHotmailOneThread(int indexRow, int indexPos, string profilePath)
		{
			//Discarded unreachable code: IL_1373, IL_1388, IL_1cef, IL_1d04, IL_1d66, IL_1dbd, IL_1dc8, IL_1e20
			Chrome chrome = null;
			string cellAccount = GetCellAccount(indexRow, "cId");
			string cellAccount2 = GetCellAccount(indexRow, "cUid");
			string text = GetCellAccount(indexRow, "cEmail").ToLower();
			string cellAccount3 = GetCellAccount(indexRow, "cPassMail");
			string useragentIPad = SetupFolder.GetUseragentIPad(rd);
			try
			{
				SetStatusAccount(indexRow, Language.GetValue("Đang mơ\u0309 tri\u0300nh duyê\u0323t..."));
				Point pointFromIndexPosition = MCommon.Common.GetPointFromIndexPosition(indexPos, 5, 2);
				Point sizeChrome = MCommon.Common.GetSizeChrome(5, 2);
				bool flag = false;
				try
				{
					bool disableImage = false;
					chrome = new Chrome
					{
						DisableImage = disableImage,
						Size = sizeChrome,
						Position = pointFromIndexPosition,
						TimeWaitForSearchingElement = 3,
						TimeWaitForLoadingPage = 60,
						UserAgent = useragentIPad
					};
					if (setting_general.GetValueInt("typeBrowser") != 0)
					{
						chrome.LinkToOtherBrowser = setting_general.GetValue("txtLinkToOtherBrowser");
					}
					if (!chrome.Open())
					{
						SetStatusAccount(indexRow, Language.GetValue("Lỗi mở trình duyệt!"));
					}
					else
					{
						SetStatusAccount(indexRow, Language.GetValue("Đang đăng nhâ\u0323p..."));
						if (text.Contains("hotmail") || text.Contains("outlook"))
						{
							chrome.GotoURL("https://login.live.com/login.srf");
							chrome.DelayTime(1.0);
							if (chrome.CheckExistElement("[name=\"loginfmt\"]", 10.0) == 1)
							{
								chrome.SendKeys(2, "loginfmt", text);
								chrome.DelayTime(0.1);
								chrome.Click(1, "idSIButton9");
								if (chrome.CheckExistElement("[name=\"passwd\"]", 10.0) == 1)
								{
									chrome.DelayTime(2.0);
									chrome.SendKeys(2, "passwd", cellAccount3);
									chrome.DelayTime(2.0);
									chrome.Click(1, "idSIButton9", 0, 0, "", 0, 10);
									int num = 0;
									while (true)
									{
										if (num < 10)
										{
											switch (chrome.CheckExistElements(0.0, "[name=\"DontShowAgain\"]", "#O365_MainLink_NavMenu", "#reload-button", "#iProofEmail"))
											{
												case 1:
													chrome.Click(2, "DontShowAgain");
													chrome.DelayTime(0.1);
													chrome.Click(1, "idSIButton9");
													break;
												case 3:
													chrome.Click(4, "#reload-button");
													goto IL_091b;
												case 4:
													{
														string text2 = text.Split('@')[0];
														chrome.SendKeys(1, "iProofEmail", text2);
														chrome.DelayTime(1.0);
														chrome.ExecuteScript("document.querySelector('#iSelectProofAction').click()");
														chrome.DelayTime(1.0);
														if (chrome.CheckExistElement("#iOttText", 10.0) == 1)
														{
															string otpFromGetnada = GetOtpFromGetnada(text2 + "@getnada.com", 7);
															if (otpFromGetnada != "")
															{
																chrome.SendKeys(1, "iOttText", otpFromGetnada);
																chrome.DelayTime(1.0);
																chrome.ExecuteScript("document.querySelector('#iVerifyCodeAction').click()");
																chrome.DelayTime(1.0);
															}
														}
														goto IL_091b;
													}
												default:
													switch (chrome.CheckExistElements(0.0, "#idA_IL_ForgotPassword0", "[name=\"passwd\"]"))
													{
														case 1:
															SetStatusAccount(indexRow, Language.GetValue("Mail sai pass!"));
															goto end_IL_0113;
														case 2:
															SetStatusAccount(indexRow, Language.GetValue("Không có pass mail!"));
															goto end_IL_0113;
														default:
															if (!chrome.GetURL().Contains("https://account.live.com/Abuse") && !chrome.GetURL().Contains("https://account.live.com/recover"))
															{
																break;
															}
															SetStatusAccount(indexRow, Language.GetValue("Mail đã bị khóa!"));
															goto end_IL_0113;
													}
													goto IL_091b;
												case 2:
													break;
											}
										}
										flag = true;
										break;
									IL_091b:
										chrome.DelayTime(1.0);
										num++;
									}
								}
							}
						}
						if (flag)
						{
							SetStatusAccount(indexRow, Language.GetValue("Đăng nhâ\u0323p thành công!"));
							string text3 = "";
							string text4 = "";
							SetStatusAccount(indexRow, Language.GetValue("Chuẩn bị đổi pass...."));
							if (!chrome.GetURL().StartsWith("https://account.microsoft.com/profile/"))
							{
								chrome.GotoURL("https://account.microsoft.com/profile/");
							}
							if (chrome.CheckExistElement("[href*=\"password\"]", 30.0) == 1)
							{
								chrome.Click(4, "[href*=\"password\"]");
								chrome.DelayTime(1.0);
								switch (chrome.CheckExistElements(30.0, "#EmailAddress", "#idDiv_SAOTCS_Proofs_Section"))
								{
									case 1:
										SetStatusAccount(indexRow, Language.GetValue("Đang add mail khôi phục...."));
										text3 = text.Split('@')[0] + "@getnada.com";
										chrome.SendKeys(1, "EmailAddress", text3);
										chrome.DelayTime(1.0);
										chrome.ExecuteScript("document.querySelector('#iNext').click()");
										chrome.DelayTime(1.0);
										if (chrome.CheckExistElement("#iOttText", 30.0) != 1)
										{
											break;
										}
										SetStatusAccount(indexRow, Language.GetValue("Đang lấy otp lần 1...."));
										text4 = GetOtpFromGetnada(text3, 4);
										if (!(text4 != ""))
										{
											break;
										}
										chrome.SendKeys(1, "iOttText", text4);
										chrome.DelayTime(1.0);
										chrome.ExecuteScript("document.querySelector('#iNext').click()");
										chrome.DelayTime(1.0);
										if (chrome.CheckExistElement("#idDiv_SAOTCS_Proofs_Section", 30.0) != 1)
										{
											break;
										}
										chrome.ExecuteScript("document.querySelector('[aria-describedby=\"idDiv_SAOTCS_Title\"]').click()");
										chrome.DelayTime(1.0);
										if (chrome.CheckExistElement("[name=\"ProofConfirmation\"]", 30.0) != 1)
										{
											break;
										}
										chrome.SendKeys(2, "ProofConfirmation", text3);
										chrome.DelayTime(1.0);
										chrome.ExecuteScript("document.querySelector('[type=\"submit\"]').click()");
										chrome.DelayTime(1.0);
										if (chrome.CheckExistElement("[name=\"otc\"]", 10.0) != 1)
										{
											break;
										}
										SetStatusAccount(indexRow, Language.GetValue("Đang lấy otp lần 2...."));
										while (true)
										{
											text4 = GetOtpFromGetnada(text3, 7);
											if (!(text4 != ""))
											{
												break;
											}
											chrome.SendKeys(2, "otc", text4);
											chrome.DelayTime(1.0);
											chrome.ExecuteScript("document.querySelector('[type=\"submit\"]').click()");
											chrome.DelayTime(1.0);
											switch (chrome.CheckExistElements(10.0, "#iCancel", "[name=\"otc\"]"))
											{
												case 2:
													break;
												case 1:
													chrome.Click(1, "iCancel");
													chrome.DelayTime(1.0);
													if (chrome.CheckExistElement("#iCurPassword", 30.0) == 1)
													{
														string text7 = "";
														text7 = ((setting_general.GetValueInt("typePass") != 0) ? (MCommon.Common.CreateRandomString(6, rd) + MCommon.Common.CreateRandomNumber(4, rd) + MCommon.Common.CreateRandomString(5, rd)) : setting_general.GetValue("txtPass"));
														chrome.SendKeys(1, "iCurPassword", cellAccount3);
														chrome.DelayTime(1.0);
														chrome.SendKeys(1, "iPassword", text7);
														chrome.DelayTime(1.0);
														chrome.SendKeys(1, "iRetypePassword", text7);
														chrome.DelayTime(1.0);
														chrome.ScrollSmoothIfNotExistOnScreen("document.querySelector('#UpdatePasswordAction')");
														chrome.Click(1, "UpdatePasswordAction");
														chrome.DelayTime(3.0);
														if (chrome.CheckExistElement("[href*=\"password\"]", 30.0) == 1)
														{
															SetStatusAccount(indexRow, Language.GetValue("Đổi pass mail thành công!"));
															DatagridviewHelper.SetStatusDataGridView(dtgvAcc, indexRow, "cPassMail", text7);
															CommonSQL.UpdateFieldToAccount(cellAccount, "PassMail", text7);
															lock (i)
															{
																File.AppendAllText("email.txt", text + "|" + text7 + "|" + text3 + Environment.NewLine);
															}
														}
													}
													goto end_IL_0113;
												default:
													goto end_IL_0113;
											}
										}
										break;
									case 2:
										chrome.ExecuteScript("document.querySelector('[aria-describedby=\"idDiv_SAOTCS_Title\"]').click()");
										chrome.DelayTime(1.0);
										if (chrome.CheckExistElement("[name=\"ProofConfirmation\"]", 30.0) != 1)
										{
											break;
										}
										text3 = text.Split('@')[0] + "@getnada.com";
										chrome.SendKeys(2, "ProofConfirmation", text3);
										chrome.DelayTime(1.0);
										chrome.ExecuteScript("document.querySelector('[type=\"submit\"]').click()");
										chrome.DelayTime(1.0);
										if (chrome.CheckExistElement("[name=\"otc\"]", 10.0) != 1)
										{
											break;
										}
										SetStatusAccount(indexRow, Language.GetValue("Đang lấy otp lần 2...."));
										while (true)
										{
											text4 = GetOtpFromGetnada(text3, 7);
											if (!(text4 != ""))
											{
												break;
											}
											chrome.SendKeys(2, "otc", text4);
											chrome.DelayTime(1.0);
											chrome.ExecuteScript("document.querySelector('[type=\"submit\"]').click()");
											chrome.DelayTime(1.0);
											switch (chrome.CheckExistElements(10.0, "#iCurPassword", "#iCancel", "[name=\"otc\"]"))
											{
												case 3:
													break;
												case 1:
													{
														string text6 = "";
														text6 = ((setting_general.GetValueInt("typePass") != 0) ? (MCommon.Common.CreateRandomString(6, rd) + MCommon.Common.CreateRandomNumber(4, rd) + MCommon.Common.CreateRandomString(5, rd)) : setting_general.GetValue("txtPass"));
														chrome.SendKeys(1, "iCurPassword", cellAccount3);
														chrome.DelayTime(1.0);
														chrome.SendKeys(1, "iPassword", text6);
														chrome.DelayTime(1.0);
														chrome.SendKeys(1, "iRetypePassword", text6);
														chrome.DelayTime(1.0);
														chrome.ScrollSmoothIfNotExistOnScreen("document.querySelector('#UpdatePasswordAction')");
														chrome.Click(1, "UpdatePasswordAction");
														chrome.DelayTime(3.0);
														if (chrome.CheckExistElement("[href*=\"password\"]", 30.0) == 1)
														{
															SetStatusAccount(indexRow, Language.GetValue("Đổi pass mail thành công!"));
															DatagridviewHelper.SetStatusDataGridView(dtgvAcc, indexRow, "cPassMail", text6);
															CommonSQL.UpdateFieldToAccount(cellAccount, "PassMail", text6);
														}
														goto end_IL_0113;
													}
												case 2:
													chrome.Click(1, "iCancel");
													chrome.DelayTime(1.0);
													if (chrome.CheckExistElement("#iCurPassword", 30.0) == 1)
													{
														string text5 = "";
														text5 = ((setting_general.GetValueInt("typePass") != 0) ? (MCommon.Common.CreateRandomString(6, rd) + MCommon.Common.CreateRandomNumber(4, rd) + MCommon.Common.CreateRandomString(5, rd)) : setting_general.GetValue("txtPass"));
														chrome.SendKeys(1, "iCurPassword", cellAccount3);
														chrome.DelayTime(1.0);
														chrome.SendKeys(1, "iPassword", text5);
														chrome.DelayTime(1.0);
														chrome.SendKeys(1, "iRetypePassword", text5);
														chrome.DelayTime(1.0);
														chrome.ExecuteScript("document.querySelector('#UpdatePasswordAction').click()");
														chrome.DelayTime(3.0);
														if (chrome.CheckExistElement("[href*=\"password\"]", 30.0) == 1)
														{
															SetStatusAccount(indexRow, Language.GetValue("Đổi pass mail thành công!"));
															DatagridviewHelper.SetStatusDataGridView(dtgvAcc, indexRow, "cPassMail", text5);
															CommonSQL.UpdateFieldToAccount(cellAccount, "PassMail", text5);
															lock (i)
															{
																File.AppendAllText("email.txt", text + "|" + text5 + "|" + text3 + Environment.NewLine);
															}
														}
													}
													goto end_IL_0113;
												default:
													goto end_IL_0113;
											}
										}
										break;
								}
							}
						}
						else
						{
							SetStatusAccount(indexRow, Language.GetValue("Đăng nhâ\u0323p thất bại!"));
						}
					}
				end_IL_0113:;
				}
				catch (Exception ex)
				{
					SetStatusAccount(indexRow, Language.GetValue("Lô\u0303i đăng nhâ\u0323p!"));
					MCommon.Common.ExportError(chrome, ex, "Login Error!");
				}
			}
			catch (Exception ex2)
			{
				SetStatusAccount(indexRow, Language.GetValue("Lô\u0303i không xa\u0301c đi\u0323nh!"));
				MCommon.Common.ExportError(chrome, ex2);
			}
			chrome.Close();
		}

		private void quétDanhSáchNhómToolStripMenuItem_Click(object sender, EventArgs e)
		{
			if (CountChooseRowInDatagridview() == 0)
			{
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng chọn tài khoản cần đổi pass!"), 3);
				return;
			}
			MCommon.Common.ShowForm(new fCauHinhQuetNhom());
			if (fCauHinhQuetNhom.isOK)
			{
				QuetDanhSachNhom();
			}
		}

		private void QuetDanhSachNhom()
		{
			//Discarded unreachable code: IL_0ac8, IL_0b04
			isCountCheckAccountWhenChayTuongTac = true;
			try
			{
				LoadSetting();
				string pathProfile = ConfigHelper.GetPathProfile();
				int maxThread = setting_general.GetValueInt("nudInteractThread", 3);
				switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
				{
					case 7:
						{
							listApiTinsoft = GetListKeyTinsoft();
							if (listApiTinsoft.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy Tinsoft không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listTinsoft = new List<TinsoftProxy>();
							for (int l = 0; l < listApiTinsoft.Count; l++)
							{
								TinsoftProxy item4 = new TinsoftProxy(listApiTinsoft[l], setting_general.GetValueInt("nudLuongPerIPTinsoft"), setting_general.GetValueInt("cbbLocationTinsoft"));
								listTinsoft.Add(item4);
							}
							if (listApiTinsoft.Count * setting_general.GetValueInt("nudLuongPerIPTinsoft") < maxThread)
							{
								maxThread = listApiTinsoft.Count * setting_general.GetValueInt("nudLuongPerIPTinsoft");
							}
							break;
						}
					case 8:
						{
							listProxyXproxy = setting_general.GetValueList("txtListProxy");
							if (listProxyXproxy.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("XProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listxProxy = new List<XproxyProxy>();
							for (int m = 0; m < listProxyXproxy.Count; m++)
							{
								XproxyProxy item5 = new XproxyProxy(setting_general.GetValue("txtServiceURLXProxy"), listProxyXproxy[m], setting_general.GetValueInt("typeProxy"), setting_general.GetValueInt("nudLuongPerIPXProxy"));
								listxProxy.Add(item5);
							}
							if (listProxyXproxy.Count * setting_general.GetValueInt("nudLuongPerIPXProxy") < maxThread)
							{
								maxThread = listProxyXproxy.Count * setting_general.GetValueInt("nudLuongPerIPXProxy");
							}
							break;
						}
					case 10:
						{
							listProxyTMProxy = setting_general.GetValueList("txtApiKeyTMProxy");
							if (listProxyTMProxy.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("TMProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listTMProxy = new List<TMProxy>();
							for (int j = 0; j < listProxyTMProxy.Count; j++)
							{
								TMProxy item2 = new TMProxy(listProxyTMProxy[j], 0, setting_general.GetValueInt("nudLuongPerIPTMProxy"));
								listTMProxy.Add(item2);
							}
							if (listProxyTMProxy.Count * setting_general.GetValueInt("nudLuongPerIPTMProxy") < maxThread)
							{
								maxThread = listProxyTMProxy.Count * setting_general.GetValueInt("nudLuongPerIPTMProxy");
							}
							break;
						}
					case 11:
						{
							listProxyProxyv6 = setting_general.GetValueList("txtListProxyv6");
							if (listProxyProxyv6.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy không đủ, vui lòng cấu hình lại!"), 2);
								return;
							}
							listProxyWeb = new List<ProxyWeb>();
							for (int k = 0; k < listProxyProxyv6.Count; k++)
							{
								if (0 == 0)
								{
									ProxyWeb item3 = new ProxyWeb(setting_general.GetValue("txtApiProxyv6"), listProxyProxyv6[k], 0, setting_general.GetValueInt("nudLuongPerIPProxyv6"));
									listProxyWeb.Add(item3);
								}
							}
							if (listProxyProxyv6.Count * setting_general.GetValueInt("nudLuongPerIPProxyv6") < maxThread)
							{
								maxThread = listProxyProxyv6.Count * setting_general.GetValueInt("nudLuongPerIPProxyv6");
							}
							break;
						}
					case 12:
						{
							listProxyShopLike = setting_general.GetValueList("txtApiShopLike");
							if (listProxyShopLike.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("TMProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listShopLike = new List<ShopLike>();
							for (int i = 0; i < listProxyShopLike.Count; i++)
							{
								ShopLike item = new ShopLike(listProxyShopLike[i], 0, setting_general.GetValueInt("nudLuongPerIPShopLike"));
								listShopLike.Add(item);
							}
							if (listProxyShopLike.Count * setting_general.GetValueInt("nudLuongPerIPShopLike") < maxThread)
							{
								maxThread = listProxyShopLike.Count * setting_general.GetValueInt("nudLuongPerIPShopLike");
							}
							break;
						}
				}
				cControl("start");
				isStop = false;
				int curChangeIp = 0;
				bool isChangeIPSuccess = false;
				MCommon.Common.CreateFolder("output");
				string path = "output\\" + Guid.NewGuid().ToString() + ".txt";
				lstThread = new List<Thread>();
				new Thread((ThreadStart)delegate
				{
					try
					{
						if (isStop)
						{
							cControl("stop");
							return;
						}
						int num = 0;
						while (true)
						{
							if (num < dtgvAcc.Rows.Count && !isStop)
							{
								if (!Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
								{
									num++;
									goto IL_03fa;
								}
								if (lstThread.Count < maxThread)
								{
									if (!isStop)
									{
										int row = num++;
										Thread thread = new Thread((ThreadStart)delegate
										{
											try
											{
												QuetNhomOneThread(row, path);
												SetCellAccount(row, "cChose", false);
											}
											catch (Exception ex3)
											{
												MCommon.Common.ExportError(null, ex3);
											}
										});
										lstThread.Add(thread);
										thread.Name = row.ToString();
										thread.Start();
										goto IL_03fa;
									}
								}
								else if (!isStop)
								{
									if (setting_general.GetValueInt("ip_iTypeChangeIp") != 0 && setting_general.GetValueInt("ip_iTypeChangeIp") != 7 && setting_general.GetValueInt("ip_iTypeChangeIp") != 8 && setting_general.GetValueInt("ip_iTypeChangeIp") != 9 && setting_general.GetValueInt("ip_iTypeChangeIp") != 10 && setting_general.GetValueInt("ip_iTypeChangeIp") != 11 && setting_general.GetValueInt("ip_iTypeChangeIp") != 12)
									{
										for (int n = 0; n < lstThread.Count; n++)
										{
											lstThread[n].Join();
											lstThread.RemoveAt(n--);
										}
										if (isStop)
										{
											goto IL_042f;
										}
										Interlocked.Increment(ref curChangeIp);
										if (curChangeIp >= setting_general.GetValueInt("ip_nudChangeIpCount", 1))
										{
											for (int num2 = 0; num2 < 3; num2++)
											{
												isChangeIPSuccess = MCommon.Common.ChangeIP(setting_general.GetValueInt("ip_iTypeChangeIp"), setting_general.GetValueInt("typeDcom"), setting_general.GetValue("ip_txtProfileNameDcom"), setting_general.GetValue("txtUrlHilink"), setting_general.GetValueInt("ip_cbbHostpot"), setting_general.GetValue("ip_txtNordVPN"));
												if (isChangeIPSuccess)
												{
													break;
												}
											}
											if (!isChangeIPSuccess)
											{
												MessageBoxHelper.ShowMessageBox(Language.GetValue("Không thê\u0309 đô\u0309i ip!"), 2);
												break;
											}
											curChangeIp = 0;
										}
									}
									else
									{
										for (int num3 = 0; num3 < lstThread.Count; num3++)
										{
											if (!lstThread[num3].IsAlive)
											{
												lstThread.RemoveAt(num3--);
											}
										}
									}
									goto IL_03fa;
								}
							}
							goto IL_042f;
						IL_03fa:
							if (!isStop)
							{
								continue;
							}
							goto IL_042f;
						IL_042f:
							for (int num4 = 0; num4 < lstThread.Count; num4++)
							{
								lstThread[num4].Join();
							}
							break;
						}
					}
					catch (Exception ex2)
					{
						MCommon.Common.ExportError(null, ex2);
					}
					cControl("stop");
					try
					{
						Process.Start(path);
					}
					catch
					{
					}
					isCountCheckAccountWhenChayTuongTac = false;
				}).Start();
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(null, ex);
				isCountCheckAccountWhenChayTuongTac = false;
			}
		}

		private void QuetNhomOneThread(int indexRow, string path)
		{
			//Discarded unreachable code: IL_033a, IL_034e, IL_063f, IL_0654, IL_0754, IL_0768, IL_0b04, IL_0b19, IL_0cca, IL_0cde, IL_0fcf, IL_0fe4, IL_10ce, IL_10e2, IL_145a, IL_146f, IL_1559, IL_156d, IL_185e, IL_1873, IL_1e9d, IL_1eb1, IL_1eb8, IL_1ecd, IL_1f45, IL_1fa3, IL_20af, IL_20c4
			string text = "";
			Chrome chrome = null;
			string text2 = "";
			int typeProxy = 0;
			string text3 = "";
			TinsoftProxy tinsoftProxy = null;
			XproxyProxy xproxyProxy = null;
			TMProxy tMProxy = null;
			ProxyWeb proxyWeb = null;
			ShopLike shopLike = null;
			string text4 = GetCellAccount(indexRow, "cUid");
			string cellAccount = GetCellAccount(indexRow, "cId");
			string cellAccount2 = GetCellAccount(indexRow, "cCookies");
			string cellAccount3 = GetCellAccount(indexRow, "cUseragent");
			if (text4 == "")
			{
				text4 = Regex.Match(cellAccount2, "c_user=(.*?);").Groups[1].Value;
			}
			if (cellAccount2 == "")
			{
				SetStatusAccount(indexRow, text2 + Language.GetValue("Không có cookie!"));
			}
			else if (isStop)
			{
				SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
			}
			else
			{
				while (true)
				{
					switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
					{
						case 7:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy proxy Tinsoft..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									tinsoftProxy = null;
									while (!isStop)
									{
										foreach (TinsoftProxy item in listTinsoft)
										{
											if (tinsoftProxy == null || item.daSuDung < tinsoftProxy.daSuDung)
											{
												tinsoftProxy = item;
											}
										}
										if (tinsoftProxy.daSuDung != tinsoftProxy.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (tinsoftProxy.daSuDung > 0 || tinsoftProxy.ChangeProxy())
									{
										text = tinsoftProxy.proxy;
										if (text == "")
										{
											text = tinsoftProxy.GetProxy();
										}
										tinsoftProxy.dangSuDung++;
										tinsoftProxy.daSuDung++;
										break;
									}
									bool flag10 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								bool flag11 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									text3 = MCommon.Common.CheckProxy(text, 0);
									if (text3 == "")
									{
										flag11 = false;
									}
								}
								if (!flag11)
								{
									tinsoftProxy.dangSuDung--;
									tinsoftProxy.daSuDung--;
									continue;
								}
								goto default;
							}
						case 8:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy Proxy..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									xproxyProxy = null;
									while (!isStop)
									{
										foreach (XproxyProxy item2 in listxProxy)
										{
											if (xproxyProxy == null || (item2.isProxyLive && item2.daSuDung < xproxyProxy.daSuDung))
											{
												xproxyProxy = item2;
											}
										}
										if (xproxyProxy.daSuDung != xproxyProxy.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (xproxyProxy.isProxyLive && (xproxyProxy.daSuDung > 0 || xproxyProxy.ChangeProxy()))
									{
										text = xproxyProxy.proxy;
										typeProxy = xproxyProxy.typeProxy;
										xproxyProxy.dangSuDung++;
										xproxyProxy.daSuDung++;
										break;
									}
									xproxyProxy.isProxyLive = false;
									bool flag7 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								bool flag8 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									int num2 = 0;
									while (true)
									{
										if (num2 >= 30)
										{
											goto IL_0a93;
										}
										MCommon.Common.DelayTime(1.0);
										text3 = MCommon.Common.CheckProxy(text, typeProxy);
										if (text3 != "")
										{
											goto IL_0a93;
										}
										if (isStop)
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
											goto end_IL_0234;
										}
										num2++;
										continue;
									IL_0a93:
										if (text3 == "")
										{
											flag8 = false;
										}
										break;
									}
								}
								if (!flag8)
								{
									xproxyProxy.dangSuDung--;
									xproxyProxy.daSuDung--;
									continue;
								}
								goto default;
							}
						case 9:
							text = GetCellAccount(indexRow, "cProxy");
							typeProxy = (text.EndsWith("*1") ? 1 : 0);
							if (text.EndsWith("*0") || text.EndsWith("*1"))
							{
								text = text.Substring(0, text.Length - 2);
							}
							goto default;
						case 10:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy TMProxy..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									tMProxy = null;
									while (!isStop)
									{
										foreach (TMProxy item3 in listTMProxy)
										{
											if (tMProxy == null || item3.daSuDung < tMProxy.daSuDung)
											{
												tMProxy = item3;
											}
										}
										if (tMProxy.daSuDung != tMProxy.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (tMProxy.daSuDung > 0 || tMProxy.ChangeProxy())
									{
										text = tMProxy.proxy;
										if (text == "")
										{
											text = tMProxy.GetProxy();
										}
										tMProxy.dangSuDung++;
										tMProxy.daSuDung++;
										break;
									}
									bool flag5 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								bool flag6 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									text3 = MCommon.Common.CheckProxy(text, 0);
									if (text3 == "")
									{
										flag6 = false;
									}
								}
								if (!flag6)
								{
									tMProxy.dangSuDung--;
									tMProxy.daSuDung--;
									continue;
								}
								goto default;
							}
						case 11:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy Proxyv6..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									proxyWeb = null;
									while (!isStop)
									{
										foreach (ProxyWeb item4 in listProxyWeb)
										{
											if (proxyWeb == null || item4.daSuDung < proxyWeb.daSuDung)
											{
												proxyWeb = item4;
											}
										}
										if (proxyWeb.daSuDung != proxyWeb.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (proxyWeb.daSuDung > 0 || proxyWeb.ChangeProxy())
									{
										text = proxyWeb.proxy;
										typeProxy = proxyWeb.typeProxy;
										proxyWeb.dangSuDung++;
										proxyWeb.daSuDung++;
										break;
									}
									bool flag3 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								bool flag4 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									int num = 0;
									while (true)
									{
										if (num >= 30)
										{
											goto IL_13e9;
										}
										MCommon.Common.DelayTime(1.0);
										text3 = MCommon.Common.CheckProxy(text, typeProxy);
										if (text3 != "")
										{
											goto IL_13e9;
										}
										if (isStop)
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
											goto end_IL_0234;
										}
										num++;
										continue;
									IL_13e9:
										if (text3 == "")
										{
											flag4 = false;
										}
										break;
									}
								}
								if (!flag4)
								{
									proxyWeb.dangSuDung--;
									proxyWeb.daSuDung--;
									continue;
								}
								goto default;
							}
						case 12:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy Proxy ShopLike ..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									shopLike = null;
									while (!isStop)
									{
										foreach (ShopLike item5 in listShopLike)
										{
											if (shopLike == null || item5.daSuDung < shopLike.daSuDung)
											{
												shopLike = item5;
											}
										}
										if (shopLike.daSuDung != shopLike.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (shopLike.daSuDung > 0 || shopLike.ChangeProxy())
									{
										text = shopLike.proxy;
										if (text == "")
										{
											text = shopLike.GetProxy();
										}
										shopLike.dangSuDung++;
										shopLike.daSuDung++;
										break;
									}
									bool flag = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								bool flag2 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									text3 = MCommon.Common.CheckProxy(text, 0);
									if (text3 == "")
									{
										flag2 = false;
									}
								}
								if (!flag2)
								{
									shopLike.dangSuDung--;
									shopLike.daSuDung--;
									continue;
								}
								goto default;
							}
						default:
							{
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									if (setting_general.GetValueInt("ip_iTypeChangeIp") != 7 && setting_general.GetValueInt("ip_iTypeChangeIp") != 8 && setting_general.GetValueInt("ip_iTypeChangeIp") != 10)
									{
										if (text != "")
										{
											text2 = "(IP: " + text.Split(':')[0] + ") ";
										}
										SetStatusAccount(indexRow, text2 + "Check IP...");
										bool flag9 = false;
										int num3 = 0;
										while (num3 < 30)
										{
											MCommon.Common.DelayTime(1.0);
											text3 = MCommon.Common.CheckProxy(text, typeProxy);
											if (text3 != "")
											{
												flag9 = true;
												break;
											}
											if (!isStop)
											{
												num3++;
												continue;
											}
											goto IL_1ac9;
										}
										if (!flag9)
										{
											if (text != "")
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Không thể kết nối proxy!"));
											}
											else
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Không có kết nối Internet!"));
											}
											break;
										}
									}
									text2 = "(IP: " + text3 + ") ";
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								List<string> list = new List<string>();
								try
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đang check cookie..."));
									if (CommonRequest.CheckLiveCookie(cellAccount2, cellAccount3, text, typeProxy).StartsWith("1|"))
									{
										SetStatusAccount(indexRow, text2 + Language.GetValue("Bắt đầu quét..."));
										List<string> listGroup = CommonRequest.GetListGroup(cellAccount2, cellAccount3, text, typeProxy);
										switch (setting_general.GetValueInt("typeQuetNhom"))
										{
											case 0:
												listGroup = GetGroupKhongKiemDuyetv2(chrome, listGroup);
												list = listGroup.Select((string x) => x).ToList();
												break;
											case 1:
												list = listGroup.Where((string x) => x.Split('|')[3].ToLower() == "true").ToList();
												break;
											case 2:
												list = listGroup.Where((string x) => x.Split('|')[3].ToLower() == "false").ToList();
												break;
										}
										if (list.Count == 0)
										{
											break;
										}
										lock (p)
										{
											foreach (string item6 in list)
											{
												File.AppendAllText(path, text4 + "|" + item6.Split('|')[0] + Environment.NewLine);
											}
										}
										SetStatusAccount(indexRow, text2 + Language.GetValue("Đã quét xong!"));
										break;
									}
									SetStatusAccount(indexRow, text2 + Language.GetValue("Cookie die!"));
								}
								catch (Exception ex)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Lô\u0303i không xa\u0301c đi\u0323nh!"));
									MCommon.Common.ExportError(chrome, ex);
								}
								break;
							}
						IL_1ac9:
							SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
							break;
						end_IL_0234:
							break;
					}
					break;
				}
			}
			lock (lock_FinishProxy)
			{
				switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
				{
					case 7:
						tinsoftProxy?.DecrementDangSuDung();
						break;
					case 8:
						xproxyProxy?.DecrementDangSuDung();
						break;
					case 10:
						tMProxy?.DecrementDangSuDung();
						break;
					case 11:
						proxyWeb?.DecrementDangSuDung();
						break;
					case 12:
						shopLike?.DecrementDangSuDung();
						break;
					case 9:
						break;
				}
			}
		}

		private void giảiCP282ToolStripMenuItem_Click(object sender, EventArgs e)
		{
			if (CountChooseRowInDatagridview() == 0)
			{
				MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lòng chọn tài khoản cần giải checkpoint!"), 3);
				return;
			}
			MCommon.Common.ShowForm(new fCheckPoint());
			if (!fCheckPoint.isOK)
			{
				return;
			}
			JSON_Settings jSON_Settings = new JSON_Settings("configCheckpoint");
			if (jSON_Settings.GetValueBool("ckbImage"))
			{
				string value = jSON_Settings.GetValue("txtImage");
				if (value == "")
				{
					MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lo\u0300ng chọn đường dẫn folder chứa ảnh"), 2);
					return;
				}
				if (Directory.GetFiles(value).Length == 0)
				{
					MessageBoxHelper.ShowMessageBox(Language.GetValue("Vui lo\u0300ng thêm a\u0309nh!"), 2);
					return;
				}
				lstPathImage = Directory.GetFiles(value).ToList();
			}
			GiaiCheckPoint282();
		}

		private void GiaiCheckPoint282()
		{
			//Discarded unreachable code: IL_0aaa, IL_0ae6
			isCountCheckAccountWhenChayTuongTac = true;
			try
			{
				LoadSetting();
				string profilePath = ConfigHelper.GetPathProfile();
				int maxThread = setting_general.GetValueInt("nudInteractThread", 3);
				List<int> lstPossition = new List<int>();
				for (int i = 0; i < maxThread; i++)
				{
					lstPossition.Add(0);
				}
				switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
				{
					case 7:
						{
							listApiTinsoft = GetListKeyTinsoft();
							if (listApiTinsoft.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy Tinsoft không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listTinsoft = new List<TinsoftProxy>();
							for (int m = 0; m < listApiTinsoft.Count; m++)
							{
								TinsoftProxy item4 = new TinsoftProxy(listApiTinsoft[m], setting_general.GetValueInt("nudLuongPerIPTinsoft"), setting_general.GetValueInt("cbbLocationTinsoft"));
								listTinsoft.Add(item4);
							}
							if (listApiTinsoft.Count * setting_general.GetValueInt("nudLuongPerIPTinsoft") < maxThread)
							{
								maxThread = listApiTinsoft.Count * setting_general.GetValueInt("nudLuongPerIPTinsoft");
							}
							break;
						}
					case 8:
						{
							listProxyXproxy = setting_general.GetValueList("txtListProxy");
							if (listProxyXproxy.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("XProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listxProxy = new List<XproxyProxy>();
							for (int n = 0; n < listProxyXproxy.Count; n++)
							{
								XproxyProxy item5 = new XproxyProxy(setting_general.GetValue("txtServiceURLXProxy"), listProxyXproxy[n], setting_general.GetValueInt("typeProxy"), setting_general.GetValueInt("nudLuongPerIPXProxy"));
								listxProxy.Add(item5);
							}
							if (listProxyXproxy.Count * setting_general.GetValueInt("nudLuongPerIPXProxy") < maxThread)
							{
								maxThread = listProxyXproxy.Count * setting_general.GetValueInt("nudLuongPerIPXProxy");
							}
							break;
						}
					case 10:
						{
							listProxyTMProxy = setting_general.GetValueList("txtApiKeyTMProxy");
							if (listProxyTMProxy.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("TMProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listTMProxy = new List<TMProxy>();
							for (int k = 0; k < listProxyTMProxy.Count; k++)
							{
								TMProxy item2 = new TMProxy(listProxyTMProxy[k], 0, setting_general.GetValueInt("nudLuongPerIPTMProxy"));
								listTMProxy.Add(item2);
							}
							if (listProxyTMProxy.Count * setting_general.GetValueInt("nudLuongPerIPTMProxy") < maxThread)
							{
								maxThread = listProxyTMProxy.Count * setting_general.GetValueInt("nudLuongPerIPTMProxy");
							}
							break;
						}
					case 11:
						{
							listProxyProxyv6 = setting_general.GetValueList("txtListProxyv6");
							if (listProxyProxyv6.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("Proxy không đủ, vui lòng cấu hình lại!"), 2);
								return;
							}
							listProxyWeb = new List<ProxyWeb>();
							for (int l = 0; l < listProxyProxyv6.Count; l++)
							{
								if (0 == 0)
								{
									ProxyWeb item3 = new ProxyWeb(setting_general.GetValue("txtApiProxyv6"), listProxyProxyv6[l], 0, setting_general.GetValueInt("nudLuongPerIPProxyv6"));
									listProxyWeb.Add(item3);
								}
							}
							if (listProxyProxyv6.Count * setting_general.GetValueInt("nudLuongPerIPProxyv6") < maxThread)
							{
								maxThread = listProxyProxyv6.Count * setting_general.GetValueInt("nudLuongPerIPProxyv6");
							}
							break;
						}
					case 12:
						{
							listProxyShopLike = setting_general.GetValueList("txtApiShopLike");
							if (listProxyShopLike.Count == 0)
							{
								MessageBoxHelper.ShowMessageBox(Language.GetValue("TMProxy không đủ, vui lòng mua thêm!"), 2);
								return;
							}
							listShopLike = new List<ShopLike>();
							for (int j = 0; j < listProxyShopLike.Count; j++)
							{
								ShopLike item = new ShopLike(listProxyShopLike[j], 0, setting_general.GetValueInt("nudLuongPerIPShopLike"));
								listShopLike.Add(item);
							}
							if (listProxyShopLike.Count * setting_general.GetValueInt("nudLuongPerIPShopLike") < maxThread)
							{
								maxThread = listProxyShopLike.Count * setting_general.GetValueInt("nudLuongPerIPShopLike");
							}
							break;
						}
				}
				cControl("start");
				isStop = false;
				int curChangeIp = 0;
				bool isChangeIPSuccess = false;
				lstThread = new List<Thread>();
				new Thread((ThreadStart)delegate
				{
					try
					{
						if (isStop)
						{
							cControl("stop");
							return;
						}
						int num = 0;
						while (true)
						{
							if (num < dtgvAcc.Rows.Count && !isStop)
							{
								if (!Convert.ToBoolean(dtgvAcc.Rows[num].Cells["cChose"].Value))
								{
									num++;
									goto IL_042a;
								}
								if (lstThread.Count < maxThread)
								{
									if (!isStop)
									{
										int row = num++;
										if (row != 0)
										{
											MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayOpenChrome", 1));
										}
										Thread thread = new Thread((ThreadStart)delegate
										{
											try
											{
												int indexOfPossitionApp = MCommon.Common.GetIndexOfPossitionApp(ref lstPossition);
												GiaiCheckPoint282OneThread(row, indexOfPossitionApp, profilePath);
												MCommon.Common.FillIndexPossition(ref lstPossition, indexOfPossitionApp);
												SetCellAccount(row, "cChose", false);
											}
											catch (Exception ex3)
											{
												MCommon.Common.ExportError(null, ex3);
											}
										});
										lstThread.Add(thread);
										thread.Name = row.ToString();
										thread.Start();
										goto IL_042a;
									}
								}
								else if (!isStop)
								{
									if (setting_general.GetValueInt("ip_iTypeChangeIp") != 0 && setting_general.GetValueInt("ip_iTypeChangeIp") != 7 && setting_general.GetValueInt("ip_iTypeChangeIp") != 8 && setting_general.GetValueInt("ip_iTypeChangeIp") != 9 && setting_general.GetValueInt("ip_iTypeChangeIp") != 10 && setting_general.GetValueInt("ip_iTypeChangeIp") != 11 && setting_general.GetValueInt("ip_iTypeChangeIp") != 12)
									{
										for (int num2 = 0; num2 < lstThread.Count; num2++)
										{
											lstThread[num2].Join();
											lstThread.RemoveAt(num2--);
										}
										if (isStop)
										{
											goto IL_045f;
										}
										Interlocked.Increment(ref curChangeIp);
										if (curChangeIp >= setting_general.GetValueInt("ip_nudChangeIpCount", 1))
										{
											for (int num3 = 0; num3 < 3; num3++)
											{
												isChangeIPSuccess = MCommon.Common.ChangeIP(setting_general.GetValueInt("ip_iTypeChangeIp"), setting_general.GetValueInt("typeDcom"), setting_general.GetValue("ip_txtProfileNameDcom"), setting_general.GetValue("txtUrlHilink"), setting_general.GetValueInt("ip_cbbHostpot"), setting_general.GetValue("ip_txtNordVPN"));
												if (isChangeIPSuccess)
												{
													break;
												}
											}
											if (!isChangeIPSuccess)
											{
												MessageBoxHelper.ShowMessageBox(Language.GetValue("Không thê\u0309 đô\u0309i ip!"), 2);
												break;
											}
											curChangeIp = 0;
										}
									}
									else
									{
										for (int num4 = 0; num4 < lstThread.Count; num4++)
										{
											if (!lstThread[num4].IsAlive)
											{
												lstThread.RemoveAt(num4--);
											}
										}
									}
									goto IL_042a;
								}
							}
							goto IL_045f;
						IL_042a:
							if (!isStop)
							{
								continue;
							}
							goto IL_045f;
						IL_045f:
							for (int num5 = 0; num5 < lstThread.Count; num5++)
							{
								lstThread[num5].Join();
							}
							break;
						}
					}
					catch (Exception ex2)
					{
						MCommon.Common.ExportError(null, ex2);
					}
					cControl("stop");
					isCountCheckAccountWhenChayTuongTac = false;
				}).Start();
			}
			catch (Exception ex)
			{
				MCommon.Common.ExportError(null, ex);
				isCountCheckAccountWhenChayTuongTac = false;
			}
		}

		private void GiaiCheckPoint282OneThread(int indexRow, int indexPos, string profilePath)
		{
			//Discarded unreachable code: IL_03b4, IL_03c8, IL_06bd, IL_06d2, IL_07d2, IL_07e6, IL_0b89, IL_0b9e, IL_0d51, IL_0d65, IL_105a, IL_106f, IL_1159, IL_116d, IL_14ec, IL_1501, IL_15eb, IL_15ff, IL_18f4, IL_1909, IL_1f03, IL_1f18, IL_3ff3, IL_4001, IL_415a, IL_41b9, IL_41cd, IL_41da, IL_42e5, IL_42fa
			string text = "";
			Chrome chrome = null;
			int num = 0;
			bool flag = false;
			string text2 = "";
			int typeProxy = 0;
			string text3 = "";
			TinsoftProxy tinsoftProxy = null;
			XproxyProxy xproxyProxy = null;
			TMProxy tMProxy = null;
			ProxyWeb proxyWeb = null;
			ShopLike shopLike = null;
			string text4 = GetCellAccount(indexRow, "cUid");
			string cellAccount = GetCellAccount(indexRow, "cId");
			string cellAccount2 = GetCellAccount(indexRow, "cEmail");
			string cellAccount3 = GetCellAccount(indexRow, "cPassMail");
			string cellAccount4 = GetCellAccount(indexRow, "cFa2");
			string cellAccount5 = GetCellAccount(indexRow, "cPassword");
			string cellAccount6 = GetCellAccount(indexRow, "cCookies");
			string cellAccount7 = GetCellAccount(indexRow, "cToken");
			string text5 = GetCellAccount(indexRow, "cUseragent");
			if (text4 == "")
			{
				text4 = Regex.Match(cellAccount6, "c_user=(.*?);").Groups[1].Value;
			}
			if (isStop)
			{
				SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
			}
			else
			{
				while (true)
				{
					switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
					{
						case 7:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy proxy Tinsoft..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									tinsoftProxy = null;
									while (!isStop)
									{
										foreach (TinsoftProxy item in listTinsoft)
										{
											if (tinsoftProxy == null || item.daSuDung < tinsoftProxy.daSuDung)
											{
												tinsoftProxy = item;
											}
										}
										if (tinsoftProxy.daSuDung != tinsoftProxy.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (tinsoftProxy.daSuDung > 0 || tinsoftProxy.ChangeProxy())
									{
										text = tinsoftProxy.proxy;
										if (text == "")
										{
											text = tinsoftProxy.GetProxy();
										}
										tinsoftProxy.dangSuDung++;
										tinsoftProxy.daSuDung++;
										break;
									}
									bool flag11 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								bool flag12 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									text3 = MCommon.Common.CheckProxy(text, 0);
									if (text3 == "")
									{
										flag12 = false;
									}
								}
								if (!flag12)
								{
									tinsoftProxy.dangSuDung--;
									tinsoftProxy.daSuDung--;
									continue;
								}
								goto default;
							}
						case 8:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy Proxy..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									xproxyProxy = null;
									while (!isStop)
									{
										foreach (XproxyProxy item2 in listxProxy)
										{
											if (xproxyProxy == null || (item2.isProxyLive && item2.daSuDung < xproxyProxy.daSuDung))
											{
												xproxyProxy = item2;
											}
										}
										if (xproxyProxy.daSuDung != xproxyProxy.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (xproxyProxy.isProxyLive && (xproxyProxy.daSuDung > 0 || xproxyProxy.ChangeProxy()))
									{
										text = xproxyProxy.proxy;
										typeProxy = xproxyProxy.typeProxy;
										xproxyProxy.dangSuDung++;
										xproxyProxy.daSuDung++;
										break;
									}
									xproxyProxy.isProxyLive = false;
									bool flag8 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								bool flag9 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									int num3 = 0;
									while (true)
									{
										if (num3 >= 30)
										{
											goto IL_0b18;
										}
										MCommon.Common.DelayTime(1.0);
										text3 = MCommon.Common.CheckProxy(text, typeProxy);
										if (text3 != "")
										{
											goto IL_0b18;
										}
										if (isStop)
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
											goto end_IL_02ae;
										}
										num3++;
										continue;
									IL_0b18:
										if (text3 == "")
										{
											flag9 = false;
										}
										break;
									}
								}
								if (!flag9)
								{
									xproxyProxy.dangSuDung--;
									xproxyProxy.daSuDung--;
									continue;
								}
								goto default;
							}
						case 9:
							text = GetCellAccount(indexRow, "cProxy");
							typeProxy = (text.EndsWith("*1") ? 1 : 0);
							if (text.EndsWith("*0") || text.EndsWith("*1"))
							{
								text = text.Substring(0, text.Length - 2);
							}
							goto default;
						case 10:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy TMProxy..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									tMProxy = null;
									while (!isStop)
									{
										foreach (TMProxy item3 in listTMProxy)
										{
											if (tMProxy == null || item3.daSuDung < tMProxy.daSuDung)
											{
												tMProxy = item3;
											}
										}
										if (tMProxy.daSuDung != tMProxy.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (tMProxy.daSuDung > 0 || tMProxy.ChangeProxy())
									{
										text = tMProxy.proxy;
										if (text == "")
										{
											text = tMProxy.GetProxy();
										}
										tMProxy.dangSuDung++;
										tMProxy.daSuDung++;
										break;
									}
									bool flag6 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								bool flag7 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									text3 = MCommon.Common.CheckProxy(text, 0);
									if (text3 == "")
									{
										flag7 = false;
									}
								}
								if (!flag7)
								{
									tMProxy.dangSuDung--;
									tMProxy.daSuDung--;
									continue;
								}
								goto default;
							}
						case 11:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy Proxyv6..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									proxyWeb = null;
									while (!isStop)
									{
										foreach (ProxyWeb item4 in listProxyWeb)
										{
											if (proxyWeb == null || item4.daSuDung < proxyWeb.daSuDung)
											{
												proxyWeb = item4;
											}
										}
										if (proxyWeb.daSuDung != proxyWeb.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (proxyWeb.daSuDung > 0 || proxyWeb.ChangeProxy())
									{
										text = proxyWeb.proxy;
										typeProxy = proxyWeb.typeProxy;
										proxyWeb.dangSuDung++;
										proxyWeb.daSuDung++;
										break;
									}
									bool flag4 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								bool flag5 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									int num2 = 0;
									while (true)
									{
										if (num2 >= 30)
										{
											goto IL_147b;
										}
										MCommon.Common.DelayTime(1.0);
										text3 = MCommon.Common.CheckProxy(text, typeProxy);
										if (text3 != "")
										{
											goto IL_147b;
										}
										if (isStop)
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
											goto end_IL_02ae;
										}
										num2++;
										continue;
									IL_147b:
										if (text3 == "")
										{
											flag5 = false;
										}
										break;
									}
								}
								if (!flag5)
								{
									proxyWeb.dangSuDung--;
									proxyWeb.daSuDung--;
									continue;
								}
								goto default;
							}
						case 12:
							SetStatusAccount(indexRow, Language.GetValue("Đang lấy Proxy ShopLike ..."));
							lock (lock_StartProxy)
							{
								while (!isStop)
								{
									shopLike = null;
									while (!isStop)
									{
										foreach (ShopLike item5 in listShopLike)
										{
											if (shopLike == null || item5.daSuDung < shopLike.daSuDung)
											{
												shopLike = item5;
											}
										}
										if (shopLike.daSuDung != shopLike.limit_theads_use)
										{
											break;
										}
									}
									if (isStop)
									{
										break;
									}
									if (shopLike.daSuDung > 0 || shopLike.ChangeProxy())
									{
										text = shopLike.proxy;
										if (text == "")
										{
											text = shopLike.GetProxy();
										}
										shopLike.dangSuDung++;
										shopLike.daSuDung++;
										break;
									}
									bool flag2 = true;
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								bool flag3 = true;
								if (setting_general.GetValueInt("nudDelayCheckIP") > 0)
								{
									SetStatusAccount(indexRow, text2 + "Delay check IP...");
									MCommon.Common.DelayTime(setting_general.GetValueInt("nudDelayCheckIP"));
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									text2 = "(IP: " + text.Split(':')[0] + ") ";
									SetStatusAccount(indexRow, text2 + "Check IP...");
									text3 = MCommon.Common.CheckProxy(text, 0);
									if (text3 == "")
									{
										flag3 = false;
									}
								}
								if (!flag3)
								{
									shopLike.dangSuDung--;
									shopLike.daSuDung--;
									continue;
								}
								goto default;
							}
						default:
							{
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								if (!setting_general.GetValueBool("ckbKhongCheckIP"))
								{
									if (setting_general.GetValueInt("ip_iTypeChangeIp") != 7 && setting_general.GetValueInt("ip_iTypeChangeIp") != 8 && setting_general.GetValueInt("ip_iTypeChangeIp") != 10)
									{
										if (text != "")
										{
											text2 = "(IP: " + text.Split(':')[0] + ") ";
										}
										SetStatusAccount(indexRow, text2 + "Check IP...");
										bool flag10 = false;
										int num4 = 0;
										while (num4 < 30)
										{
											MCommon.Common.DelayTime(1.0);
											text3 = MCommon.Common.CheckProxy(text, typeProxy);
											if (text3 != "")
											{
												flag10 = true;
												break;
											}
											if (!isStop)
											{
												num4++;
												continue;
											}
											goto IL_1b63;
										}
										if (!flag10)
										{
											if (text != "")
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Không thể kết nối proxy!"));
											}
											else
											{
												SetStatusAccount(indexRow, text2 + Language.GetValue("Không có kết nối Internet!"));
											}
											break;
										}
									}
									text2 = "(IP: " + text3 + ") ";
								}
								if (isStop)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
									break;
								}
								try
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Chờ đến lượt..."));
									lock (lock_checkDelayChrome)
									{
										if (checkDelayChrome > 0)
										{
											int num5 = rd.Next(setting_general.GetValueInt("nudDelayOpenChromeFrom", 1), setting_general.GetValueInt("nudDelayOpenChromeTo", 1) + 1);
											if (num5 > 0)
											{
												int tickCount = Environment.TickCount;
												while ((Environment.TickCount - tickCount) / 1000 - num5 < 0)
												{
													SetStatusAccount(indexRow, text2 + Language.GetValue("Mở tri\u0300nh duyê\u0323t sau") + " {time}s...".Replace("{time}", (num5 - (Environment.TickCount - tickCount) / 1000).ToString()));
													MCommon.Common.DelayTime(0.5);
													if (isStop)
													{
														SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
														goto end_IL_02ae;
													}
												}
											}
										}
										else
										{
											checkDelayChrome++;
										}
									}
									SetStatusAccount(indexRow, text2 + Language.GetValue("Đang mơ\u0309 tri\u0300nh duyê\u0323t..."));
									if (text5 == "")
									{
										text5 = Base.useragentDefault;
									}
									string text6 = "";
									if (profilePath != "" && text4 != "")
									{
										text6 = profilePath + "\\" + text4;
										if (!setting_InteractGeneral.GetValueBool("ckbCreateProfile") && !Directory.Exists(text6))
										{
											text6 = "";
										}
									}
									Point pointFromIndexPosition = MCommon.Common.GetPointFromIndexPosition(indexPos, 5, 2);
									Point sizeChrome = MCommon.Common.GetSizeChrome(5, 2);
									chrome = new Chrome
									{
										DisableImage = !Convert.ToBoolean((setting_general.GetValue("ckbShowImageInteract") == "") ? "false" : setting_general.GetValue("ckbShowImageInteract")),
										UserAgent = text5,
										ProfilePath = text6,
										Size = sizeChrome,
										Position = pointFromIndexPosition,
										TimeWaitForSearchingElement = 3,
										TimeWaitForLoadingPage = 120,
										Proxy = text,
										TypeProxy = typeProxy,
										IsUsePortable = setting_general.GetValueBool("ckbUsePortable"),
										PathToPortableZip = setting_general.GetValue("txtPathToPortableZip")
									};
									if (isStop)
									{
										SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
										break;
									}
									if (setting_general.GetValueInt("typeBrowser") != 0)
									{
										chrome.LinkToOtherBrowser = setting_general.GetValue("txtLinkToOtherBrowser");
									}
									int num6 = 0;
									while (true)
									{
										if (!chrome.Open())
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Lỗi mở trình duyệt!"));
											break;
										}
										chrome.ExecuteScript("document.title=\"proxyauth=" + text + "\"");
										if (!setting_general.GetValueBool("ckbKhongCheckIP") && text.Split(':').Length > 1)
										{
											chrome.GotoURL("https://api.myip.com/");
											chrome.DelayTime(1.0);
											string pageSource = chrome.GetPageSource();
											if (!pageSource.Contains("ip"))
											{
												chrome.Close();
												num6++;
												if (num6 < 3)
												{
													continue;
												}
												SetStatusAccount(indexRow, text2 + Language.GetValue("Lỗi kết nối proxy!"));
												break;
											}
										}
										string text7 = "https://m.facebook.com/";
										if (text6.Trim() != "")
										{
											num = CommonChrome.CheckLiveCookie(chrome, text7);
											switch (num)
											{
												case 1:
													flag = true;
													break;
												case -2:
													chrome.Status = StatusChromeAccount.ChromeClosed;
													goto end_IL_1ce3;
												case -3:
													chrome.Status = StatusChromeAccount.NoInternet;
													goto end_IL_1ce3;
												case 2:
													chrome.Status = StatusChromeAccount.Checkpoint;
													SetInfoAccount(cellAccount, indexRow, Language.GetValue("Checkpoint"));
													break;
											}
										}
										if (!flag)
										{
											int valueInt = setting_Interact.GetValueInt("typeLogin");
											switch (valueInt)
											{
												case 0:
													SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng nhâ\u0323p bă\u0300ng uid|pass..."));
													break;
												case 1:
													SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng nhâ\u0323p bă\u0300ng email|pass..."));
													break;
												case 2:
													SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng nhâ\u0323p bă\u0300ng cookie..."));
													break;
											}
											string text8 = LoginFacebook(chrome, valueInt, text7, text4, cellAccount2, cellAccount5, cellAccount4, cellAccount6, setting_general.GetValueInt("tocDoGoVanBan"), setting_InteractGeneral.GetValueBool("ckbDontSaveBrowser"));
											switch (text8)
											{
												case "-3":
													chrome.Status = StatusChromeAccount.NoInternet;
													goto end_IL_1ce3;
												case "-2":
													chrome.Status = StatusChromeAccount.ChromeClosed;
													break;
												case "0":
													SetStatusAccount(indexRow, text2 + Language.GetValue("Đăng nhập thất bại!"));
													break;
												case "1":
													flag = true;
													break;
												case "2":
													chrome.Status = StatusChromeAccount.Checkpoint;
													SetInfoAccount(cellAccount, indexRow, Language.GetValue("Checkpoint"));
													num = 2;
													break;
												case "3":
													SetStatusAccount(indexRow, text2 + Language.GetValue("Không có 2fa!"));
													break;
												case "4":
													SetStatusAccount(indexRow, text2 + Language.GetValue("Tài khoản không đúng!"));
													break;
												case "5":
													SetStatusAccount(indexRow, text2 + Language.GetValue("Mật khẩu không đúng!"));
													SetInfoAccount(cellAccount, indexRow, "Changed pass");
													break;
												case "6":
													SetStatusAccount(indexRow, text2 + Language.GetValue("Mã 2fa không đúng!"));
													break;
												default:
													SetStatusAccount(indexRow, text2 + text8);
													break;
											}
										}
										if (num != 2)
										{
											break;
										}
										string text9 = "";
										int num7 = 0;
										JSON_Settings jSON_Settings = new JSON_Settings("configCheckpoint");
										chrome.GotoURLIfNotExist("https://m.facebook.com");
										chrome.DelayTime(3.0);
										if (chrome.GetURL().StartsWith("https://m.facebook.com/si/actor_experience/actor_gateway"))
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Tài khoản bị spam!"));
											break;
										}
										if (chrome.CheckExistElement("[href*=\"/save_locale/?loc=vi_VN\"]", 5.0) == 1)
										{
											chrome.ExecuteScript("document.querySelector('[href*=\"/save_locale/?loc=vi_VN\"]').click()");
											chrome.DelayTime(3.0);
										}
										if (jSON_Settings.GetValueBool("ckbCaptcha"))
										{
											while (true)
											{
												switch (chrome.CheckExistElements(5.0, "[name=\"action_proceed\"]", "#captcha", "button[type=\"submit\"]"))
												{
													case 1:
														goto IL_2d01;
													case 2:
														{
															SetStatusAccount(indexRow, text2 + Language.GetValue("Đang giải captcha..."));
															int valueInt2 = jSON_Settings.GetValueInt("typeCaptcha");
															string text10 = "";
															switch (valueInt2)
															{
																case 0:
																	text10 = jSON_Settings.GetValue("txt2Captcha");
																	break;
																case 1:
																	text10 = jSON_Settings.GetValue("txtGuru");
																	break;
																default:
																	text10 = jSON_Settings.GetValue("txtAnyCaptcha");
																	break;
															}
															while (true)
															{
																string text11 = "";
																text11 = ((valueInt2 != 2) ? TwoCaptcha.ResolveRecaptcha(valueInt2, text10, "6Lc9qjcUAAAAADTnJq5kJMjN9aD1lxpRLMnCS2TR", "https://fbsbx.com/captcha/recaptcha/iframe/?referer=https://m.facebook.com") : GetRecaptchaResponse(text10, "https://fbsbx.com/captcha/recaptcha/iframe/?referer=https://m.facebook.com", "6Lc9qjcUAAAAADTnJq5kJMjN9aD1lxpRLMnCS2TR"));
																if (!(text11 != ""))
																{
																	break;
																}
																chrome.ExecuteScript("document.querySelector('#captcha_response').value=\"" + text11 + "\"");
																chrome.DelayTime(1.0);
																chrome.Click(2, "action_submit_bot_captcha_response");
																chrome.DelayTime(1.0);
																int num8 = chrome.CheckExistElements(10.0, "[name=\"contact_point\"]", "#mobile_image_data", "#captcha_response");
																if (num8 == 3)
																{
																	continue;
																}
																if (num8 != 0)
																{
																	SetStatusAccount(indexRow, text2 + Language.GetValue("Giải captcha xong!"));
																	CommonSQL.UpdateFieldToAccount(cellAccount, "ghiChu", "Giải captcha xong!");
																}
																break;
															}
															break;
														}
												}
												break;
											IL_2d01:
												chrome.Click(2, "action_proceed");
												chrome.DelayTime(1.0);
											}
										}
										if (jSON_Settings.GetValueBool("ckbPhone"))
										{
											int num9 = 0;
											while (true)
											{
												switch (chrome.CheckExistElements(5.0, "[name=\"code\"]", "[name=\"contact_point\"]"))
												{
													case 1:
														chrome.Click(2, "action_unset_contact_point");
														chrome.DelayTime(5.0);
														continue;
													case 2:
														{
															SetStatusAccount(indexRow, text2 + Language.GetValue("Đang lấy sđt..."));
															string text12 = "";
															string id_order = "";
															string text13 = "";
															num9++;
															int valueInt3 = jSON_Settings.GetValueInt("typeSim");
															switch (valueInt3)
															{
																case 0:
																	text12 = fchange.GetPhoneTextNow(jSON_Settings.GetValue("txtTextNow"));
																	break;
																case 1:
																	text12 = fchange.GetPhoneOtpSim(jSON_Settings.GetValue("txtOtpSim"));
																	break;
																case 2:
																	text12 = fchange.GetPhoneSimCode(jSON_Settings.GetValue("txtSimCode"));
																	break;
																case 3:
																	text12 = fchange.GetPhoneOtpmmo(jSON_Settings.GetValue("txtOtpmmo"));
																	break;
																default:
																	text12 = fchange.GetPhonePrimeOtp(jSON_Settings.GetValue("txtPrimeOtp"));
																	break;
															}
															if (!(text12 != "|"))
															{
																break;
															}
															if (valueInt3 != 3)
															{
																id_order = text12.Split('|')[0];
																text13 = text12.Split('|')[1];
															}
															else
															{
																text13 = text12;
															}
															if (valueInt3 == 0 || valueInt3 == 3 || valueInt3 == 4)
															{
																chrome.Select(2, "country_code", "US");
															}
															else
															{
																chrome.Select(2, "country_code", "VN");
															}
															chrome.DelayTime(1.0);
															chrome.SendKeys(2, "contact_point", text13);
															chrome.DelayTime(1.0);
															chrome.Click(2, "action_set_contact_point");
															chrome.DelayTime(5.0);
															switch (chrome.CheckExistElements(10.0, "[name=\"code\"]", "[name=\"contact_point\"]"))
															{
																case 2:
																	continue;
																case 1:
																	{
																		SetStatusAccount(indexRow, text2 + Language.GetValue("Đang lấy otp..."));
																		string text14 = "";
																		switch (valueInt3)
																		{
																			case 0:
																				text14 = fchange.GetOTPTextNow(jSON_Settings.GetValue("txtTextNow"), id_order, jSON_Settings.GetValueInt("nudTime"));
																				break;
																			case 1:
																				text14 = fchange.GetOTPOtpSim(jSON_Settings.GetValue("txtOtpSim"), id_order, jSON_Settings.GetValueInt("nudTime"));
																				break;
																			case 2:
																				text14 = fchange.GetOTPSimCode(jSON_Settings.GetValue("txtSimCode"), id_order, jSON_Settings.GetValueInt("nudTime"));
																				break;
																			case 3:
																				text14 = fchange.GetOtpOtpmmo(jSON_Settings.GetValue("txtOtpmmo"), text13, jSON_Settings.GetValueInt("nudTime"));
																				break;
																			default:
																				text14 = fchange.GetOtpPrimeOtp(jSON_Settings.GetValue("txtPrimeOtp"), id_order, jSON_Settings.GetValueInt("nudTime"));
																				break;
																		}
																		if (text14 != "")
																		{
																			chrome.SendKeys(2, "code", text14);
																			chrome.DelayTime(1.0);
																			chrome.Click(2, "action_submit_code", 1);
																			chrome.DelayTime(1.0);
																			switch (chrome.CheckExistElements(15.0, "#mobile_image_data", "[name=\"code\"]"))
																			{
																				case 1:
																					SetStatusAccount(indexRow, text2 + Language.GetValue("Xác minh sđt xong!"));
																					CommonSQL.UpdateFieldToAccount(cellAccount, "ghiChu", "Xác minh sđt xong!");
																					break;
																				case 2:
																					chrome.Click(2, "action_unset_contact_point");
																					chrome.DelayTime(5.0);
																					continue;
																			}
																			break;
																		}
																		if (num9 <= 3)
																		{
																			chrome.Click(2, "action_unset_contact_point");
																			chrome.DelayTime(5.0);
																			continue;
																		}
																		SetStatusAccount(indexRow, text2 + Language.GetValue("Tạch!"));
																		CommonSQL.UpdateFieldToAccount(cellAccount, "ghiChu", "Tạch!");
																		goto end_IL_1ce3;
																	}
															}
															break;
														}
												}
												break;
											}
										}
										if (jSON_Settings.GetValueBool("ckbImage") && chrome.CheckExistElement("#mobile_image_data", 30.0) == 1)
										{
											string text15 = "";
											SetStatusAccount(indexRow, text2 + Language.GetValue("Đang gửi ảnh..."));
											if (chrome.CheckExistElement("[type=\"file\"]", 15.0) == 1)
											{
												if (!lstPathImage.Contains(text4 + ".png") && !lstPathImage.Contains(text4 + ".PNG"))
												{
													text15 = lstPathImage[rd.Next(0, lstPathImage.Count)];
													lstPathImage.Remove(text15);
												}
												else
												{
													text15 = jSON_Settings.GetValue("txtImage") + "\\" + text4 + ".png";
												}
												chrome.SendKeys(4, "[type=\"file\"]", text15);
												chrome.DelayTime(1.0);
												chrome.Click(2, "action_upload_image");
												chrome.DelayTime(1.0);
												if (chrome.CheckExistElement("[type=\"file\"]", 5.0) == 1)
												{
													SetStatusAccount(indexRow, text2 + Language.GetValue("Tạch!"));
													CommonSQL.UpdateFieldToAccount(cellAccount, "ghiChu", "Tạch!");
													break;
												}
												int num10 = 0;
												while (!chrome.GetPageSource().Contains("Chúng tôi đã nhận được thông tin của bạn"))
												{
													chrome.DelayTime(1.0);
													num10++;
													if (num10 == 30)
													{
														break;
													}
												}
												try
												{
													File.Delete(text15);
												}
												catch (Exception)
												{
												}
												SetStatusAccount(indexRow, text2 + Language.GetValue("Up ảnh xong!"));
												text9 = "Up ảnh xong!";
												CommonSQL.UpdateFieldToAccount(cellAccount, "ghiChu", "Up ảnh xong!");
											}
										}
										if (text9 == "")
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Dạng cp khác!"));
											CommonSQL.UpdateFieldToAccount(cellAccount, "ghiChu", "Dạng cp khác!");
										}
										else
										{
											SetStatusAccount(indexRow, text2 + Language.GetValue("Xong! - " + text9));
										}
										break;
									}
								end_IL_1ce3:;
								}
								catch (Exception ex2)
								{
									SetStatusAccount(indexRow, text2 + Language.GetValue("Lô\u0303i không xa\u0301c đi\u0323nh!"));
									MCommon.Common.ExportError(chrome, ex2);
								}
								break;
							}
						IL_1b63:
							SetStatusAccount(indexRow, text2 + Language.GetValue("Đã dừng!"));
							break;
						end_IL_02ae:
							break;
					}
					break;
				}
			}
			try
			{
				chrome.Close();
			}
			catch
			{
			}
			lock (lock_FinishProxy)
			{
				switch (setting_general.GetValueInt("ip_iTypeChangeIp"))
				{
					case 7:
						tinsoftProxy?.DecrementDangSuDung();
						break;
					case 8:
						xproxyProxy?.DecrementDangSuDung();
						break;
					case 10:
						tMProxy?.DecrementDangSuDung();
						break;
					case 11:
						proxyWeb?.DecrementDangSuDung();
						break;
					case 12:
						shopLike?.DecrementDangSuDung();
						break;
					case 9:
						break;
				}
			}
		}

		public string GetRecaptchaResponse(string AntiKey, string Website, string SiteKey)
		{
			//Discarded unreachable code: IL_031f, IL_032c
			string result = "";
			try
			{
				xNet.HttpRequest httpRequest = new xNet.HttpRequest();
				httpRequest.KeepAlive = true;
				httpRequest.Cookies = new CookieDictionary();
				httpRequest.AddHeader(HttpHeader.Accept, "application/json, text/javascript, */*; q=0.01");
				httpRequest.AddHeader(HttpHeader.AcceptLanguage, "en-US,en;q=0.5");
				httpRequest.UserAgent = Http.ChromeUserAgent();
				string text = MCommon.Common.Base64Decode("ewogICAgImNsaWVudEtleSI6ICJ4eHh4eHh4eHgiLAogICAgInRhc2siOiB7CiAgICAgICAgInR5cGUiOiAiUmVjYXB0Y2hhVjJUYXNrIiwKICAgICAgICAid2Vic2l0ZVVSTCI6ICJ6enp6enp6enp6IiwKICAgICAgICAid2Vic2l0ZUtleSI6ICJ5eXl5eXl5eXkiCiAgICB9Cn0=");
				text = text.Replace("xxxxxxxxx", AntiKey);
				text = text.Replace("yyyyyyyyy", SiteKey);
				text = text.Replace("zzzzzzzzzz", Website);
				string text2 = httpRequest.Post("https://api.anycaptcha.com/createTask", text, "application/json").ToString();
				if (!text2.Contains("\"errorId\":0"))
				{
					return result;
				}
				string value = Regex.Match(text2, "taskId\":(.*?)}").Groups[1].Value;
				string text3 = MCommon.Common.Base64Decode("ewogICAgImNsaWVudEtleSI6Inl5eXl5eXl5eSIsCiAgICAidGFza0lkIjogeHh4Cn0=");
				text3 = text3.Replace("yyyyyyyyy", AntiKey);
				text3 = text3.Replace("xxx", value);
				Thread.Sleep(1000);
				for (int i = 0; i < 62; i++)
				{
					text2 = httpRequest.Post("https://api.anycaptcha.com/getTaskResult", text3, "application/json").ToString();
					if (text2.Contains("processing"))
					{
						Thread.Sleep(1000);
						if (i > 60)
						{
							Console.WriteLine("Time out!!!");
							return result;
						}
						continue;
					}
					break;
				}
				string value2 = Regex.Match(text2, "gRecaptchaResponse\":\"(.*?)\"").Groups[1].Value;
				result = value2;
			}
			catch
			{
			}
			return result;
		}

		protected override void Dispose(bool disposing)
		{
			if (disposing && components != null)
			{
				components.Dispose();
			}
			base.Dispose(disposing);
		}

		private void InitializeComponent()
		{
            this.components = new System.ComponentModel.Container();
            System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle1 = new System.Windows.Forms.DataGridViewCellStyle();
            System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle3 = new System.Windows.Forms.DataGridViewCellStyle();
            System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle2 = new System.Windows.Forms.DataGridViewCellStyle();
            this.dtgvAcc = new System.Windows.Forms.DataGridView();
            this.cChose = new System.Windows.Forms.DataGridViewCheckBoxColumn();
            this.cStt = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cId = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cUid = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cToken = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cCookies = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cEmail = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cPhone = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cName = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cFollow = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cFriend = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cGroup = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cBirthday = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cGender = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cPassword = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cMailRecovery = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cPassMail = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cBackup = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cFa2 = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cUseragent = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cProxy = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cDateCreateAcc = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cAvatar = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cProfile = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cThuMuc = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cInteractEnd = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cInfo = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cGhiChu = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.cStatus = new System.Windows.Forms.DataGridViewTextBoxColumn();
            this.ctmsAcc = new MetroFramework.Controls.MetroContextMenu(this.components);
            this.chọnLiveToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.tấtCảToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.liveToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.tinhTrangToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.trạngTháiToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.bỏChọnTấtCảToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.copyToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.uidToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.passToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.tokenToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.cookieToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.mailToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.fAToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.maBaoMât6SôToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.uidPassToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.uidPass2FaToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.mailPassMailToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.uidPassTokenCookieToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.uidPassTokenCookieMailPassMailToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.uidPassTokenCookieMailPassMail2faToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.useragentToolStripMenuItem1 = new System.Windows.Forms.ToolStripMenuItem();
            this.proxyToolStripMenuItem1 = new System.Windows.Forms.ToolStripMenuItem();
            this.đinhDangKhacToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.mởTrìnhDuyệtToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.mởLuônToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.càiĐặtCấuHìnhMởToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.xóaTàiKhoảnToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.checkCookieToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.kiểmTraWallToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.checkInfoUIDToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.kiểmTraTokenToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.kiểmTraCookieToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.checkAvatarToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.checkProfileToolStripMenuItem1 = new System.Windows.Forms.ToolStripMenuItem();
            this.checkBackupToolStripMenuItem1 = new System.Windows.Forms.ToolStripMenuItem();
            this.kiểmTraMailpassMailToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.checkProxyToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.câpNhâtThôngTinCaNhânToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.sưDungTokenTrungGianToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.sửDụngCookieTrungGianToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.cậpNhậtDữLiệuToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.cậpToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.mậtKhẩuToolStripMenuItem1 = new System.Windows.Forms.ToolStripMenuItem();
            this.tokenToolStripMenuItem2 = new System.Windows.Forms.ToolStripMenuItem();
            this.tựĐộngLấyToolStripMenuItem1 = new System.Windows.Forms.ToolStripMenuItem();
            this.tokenEAAAAZToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.tokenBussinessToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.nhậpDữLiệuToolStripMenuItem2 = new System.Windows.Forms.ToolStripMenuItem();
            this.cookieToolStripMenuItem3 = new System.Windows.Forms.ToolStripMenuItem();
            this.mailKhôiPhụcToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.passMailToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.mã2FAToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.useragentToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.proxyToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.ghiChuToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.ngàySinhToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.chuyểnThưMụcToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.chứcNăngToolStripMenuItem1 = new System.Windows.Forms.ToolStripMenuItem();
            this.locTrungToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.taoShortcutChromeToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.tảiXuốngAvatarToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.loginHotmailToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.loginYandexToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.toolStripMenuItem1 = new System.Windows.Forms.ToolStripMenuItem();
            this.loginGmailToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.lToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.mởFormQuảnLýTinNhắnToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.khôiPhụcMậtKhẩuToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.đổiPassHotmailToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.profileToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.tạoProfileToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.đăngNhâpBăngUidpassToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.đăngNhâpBăngCookieToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.checkProfileToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.xóaProfileToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.donDepProfileToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.xóaCacheToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.copyProfileToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.backupToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.backupCookieToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.taoFileHTMLToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.checkBackupToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.mởThưMụcBackupToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.mởFileHTMLToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.mởFolderBackupToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.backupToolStripMenuItem1 = new System.Windows.Forms.ToolStripMenuItem();
            this.htmlToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.fileTxtToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.thưMụcToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.xóaDữLiệuBackupToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.dọnDẹpBackupToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.giaiCheckpointToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.giảiCheckpintNgàySinhToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.gửiOTPVềMailGiaoDiệnMớiToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.gửiOTPVềMailMbasicbetaToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.giảiCP282ToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.tảiLạiDanhSáchToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.pnlHeader = new System.Windows.Forms.Panel();
            this.lblNotify = new System.Windows.Forms.LinkLabel();
            this.pictureBox1 = new System.Windows.Forms.PictureBox();
            this.button2 = new System.Windows.Forms.Button();
            this.button1 = new System.Windows.Forms.Button();
            this.btnMinimize = new System.Windows.Forms.Button();
            this.bunifuCustomLabel1 = new Bunifu.Framework.UI.BunifuCustomLabel();
            this.bunifuCards1 = new Bunifu.Framework.UI.BunifuCards();
            this.grQuanLyThuMuc = new System.Windows.Forms.GroupBox();
            this.btnLoadAcc = new MetroFramework.Controls.MetroButton();
            this.btnEditFile = new MetroFramework.Controls.MetroButton();
            this.btnDeleteFile = new MetroFramework.Controls.MetroButton();
            this.AddFileAccount = new MetroFramework.Controls.MetroButton();
            this.cbbTinhTrang = new MetroFramework.Controls.MetroComboBox();
            this.cbbThuMuc = new MetroFramework.Controls.MetroComboBox();
            this.label2 = new System.Windows.Forms.Label();
            this.label1 = new System.Windows.Forms.Label();
            this.button9 = new System.Windows.Forms.Button();
            this.grTimKiem = new System.Windows.Forms.GroupBox();
            this.BtnSearch = new MetroFramework.Controls.MetroButton();
            this.cbbSearch = new System.Windows.Forms.ComboBox();
            this.txbSearch = new WindowsFormsControlLibrary1.BunifuCustomTextbox();
            this.btnViewLivestream = new System.Windows.Forms.Button();
            this.btnShare = new System.Windows.Forms.Button();
            this.btnPost = new System.Windows.Forms.Button();
            this.plChucNang = new System.Windows.Forms.Panel();
            this.button8 = new System.Windows.Forms.Button();
            this.button4 = new System.Windows.Forms.Button();
            this.button7 = new System.Windows.Forms.Button();
            this.button6 = new System.Windows.Forms.Button();
            this.plTrangThai = new System.Windows.Forms.Panel();
            this.lblTrangThai = new System.Windows.Forms.Label();
            this.panel1 = new System.Windows.Forms.Panel();
            this.statusStrip1 = new System.Windows.Forms.StatusStrip();
            this.toolStripStatusLabel1 = new System.Windows.Forms.ToolStripStatusLabel();
            this.lblStatus = new System.Windows.Forms.ToolStripStatusLabel();
            this.toolStripStatusLabel3 = new System.Windows.Forms.ToolStripStatusLabel();
            this.lblKey = new System.Windows.Forms.ToolStripStatusLabel();
            this.toolStripStatusLabel8 = new System.Windows.Forms.ToolStripStatusLabel();
            this.txbUid = new System.Windows.Forms.ToolStripStatusLabel();
            this.lblUser = new System.Windows.Forms.ToolStripStatusLabel();
            this.toolStripStatusLabel9 = new System.Windows.Forms.ToolStripStatusLabel();
            this.toolStripStatusLabel10 = new System.Windows.Forms.ToolStripStatusLabel();
            this.lblDateExpried = new System.Windows.Forms.ToolStripStatusLabel();
            this.toolStripStatusLabel5 = new System.Windows.Forms.ToolStripStatusLabel();
            this.lblCountSelect = new System.Windows.Forms.ToolStripStatusLabel();
            this.toolStripStatusLabel7 = new System.Windows.Forms.ToolStripStatusLabel();
            this.lblCountTotal = new System.Windows.Forms.ToolStripStatusLabel();
            this.toolTip1 = new System.Windows.Forms.ToolTip(this.components);
            this.bunifuDragControl1 = new Bunifu.Framework.UI.BunifuDragControl(this.components);
            this.liênHệToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.menuStrip1 = new System.Windows.Forms.MenuStrip();
            this.hệThốngToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.càiĐặtToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.thoátToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.taiKhoanĐaXoaToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.tiệnÍchToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.checkLiveUidToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.checkProxyToolStripMenuItem1 = new System.Windows.Forms.ToolStripMenuItem();
            this.checkHotmailToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.lọcTrùngDữLiệuToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.xửLýChuỗiOnlineToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();
            this.bunifuDragControl2 = new Bunifu.Framework.UI.BunifuDragControl(this.components);
            this.timer1 = new System.Windows.Forms.Timer(this.components);
            this.btnRandomIndexRow = new MetroFramework.Controls.MetroButton();
            this.metroButton1 = new MetroFramework.Controls.MetroButton();
            this.btnPause = new System.Windows.Forms.Button();
            this.btnInteract = new System.Windows.Forms.Button();
            ((System.ComponentModel.ISupportInitialize)(this.dtgvAcc)).BeginInit();
            this.ctmsAcc.SuspendLayout();
            this.pnlHeader.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.pictureBox1)).BeginInit();
            this.bunifuCards1.SuspendLayout();
            this.grQuanLyThuMuc.SuspendLayout();
            this.grTimKiem.SuspendLayout();
            this.plChucNang.SuspendLayout();
            this.plTrangThai.SuspendLayout();
            this.panel1.SuspendLayout();
            this.statusStrip1.SuspendLayout();
            this.menuStrip1.SuspendLayout();
            this.SuspendLayout();
            // 
            // dtgvAcc
            // 
            this.dtgvAcc.AllowUserToAddRows = false;
            this.dtgvAcc.AllowUserToDeleteRows = false;
            this.dtgvAcc.AllowUserToResizeRows = false;
            this.dtgvAcc.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) 
            | System.Windows.Forms.AnchorStyles.Left) 
            | System.Windows.Forms.AnchorStyles.Right)));
            this.dtgvAcc.BackgroundColor = System.Drawing.SystemColors.ButtonHighlight;
            dataGridViewCellStyle1.Alignment = System.Windows.Forms.DataGridViewContentAlignment.MiddleLeft;
            dataGridViewCellStyle1.BackColor = System.Drawing.SystemColors.Control;
            dataGridViewCellStyle1.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            dataGridViewCellStyle1.ForeColor = System.Drawing.SystemColors.WindowText;
            dataGridViewCellStyle1.SelectionBackColor = System.Drawing.Color.Teal;
            dataGridViewCellStyle1.SelectionForeColor = System.Drawing.SystemColors.HighlightText;
            dataGridViewCellStyle1.WrapMode = System.Windows.Forms.DataGridViewTriState.True;
            this.dtgvAcc.ColumnHeadersDefaultCellStyle = dataGridViewCellStyle1;
            this.dtgvAcc.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;
            this.dtgvAcc.Columns.AddRange(new System.Windows.Forms.DataGridViewColumn[] {
            this.cChose,
            this.cStt,
            this.cId,
            this.cUid,
            this.cToken,
            this.cCookies,
            this.cEmail,
            this.cPhone,
            this.cName,
            this.cFollow,
            this.cFriend,
            this.cGroup,
            this.cBirthday,
            this.cGender,
            this.cPassword,
            this.cMailRecovery,
            this.cPassMail,
            this.cBackup,
            this.cFa2,
            this.cUseragent,
            this.cProxy,
            this.cDateCreateAcc,
            this.cAvatar,
            this.cProfile,
            this.cThuMuc,
            this.cInteractEnd,
            this.cInfo,
            this.cGhiChu,
            this.cStatus});
            this.dtgvAcc.ContextMenuStrip = this.ctmsAcc;
            dataGridViewCellStyle3.Alignment = System.Windows.Forms.DataGridViewContentAlignment.MiddleLeft;
            dataGridViewCellStyle3.BackColor = System.Drawing.SystemColors.Window;
            dataGridViewCellStyle3.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            dataGridViewCellStyle3.ForeColor = System.Drawing.SystemColors.ControlText;
            dataGridViewCellStyle3.SelectionBackColor = System.Drawing.SystemColors.Highlight;
            dataGridViewCellStyle3.SelectionForeColor = System.Drawing.SystemColors.HighlightText;
            dataGridViewCellStyle3.WrapMode = System.Windows.Forms.DataGridViewTriState.False;
            this.dtgvAcc.DefaultCellStyle = dataGridViewCellStyle3;
            this.dtgvAcc.EditMode = System.Windows.Forms.DataGridViewEditMode.EditProgrammatically;
            this.dtgvAcc.Location = new System.Drawing.Point(9, 156);
            this.dtgvAcc.Name = "dtgvAcc";
            this.dtgvAcc.RowHeadersVisible = false;
            this.dtgvAcc.SelectionMode = System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect;
            this.dtgvAcc.Size = new System.Drawing.Size(1225, 423);
            this.dtgvAcc.TabIndex = 0;
            this.dtgvAcc.CellClick += new System.Windows.Forms.DataGridViewCellEventHandler(this.DtgvAcc_CellClick);
            this.dtgvAcc.CellDoubleClick += new System.Windows.Forms.DataGridViewCellEventHandler(this.dtgvAcc_CellDoubleClick);
            this.dtgvAcc.CellValueChanged += new System.Windows.Forms.DataGridViewCellEventHandler(this.dtgvAcc_CellValueChanged);
            this.dtgvAcc.SortCompare += new System.Windows.Forms.DataGridViewSortCompareEventHandler(this.dtgvAcc_SortCompare);
            this.dtgvAcc.KeyDown += new System.Windows.Forms.KeyEventHandler(this.DtgvAcc_KeyDown);
            // 
            // cChose
            // 
            this.cChose.HeaderText = "Chọn";
            this.cChose.Name = "cChose";
            this.cChose.Width = 40;
            // 
            // cStt
            // 
            dataGridViewCellStyle2.Alignment = System.Windows.Forms.DataGridViewContentAlignment.MiddleCenter;
            this.cStt.DefaultCellStyle = dataGridViewCellStyle2;
            this.cStt.HeaderText = "STT";
            this.cStt.Name = "cStt";
            this.cStt.Width = 35;
            // 
            // cId
            // 
            this.cId.HeaderText = "Id";
            this.cId.Name = "cId";
            this.cId.Visible = false;
            this.cId.Width = 90;
            // 
            // cUid
            // 
            this.cUid.HeaderText = "UID";
            this.cUid.Name = "cUid";
            this.cUid.Width = 80;
            // 
            // cToken
            // 
            this.cToken.HeaderText = "Token";
            this.cToken.Name = "cToken";
            this.cToken.Width = 70;
            // 
            // cCookies
            // 
            this.cCookies.HeaderText = "Cookie";
            this.cCookies.Name = "cCookies";
            this.cCookies.Width = 70;
            // 
            // cEmail
            // 
            this.cEmail.HeaderText = "Email";
            this.cEmail.Name = "cEmail";
            this.cEmail.Width = 60;
            // 
            // cPhone
            // 
            this.cPhone.HeaderText = "Phone";
            this.cPhone.Name = "cPhone";
            this.cPhone.SortMode = System.Windows.Forms.DataGridViewColumnSortMode.NotSortable;
            this.cPhone.Visible = false;
            this.cPhone.Width = 90;
            // 
            // cName
            // 
            this.cName.HeaderText = "Tên";
            this.cName.Name = "cName";
            this.cName.Width = 70;
            // 
            // cFollow
            // 
            this.cFollow.HeaderText = "Theo dõi";
            this.cFollow.Name = "cFollow";
            this.cFollow.Width = 80;
            // 
            // cFriend
            // 
            this.cFriend.HeaderText = "Bạn bè";
            this.cFriend.Name = "cFriend";
            this.cFriend.Width = 70;
            // 
            // cGroup
            // 
            this.cGroup.HeaderText = "Nhóm";
            this.cGroup.Name = "cGroup";
            this.cGroup.Width = 60;
            // 
            // cBirthday
            // 
            this.cBirthday.HeaderText = "Ngày sinh";
            this.cBirthday.Name = "cBirthday";
            this.cBirthday.Width = 90;
            // 
            // cGender
            // 
            this.cGender.HeaderText = "Giới Tính";
            this.cGender.Name = "cGender";
            this.cGender.Width = 80;
            // 
            // cPassword
            // 
            this.cPassword.HeaderText = "Mật khẩu";
            this.cPassword.Name = "cPassword";
            this.cPassword.Visible = false;
            this.cPassword.Width = 70;
            // 
            // cMailRecovery
            // 
            this.cMailRecovery.HeaderText = "Email khôi phục";
            this.cMailRecovery.Name = "cMailRecovery";
            this.cMailRecovery.SortMode = System.Windows.Forms.DataGridViewColumnSortMode.NotSortable;
            this.cMailRecovery.Visible = false;
            this.cMailRecovery.Width = 120;
            // 
            // cPassMail
            // 
            this.cPassMail.HeaderText = "Mật khẩu mail";
            this.cPassMail.Name = "cPassMail";
            this.cPassMail.Visible = false;
            this.cPassMail.Width = 120;
            // 
            // cBackup
            // 
            this.cBackup.HeaderText = "Backup";
            this.cBackup.Name = "cBackup";
            this.cBackup.Width = 70;
            // 
            // cFa2
            // 
            this.cFa2.HeaderText = "Mã 2FA";
            this.cFa2.Name = "cFa2";
            this.cFa2.Width = 65;
            // 
            // cUseragent
            // 
            this.cUseragent.HeaderText = "Useragent";
            this.cUseragent.Name = "cUseragent";
            this.cUseragent.Width = 70;
            // 
            // cProxy
            // 
            this.cProxy.HeaderText = "Proxy";
            this.cProxy.Name = "cProxy";
            this.cProxy.Width = 55;
            // 
            // cDateCreateAcc
            // 
            this.cDateCreateAcc.HeaderText = "Ngày tạo";
            this.cDateCreateAcc.Name = "cDateCreateAcc";
            this.cDateCreateAcc.Width = 85;
            // 
            // cAvatar
            // 
            this.cAvatar.HeaderText = "Avatar";
            this.cAvatar.Name = "cAvatar";
            this.cAvatar.Width = 50;
            // 
            // cProfile
            // 
            this.cProfile.HeaderText = "Profile";
            this.cProfile.Name = "cProfile";
            this.cProfile.Width = 50;
            // 
            // cThuMuc
            // 
            this.cThuMuc.HeaderText = "Thư mục";
            this.cThuMuc.Name = "cThuMuc";
            // 
            // cInteractEnd
            // 
            this.cInteractEnd.HeaderText = "Lần tương tác cuối";
            this.cInteractEnd.Name = "cInteractEnd";
            // 
            // cInfo
            // 
            this.cInfo.AutoSizeMode = System.Windows.Forms.DataGridViewAutoSizeColumnMode.None;
            this.cInfo.HeaderText = "Tình Trạng";
            this.cInfo.Name = "cInfo";
            this.cInfo.Width = 90;
            // 
            // cGhiChu
            // 
            this.cGhiChu.HeaderText = "Ghi Chú";
            this.cGhiChu.Name = "cGhiChu";
            // 
            // cStatus
            // 
            this.cStatus.AutoSizeMode = System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill;
            this.cStatus.HeaderText = "Trạng Thái";
            this.cStatus.MinimumWidth = 200;
            this.cStatus.Name = "cStatus";
            // 
            // ctmsAcc
            // 
            this.ctmsAcc.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.chọnLiveToolStripMenuItem,
            this.bỏChọnTấtCảToolStripMenuItem,
            this.copyToolStripMenuItem,
            this.mởTrìnhDuyệtToolStripMenuItem,
            this.xóaTàiKhoảnToolStripMenuItem,
            this.checkCookieToolStripMenuItem,
            this.câpNhâtThôngTinCaNhânToolStripMenuItem,
            this.cậpNhậtDữLiệuToolStripMenuItem,
            this.chuyểnThưMụcToolStripMenuItem,
            this.chứcNăngToolStripMenuItem1,
            this.profileToolStripMenuItem,
            this.backupToolStripMenuItem,
            this.giaiCheckpointToolStripMenuItem,
            this.tảiLạiDanhSáchToolStripMenuItem});
            this.ctmsAcc.Name = "ctmsAcc";
            this.ctmsAcc.Size = new System.Drawing.Size(175, 312);
            this.ctmsAcc.Opening += new System.ComponentModel.CancelEventHandler(this.CtmsAcc_Opening);
            // 
            // chọnLiveToolStripMenuItem
            // 
            this.chọnLiveToolStripMenuItem.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.tấtCảToolStripMenuItem,
            this.liveToolStripMenuItem,
            this.tinhTrangToolStripMenuItem,
            this.trạngTháiToolStripMenuItem});
            this.chọnLiveToolStripMenuItem.Name = "chọnLiveToolStripMenuItem";
            this.chọnLiveToolStripMenuItem.Size = new System.Drawing.Size(174, 22);
            this.chọnLiveToolStripMenuItem.Text = "Chọn";
            // 
            // tấtCảToolStripMenuItem
            // 
            this.tấtCảToolStripMenuItem.Name = "tấtCảToolStripMenuItem";
            this.tấtCảToolStripMenuItem.Size = new System.Drawing.Size(128, 22);
            this.tấtCảToolStripMenuItem.Text = "Tất cả";
            this.tấtCảToolStripMenuItem.Click += new System.EventHandler(this.TấtCảToolStripMenuItem_Click);
            // 
            // liveToolStripMenuItem
            // 
            this.liveToolStripMenuItem.Name = "liveToolStripMenuItem";
            this.liveToolStripMenuItem.Size = new System.Drawing.Size(128, 22);
            this.liveToolStripMenuItem.Text = "Bôi đen";
            this.liveToolStripMenuItem.Click += new System.EventHandler(this.LiveToolStripMenuItem_Click);
            // 
            // tinhTrangToolStripMenuItem
            // 
            this.tinhTrangToolStripMenuItem.Name = "tinhTrangToolStripMenuItem";
            this.tinhTrangToolStripMenuItem.Size = new System.Drawing.Size(128, 22);
            this.tinhTrangToolStripMenuItem.Text = "Tình trạng";
            // 
            // trạngTháiToolStripMenuItem
            // 
            this.trạngTháiToolStripMenuItem.Name = "trạngTháiToolStripMenuItem";
            this.trạngTháiToolStripMenuItem.Size = new System.Drawing.Size(128, 22);
            this.trạngTháiToolStripMenuItem.Text = "Trạng thái";
            this.trạngTháiToolStripMenuItem.Click += new System.EventHandler(this.trạngTháiToolStripMenuItem_Click);
            // 
            // bỏChọnTấtCảToolStripMenuItem
            // 
            this.bỏChọnTấtCảToolStripMenuItem.Name = "bỏChọnTấtCảToolStripMenuItem";
            this.bỏChọnTấtCảToolStripMenuItem.Size = new System.Drawing.Size(174, 22);
            this.bỏChọnTấtCảToolStripMenuItem.Text = "Bỏ chọn tất cả";
            this.bỏChọnTấtCảToolStripMenuItem.Click += new System.EventHandler(this.BỏChọnTấtCảToolStripMenuItem_Click);
            // 
            // copyToolStripMenuItem
            // 
            this.copyToolStripMenuItem.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.uidToolStripMenuItem,
            this.passToolStripMenuItem,
            this.tokenToolStripMenuItem,
            this.cookieToolStripMenuItem,
            this.mailToolStripMenuItem,
            this.fAToolStripMenuItem,
            this.maBaoMât6SôToolStripMenuItem,
            this.uidPassToolStripMenuItem,
            this.uidPass2FaToolStripMenuItem,
            this.mailPassMailToolStripMenuItem,
            this.uidPassTokenCookieToolStripMenuItem,
            this.uidPassTokenCookieMailPassMailToolStripMenuItem,
            this.uidPassTokenCookieMailPassMail2faToolStripMenuItem,
            this.useragentToolStripMenuItem1,
            this.proxyToolStripMenuItem1,
            this.đinhDangKhacToolStripMenuItem});
            this.copyToolStripMenuItem.Name = "copyToolStripMenuItem";
            this.copyToolStripMenuItem.Size = new System.Drawing.Size(174, 22);
            this.copyToolStripMenuItem.Text = "Copy";
            // 
            // uidToolStripMenuItem
            // 
            this.uidToolStripMenuItem.Name = "uidToolStripMenuItem";
            this.uidToolStripMenuItem.Size = new System.Drawing.Size(289, 22);
            this.uidToolStripMenuItem.Text = "Uid";
            this.uidToolStripMenuItem.Click += new System.EventHandler(this.UidToolStripMenuItem_Click);
            // 
            // passToolStripMenuItem
            // 
            this.passToolStripMenuItem.Name = "passToolStripMenuItem";
            this.passToolStripMenuItem.Size = new System.Drawing.Size(289, 22);
            this.passToolStripMenuItem.Text = "Pass";
            this.passToolStripMenuItem.Click += new System.EventHandler(this.PassToolStripMenuItem_Click);
            // 
            // tokenToolStripMenuItem
            // 
            this.tokenToolStripMenuItem.Name = "tokenToolStripMenuItem";
            this.tokenToolStripMenuItem.Size = new System.Drawing.Size(289, 22);
            this.tokenToolStripMenuItem.Text = "Token";
            this.tokenToolStripMenuItem.Click += new System.EventHandler(this.TokenToolStripMenuItem_Click);
            // 
            // cookieToolStripMenuItem
            // 
            this.cookieToolStripMenuItem.Name = "cookieToolStripMenuItem";
            this.cookieToolStripMenuItem.Size = new System.Drawing.Size(289, 22);
            this.cookieToolStripMenuItem.Text = "Cookie";
            this.cookieToolStripMenuItem.Click += new System.EventHandler(this.CookieToolStripMenuItem_Click);
            // 
            // mailToolStripMenuItem
            // 
            this.mailToolStripMenuItem.Name = "mailToolStripMenuItem";
            this.mailToolStripMenuItem.Size = new System.Drawing.Size(289, 22);
            this.mailToolStripMenuItem.Text = "Email";
            this.mailToolStripMenuItem.Click += new System.EventHandler(this.MailToolStripMenuItem_Click_1);
            // 
            // fAToolStripMenuItem
            // 
            this.fAToolStripMenuItem.Name = "fAToolStripMenuItem";
            this.fAToolStripMenuItem.Size = new System.Drawing.Size(289, 22);
            this.fAToolStripMenuItem.Text = "2FA";
            this.fAToolStripMenuItem.Click += new System.EventHandler(this.fAToolStripMenuItem_Click);
            // 
            // maBaoMât6SôToolStripMenuItem
            // 
            this.maBaoMât6SôToolStripMenuItem.Name = "maBaoMât6SôToolStripMenuItem";
            this.maBaoMât6SôToolStripMenuItem.Size = new System.Drawing.Size(289, 22);
            this.maBaoMât6SôToolStripMenuItem.Text = "Mã bảo mật 6 số từ 2FA";
            this.maBaoMât6SôToolStripMenuItem.Click += new System.EventHandler(this.maBaoMât6SôToolStripMenuItem_Click);
            // 
            // uidPassToolStripMenuItem
            // 
            this.uidPassToolStripMenuItem.Name = "uidPassToolStripMenuItem";
            this.uidPassToolStripMenuItem.Size = new System.Drawing.Size(289, 22);
            this.uidPassToolStripMenuItem.Text = "Uid|Pass";
            this.uidPassToolStripMenuItem.Click += new System.EventHandler(this.UidPassToolStripMenuItem_Click);
            // 
            // uidPass2FaToolStripMenuItem
            // 
            this.uidPass2FaToolStripMenuItem.Name = "uidPass2FaToolStripMenuItem";
            this.uidPass2FaToolStripMenuItem.Size = new System.Drawing.Size(289, 22);
            this.uidPass2FaToolStripMenuItem.Text = "Uid|Pass|2Fa";
            this.uidPass2FaToolStripMenuItem.Click += new System.EventHandler(this.uidPass2FaToolStripMenuItem_Click);
            // 
            // mailPassMailToolStripMenuItem
            // 
            this.mailPassMailToolStripMenuItem.Name = "mailPassMailToolStripMenuItem";
            this.mailPassMailToolStripMenuItem.Size = new System.Drawing.Size(289, 22);
            this.mailPassMailToolStripMenuItem.Text = "Mail|Pass mail";
            this.mailPassMailToolStripMenuItem.Click += new System.EventHandler(this.MailPassMailToolStripMenuItem_Click);
            // 
            // uidPassTokenCookieToolStripMenuItem
            // 
            this.uidPassTokenCookieToolStripMenuItem.Name = "uidPassTokenCookieToolStripMenuItem";
            this.uidPassTokenCookieToolStripMenuItem.Size = new System.Drawing.Size(289, 22);
            this.uidPassTokenCookieToolStripMenuItem.Text = "Uid|Pass|Token|Cookie";
            this.uidPassTokenCookieToolStripMenuItem.Click += new System.EventHandler(this.UidPassTokenCookieToolStripMenuItem_Click);
            // 
            // uidPassTokenCookieMailPassMailToolStripMenuItem
            // 
            this.uidPassTokenCookieMailPassMailToolStripMenuItem.Name = "uidPassTokenCookieMailPassMailToolStripMenuItem";
            this.uidPassTokenCookieMailPassMailToolStripMenuItem.Size = new System.Drawing.Size(289, 22);
            this.uidPassTokenCookieMailPassMailToolStripMenuItem.Text = "Uid|Pass|Token|Cookie|Mail|Pass mail";
            this.uidPassTokenCookieMailPassMailToolStripMenuItem.Click += new System.EventHandler(this.UidPassTokenCookieMailPassMailToolStripMenuItem_Click);
            // 
            // uidPassTokenCookieMailPassMail2faToolStripMenuItem
            // 
            this.uidPassTokenCookieMailPassMail2faToolStripMenuItem.Name = "uidPassTokenCookieMailPassMail2faToolStripMenuItem";
            this.uidPassTokenCookieMailPassMail2faToolStripMenuItem.Size = new System.Drawing.Size(289, 22);
            this.uidPassTokenCookieMailPassMail2faToolStripMenuItem.Text = "Uid|Pass|Token|Cookie|Mail|Pass mail|2fa";
            this.uidPassTokenCookieMailPassMail2faToolStripMenuItem.Click += new System.EventHandler(this.UidPassTokenCookieMailPassMail2faToolStripMenuItem_Click);
            // 
            // useragentToolStripMenuItem1
            // 
            this.useragentToolStripMenuItem1.Name = "useragentToolStripMenuItem1";
            this.useragentToolStripMenuItem1.Size = new System.Drawing.Size(289, 22);
            this.useragentToolStripMenuItem1.Text = "Useragent";
            this.useragentToolStripMenuItem1.Click += new System.EventHandler(this.useragentToolStripMenuItem1_Click);
            // 
            // proxyToolStripMenuItem1
            // 
            this.proxyToolStripMenuItem1.Name = "proxyToolStripMenuItem1";
            this.proxyToolStripMenuItem1.Size = new System.Drawing.Size(289, 22);
            this.proxyToolStripMenuItem1.Text = "Proxy";
            this.proxyToolStripMenuItem1.Click += new System.EventHandler(this.proxyToolStripMenuItem1_Click);
            // 
            // đinhDangKhacToolStripMenuItem
            // 
            this.đinhDangKhacToolStripMenuItem.Name = "đinhDangKhacToolStripMenuItem";
            this.đinhDangKhacToolStripMenuItem.Size = new System.Drawing.Size(289, 22);
            this.đinhDangKhacToolStripMenuItem.Text = "Other...";
            this.đinhDangKhacToolStripMenuItem.Click += new System.EventHandler(this.đinhDangKhacToolStripMenuItem_Click);
            // 
            // mởTrìnhDuyệtToolStripMenuItem
            // 
            this.mởTrìnhDuyệtToolStripMenuItem.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.mởLuônToolStripMenuItem,
            this.càiĐặtCấuHìnhMởToolStripMenuItem});
            this.mởTrìnhDuyệtToolStripMenuItem.Name = "mởTrìnhDuyệtToolStripMenuItem";
            this.mởTrìnhDuyệtToolStripMenuItem.Size = new System.Drawing.Size(174, 22);
            this.mởTrìnhDuyệtToolStripMenuItem.Text = "Mở trình duyệt";
            // 
            // mởLuônToolStripMenuItem
            // 
            this.mởLuônToolStripMenuItem.Name = "mởLuônToolStripMenuItem";
            this.mởLuônToolStripMenuItem.Size = new System.Drawing.Size(181, 22);
            this.mởLuônToolStripMenuItem.Text = "Tiến hành mở";
            this.mởLuônToolStripMenuItem.Click += new System.EventHandler(this.mởLuônToolStripMenuItem_Click);
            // 
            // càiĐặtCấuHìnhMởToolStripMenuItem
            // 
            this.càiĐặtCấuHìnhMởToolStripMenuItem.Name = "càiĐặtCấuHìnhMởToolStripMenuItem";
            this.càiĐặtCấuHìnhMởToolStripMenuItem.Size = new System.Drawing.Size(181, 22);
            this.càiĐặtCấuHìnhMởToolStripMenuItem.Text = "Cài đặt cấu hình mở";
            this.càiĐặtCấuHìnhMởToolStripMenuItem.Click += new System.EventHandler(this.mởTrìnhDuyệtToolStripMenuItem_Click);
            // 
            // xóaTàiKhoảnToolStripMenuItem
            // 
            this.xóaTàiKhoảnToolStripMenuItem.Name = "xóaTàiKhoảnToolStripMenuItem";
            this.xóaTàiKhoảnToolStripMenuItem.Size = new System.Drawing.Size(174, 22);
            this.xóaTàiKhoảnToolStripMenuItem.Text = "Xóa tài khoản";
            this.xóaTàiKhoảnToolStripMenuItem.Click += new System.EventHandler(this.giưLaiProfileToolStripMenuItem_Click);
            // 
            // checkCookieToolStripMenuItem
            // 
            this.checkCookieToolStripMenuItem.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.kiểmTraWallToolStripMenuItem,
            this.checkInfoUIDToolStripMenuItem,
            this.kiểmTraTokenToolStripMenuItem,
            this.kiểmTraCookieToolStripMenuItem,
            this.checkAvatarToolStripMenuItem,
            this.checkProfileToolStripMenuItem1,
            this.checkBackupToolStripMenuItem1,
            this.kiểmTraMailpassMailToolStripMenuItem,
            this.checkProxyToolStripMenuItem});
            this.checkCookieToolStripMenuItem.Name = "checkCookieToolStripMenuItem";
            this.checkCookieToolStripMenuItem.Size = new System.Drawing.Size(174, 22);
            this.checkCookieToolStripMenuItem.Text = "Kiểm tra tài khoản";
            this.checkCookieToolStripMenuItem.Click += new System.EventHandler(this.checkCookieToolStripMenuItem_Click);
            // 
            // kiểmTraWallToolStripMenuItem
            // 
            this.kiểmTraWallToolStripMenuItem.Name = "kiểmTraWallToolStripMenuItem";
            this.kiểmTraWallToolStripMenuItem.Size = new System.Drawing.Size(153, 22);
            this.kiểmTraWallToolStripMenuItem.Text = "Check Wall";
            this.kiểmTraWallToolStripMenuItem.ToolTipText = "Không cần dùng token";
            this.kiểmTraWallToolStripMenuItem.Click += new System.EventHandler(this.KiểmTraWallToolStripMenuItem_Click);
            // 
            // checkInfoUIDToolStripMenuItem
            // 
            this.checkInfoUIDToolStripMenuItem.Name = "checkInfoUIDToolStripMenuItem";
            this.checkInfoUIDToolStripMenuItem.Size = new System.Drawing.Size(153, 22);
            this.checkInfoUIDToolStripMenuItem.Text = "Check Info UID";
            this.checkInfoUIDToolStripMenuItem.ToolTipText = "Không cần dùng token\r\nCập nhật thông tin: Họ tên, Giớ́i tính, [Email], [Bạn " +
    "bè], [Nhóm], [Ngày sinh]";
            this.checkInfoUIDToolStripMenuItem.Click += new System.EventHandler(this.checkInfoUIDToolStripMenuItem_Click);
            // 
            // kiểmTraTokenToolStripMenuItem
            // 
            this.kiểmTraTokenToolStripMenuItem.Name = "kiểmTraTokenToolStripMenuItem";
            this.kiểmTraTokenToolStripMenuItem.Size = new System.Drawing.Size(153, 22);
            this.kiểmTraTokenToolStripMenuItem.Text = "Check Token";
            this.kiểmTraTokenToolStripMenuItem.Click += new System.EventHandler(this.KiểmTraTokenToolStripMenuItem_Click);
            // 
            // kiểmTraCookieToolStripMenuItem
            // 
            this.kiểmTraCookieToolStripMenuItem.Name = "kiểmTraCookieToolStripMenuItem";
            this.kiểmTraCookieToolStripMenuItem.Size = new System.Drawing.Size(153, 22);
            this.kiểmTraCookieToolStripMenuItem.Text = "Check Cookie";
            this.kiểmTraCookieToolStripMenuItem.Click += new System.EventHandler(this.KiểmTraCookieToolStripMenuItem_Click);
            // 
            // checkAvatarToolStripMenuItem
            // 
            this.checkAvatarToolStripMenuItem.Name = "checkAvatarToolStripMenuItem";
            this.checkAvatarToolStripMenuItem.Size = new System.Drawing.Size(153, 22);
            this.checkAvatarToolStripMenuItem.Text = "Check Avatar";
            this.checkAvatarToolStripMenuItem.Click += new System.EventHandler(this.checkAvatarToolStripMenuItem_Click);
            // 
            // checkProfileToolStripMenuItem1
            // 
            this.checkProfileToolStripMenuItem1.Name = "checkProfileToolStripMenuItem1";
            this.checkProfileToolStripMenuItem1.Size = new System.Drawing.Size(153, 22);
            this.checkProfileToolStripMenuItem1.Text = "Check Profile";
            this.checkProfileToolStripMenuItem1.Click += new System.EventHandler(this.checkProfileToolStripMenuItem_Click);
            // 
            // checkBackupToolStripMenuItem1
            // 
            this.checkBackupToolStripMenuItem1.Name = "checkBackupToolStripMenuItem1";
            this.checkBackupToolStripMenuItem1.Size = new System.Drawing.Size(153, 22);
            this.checkBackupToolStripMenuItem1.Text = "Check Backup";
            this.checkBackupToolStripMenuItem1.Click += new System.EventHandler(this.checkBackupToolStripMenuItem_Click);
            // 
            // kiểmTraMailpassMailToolStripMenuItem
            // 
            this.kiểmTraMailpassMailToolStripMenuItem.Name = "kiểmTraMailpassMailToolStripMenuItem";
            this.kiểmTraMailpassMailToolStripMenuItem.Size = new System.Drawing.Size(153, 22);
            this.kiểmTraMailpassMailToolStripMenuItem.Text = "Mail|pass Mail";
            this.kiểmTraMailpassMailToolStripMenuItem.Click += new System.EventHandler(this.kiểmTraMailpassMailToolStripMenuItem_Click);
            // 
            // checkProxyToolStripMenuItem
            // 
            this.checkProxyToolStripMenuItem.Name = "checkProxyToolStripMenuItem";
            this.checkProxyToolStripMenuItem.Size = new System.Drawing.Size(153, 22);
            this.checkProxyToolStripMenuItem.Text = "Check Proxy";
            this.checkProxyToolStripMenuItem.Click += new System.EventHandler(this.checkProxyToolStripMenuItem_Click);
            // 
            // câpNhâtThôngTinCaNhânToolStripMenuItem
            // 
            this.câpNhâtThôngTinCaNhânToolStripMenuItem.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.sưDungTokenTrungGianToolStripMenuItem,
            this.sửDụngCookieTrungGianToolStripMenuItem});
            this.câpNhâtThôngTinCaNhânToolStripMenuItem.Name = "câpNhâtThôngTinCaNhânToolStripMenuItem";
            this.câpNhâtThôngTinCaNhânToolStripMenuItem.Size = new System.Drawing.Size(174, 22);
            this.câpNhâtThôngTinCaNhânToolStripMenuItem.Text = "Cập nhật thông tin";
            // 
            // sưDungTokenTrungGianToolStripMenuItem
            // 
            this.sưDungTokenTrungGianToolStripMenuItem.Name = "sưDungTokenTrungGianToolStripMenuItem";
            this.sưDungTokenTrungGianToolStripMenuItem.Size = new System.Drawing.Size(216, 22);
            this.sưDungTokenTrungGianToolStripMenuItem.Text = "Sử dụng Token trung gian";
            this.sưDungTokenTrungGianToolStripMenuItem.ToolTipText = "Cập nhật thông tin: Họ tên, Giớ́i tính, [Email], [Bạn bè], [Nhóm], [Ngày " +
    "sinh]";
            this.sưDungTokenTrungGianToolStripMenuItem.Click += new System.EventHandler(this.sưDungTokenTrungGianToolStripMenuItem_Click);
            // 
            // sửDụngCookieTrungGianToolStripMenuItem
            // 
            this.sửDụngCookieTrungGianToolStripMenuItem.Name = "sửDụngCookieTrungGianToolStripMenuItem";
            this.sửDụngCookieTrungGianToolStripMenuItem.Size = new System.Drawing.Size(216, 22);
            this.sửDụngCookieTrungGianToolStripMenuItem.Text = "Sử dụng Cookie trung gian";
            this.sửDụngCookieTrungGianToolStripMenuItem.Click += new System.EventHandler(this.sửDụngCookieTrungGianToolStripMenuItem_Click);
            // 
            // cậpNhậtDữLiệuToolStripMenuItem
            // 
            this.cậpNhậtDữLiệuToolStripMenuItem.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.cậpToolStripMenuItem,
            this.mậtKhẩuToolStripMenuItem1,
            this.tokenToolStripMenuItem2,
            this.cookieToolStripMenuItem3,
            this.mailKhôiPhụcToolStripMenuItem,
            this.passMailToolStripMenuItem,
            this.mã2FAToolStripMenuItem,
            this.useragentToolStripMenuItem,
            this.proxyToolStripMenuItem,
            this.ghiChuToolStripMenuItem,
            this.ngàySinhToolStripMenuItem});
            this.cậpNhậtDữLiệuToolStripMenuItem.Name = "cậpNhậtDữLiệuToolStripMenuItem";
            this.cậpNhậtDữLiệuToolStripMenuItem.Size = new System.Drawing.Size(174, 22);
            this.cậpNhậtDữLiệuToolStripMenuItem.Text = "Cập nhật dữ liệu";
            // 
            // cậpToolStripMenuItem
            // 
            this.cậpToolStripMenuItem.Name = "cậpToolStripMenuItem";
            this.cậpToolStripMenuItem.Size = new System.Drawing.Size(224, 22);
            this.cậpToolStripMenuItem.Text = "Cập nhật hàng loạt theo UID";
            this.cậpToolStripMenuItem.Click += new System.EventHandler(this.cậpToolStripMenuItem_Click);
            // 
            // mậtKhẩuToolStripMenuItem1
            // 
            this.mậtKhẩuToolStripMenuItem1.Name = "mậtKhẩuToolStripMenuItem1";
            this.mậtKhẩuToolStripMenuItem1.Size = new System.Drawing.Size(224, 22);
            this.mậtKhẩuToolStripMenuItem1.Text = "Password";
            this.mậtKhẩuToolStripMenuItem1.Click += new System.EventHandler(this.mậtKhẩuToolStripMenuItem1_Click);
            // 
            // tokenToolStripMenuItem2
            // 
            this.tokenToolStripMenuItem2.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.tựĐộngLấyToolStripMenuItem1,
            this.nhậpDữLiệuToolStripMenuItem2});
            this.tokenToolStripMenuItem2.Name = "tokenToolStripMenuItem2";
            this.tokenToolStripMenuItem2.Size = new System.Drawing.Size(224, 22);
            this.tokenToolStripMenuItem2.Text = "Token";
            // 
            // tựĐộngLấyToolStripMenuItem1
            // 
            this.tựĐộngLấyToolStripMenuItem1.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.tokenEAAAAZToolStripMenuItem,
            this.tokenBussinessToolStripMenuItem});
            this.tựĐộngLấyToolStripMenuItem1.Name = "tựĐộngLấyToolStripMenuItem1";
            this.tựĐộngLấyToolStripMenuItem1.Size = new System.Drawing.Size(142, 22);
            this.tựĐộngLấyToolStripMenuItem1.Text = "Tự động lấy";
            // 
            // tokenEAAAAZToolStripMenuItem
            // 
            this.tokenEAAAAZToolStripMenuItem.Name = "tokenEAAAAZToolStripMenuItem";
            this.tokenEAAAAZToolStripMenuItem.Size = new System.Drawing.Size(153, 22);
            this.tokenEAAAAZToolStripMenuItem.Text = "Token EAAAAZ";
            this.tokenEAAAAZToolStripMenuItem.ToolTipText = "Sử dụng cookie";
            this.tokenEAAAAZToolStripMenuItem.Click += new System.EventHandler(this.tokenEAAAAZToolStripMenuItem_Click);
            // 
            // tokenBussinessToolStripMenuItem
            // 
            this.tokenBussinessToolStripMenuItem.Name = "tokenBussinessToolStripMenuItem";
            this.tokenBussinessToolStripMenuItem.Size = new System.Drawing.Size(153, 22);
            this.tokenBussinessToolStripMenuItem.Text = "Token EAAG";
            this.tokenBussinessToolStripMenuItem.ToolTipText = "Sử dụng cookie";
            this.tokenBussinessToolStripMenuItem.Click += new System.EventHandler(this.TokenBussinessToolStripMenuItem_Click);
            // 
            // nhậpDữLiệuToolStripMenuItem2
            // 
            this.nhậpDữLiệuToolStripMenuItem2.Name = "nhậpDữLiệuToolStripMenuItem2";
            this.nhậpDữLiệuToolStripMenuItem2.Size = new System.Drawing.Size(142, 22);
            this.nhậpDữLiệuToolStripMenuItem2.Text = "Nhập dữ liệu";
            this.nhậpDữLiệuToolStripMenuItem2.Click += new System.EventHandler(this.NhậpDữLiệuToolStripMenuItem2_Click);
            // 
            // cookieToolStripMenuItem3
            // 
            this.cookieToolStripMenuItem3.Name = "cookieToolStripMenuItem3";
            this.cookieToolStripMenuItem3.Size = new System.Drawing.Size(224, 22);
            this.cookieToolStripMenuItem3.Text = "Cookie";
            this.cookieToolStripMenuItem3.Click += new System.EventHandler(this.NhậpDữLiệuToolStripMenuItem1_Click);
            // 
            // mailKhôiPhụcToolStripMenuItem
            // 
            this.mailKhôiPhụcToolStripMenuItem.Name = "mailKhôiPhụcToolStripMenuItem";
            this.mailKhôiPhụcToolStripMenuItem.Size = new System.Drawing.Size(224, 22);
            this.mailKhôiPhụcToolStripMenuItem.Text = "Email|Pass Email";
            this.mailKhôiPhụcToolStripMenuItem.Click += new System.EventHandler(this.mailKhôiPhụcToolStripMenuItem_Click);
            // 
            // passMailToolStripMenuItem
            // 
            this.passMailToolStripMenuItem.Name = "passMailToolStripMenuItem";
            this.passMailToolStripMenuItem.Size = new System.Drawing.Size(224, 22);
            this.passMailToolStripMenuItem.Text = "Pass Mail";
            this.passMailToolStripMenuItem.Click += new System.EventHandler(this.passMailToolStripMenuItem_Click);
            // 
            // mã2FAToolStripMenuItem
            // 
            this.mã2FAToolStripMenuItem.Name = "mã2FAToolStripMenuItem";
            this.mã2FAToolStripMenuItem.Size = new System.Drawing.Size(224, 22);
            this.mã2FAToolStripMenuItem.Text = "Mã 2FA";
            this.mã2FAToolStripMenuItem.Click += new System.EventHandler(this.mã2FAToolStripMenuItem_Click);
            // 
            // useragentToolStripMenuItem
            // 
            this.useragentToolStripMenuItem.Name = "useragentToolStripMenuItem";
            this.useragentToolStripMenuItem.Size = new System.Drawing.Size(224, 22);
            this.useragentToolStripMenuItem.Text = "Useragent";
            this.useragentToolStripMenuItem.Click += new System.EventHandler(this.useragentToolStripMenuItem_Click);
            // 
            // proxyToolStripMenuItem
            // 
            this.proxyToolStripMenuItem.Name = "proxyToolStripMenuItem";
            this.proxyToolStripMenuItem.Size = new System.Drawing.Size(224, 22);
            this.proxyToolStripMenuItem.Text = "Proxy";
            this.proxyToolStripMenuItem.Click += new System.EventHandler(this.proxyToolStripMenuItem_Click);
            // 
            // ghiChuToolStripMenuItem
            // 
            this.ghiChuToolStripMenuItem.Name = "ghiChuToolStripMenuItem";
            this.ghiChuToolStripMenuItem.Size = new System.Drawing.Size(224, 22);
            this.ghiChuToolStripMenuItem.Text = "Ghi chú";
            this.ghiChuToolStripMenuItem.Click += new System.EventHandler(this.ghiChuToolStripMenuItem_Click);
            // 
            // ngàySinhToolStripMenuItem
            // 
            this.ngàySinhToolStripMenuItem.Name = "ngàySinhToolStripMenuItem";
            this.ngàySinhToolStripMenuItem.Size = new System.Drawing.Size(224, 22);
            this.ngàySinhToolStripMenuItem.Text = "Ngày sinh";
            this.ngàySinhToolStripMenuItem.Click += new System.EventHandler(this.ngàySinhToolStripMenuItem_Click);
            // 
            // chuyểnThưMụcToolStripMenuItem
            // 
            this.chuyểnThưMụcToolStripMenuItem.Name = "chuyểnThưMụcToolStripMenuItem";
            this.chuyểnThưMụcToolStripMenuItem.Size = new System.Drawing.Size(174, 22);
            this.chuyểnThưMụcToolStripMenuItem.Text = "Chuyển thư mục";
            // 
            // chứcNăngToolStripMenuItem1
            // 
            this.chứcNăngToolStripMenuItem1.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.locTrungToolStripMenuItem,
            this.taoShortcutChromeToolStripMenuItem,
            this.tảiXuốngAvatarToolStripMenuItem,
            this.loginHotmailToolStripMenuItem,
            this.loginYandexToolStripMenuItem,
            this.toolStripMenuItem1,
            this.loginGmailToolStripMenuItem,
            this.lToolStripMenuItem,
            this.mởFormQuảnLýTinNhắnToolStripMenuItem,
            this.khôiPhụcMậtKhẩuToolStripMenuItem,
            this.đổiPassHotmailToolStripMenuItem});
            this.chứcNăngToolStripMenuItem1.Name = "chứcNăngToolStripMenuItem1";
            this.chứcNăngToolStripMenuItem1.Size = new System.Drawing.Size(174, 22);
            this.chứcNăngToolStripMenuItem1.Text = "Chức năng";
            // 
            // locTrungToolStripMenuItem
            // 
            this.locTrungToolStripMenuItem.Name = "locTrungToolStripMenuItem";
            this.locTrungToolStripMenuItem.Size = new System.Drawing.Size(215, 22);
            this.locTrungToolStripMenuItem.Text = "Lọc trùng tài khoản";
            this.locTrungToolStripMenuItem.Click += new System.EventHandler(this.locTrungToolStripMenuItem_Click);
            // 
            // taoShortcutChromeToolStripMenuItem
            // 
            this.taoShortcutChromeToolStripMenuItem.Name = "taoShortcutChromeToolStripMenuItem";
            this.taoShortcutChromeToolStripMenuItem.Size = new System.Drawing.Size(215, 22);
            this.taoShortcutChromeToolStripMenuItem.Text = "Tạo Shortcut Chrome";
            this.taoShortcutChromeToolStripMenuItem.Click += new System.EventHandler(this.taoShortcutChromeToolStripMenuItem_Click);
            // 
            // tảiXuốngAvatarToolStripMenuItem
            // 
            this.tảiXuốngAvatarToolStripMenuItem.Name = "tảiXuốngAvatarToolStripMenuItem";
            this.tảiXuốngAvatarToolStripMenuItem.Size = new System.Drawing.Size(215, 22);
            this.tảiXuốngAvatarToolStripMenuItem.Text = "Tải xuống avatar";
            this.tảiXuốngAvatarToolStripMenuItem.Click += new System.EventHandler(this.tảiXuốngAvatarToolStripMenuItem_Click);
            // 
            // loginHotmailToolStripMenuItem
            // 
            this.loginHotmailToolStripMenuItem.Name = "loginHotmailToolStripMenuItem";
            this.loginHotmailToolStripMenuItem.Size = new System.Drawing.Size(215, 22);
            this.loginHotmailToolStripMenuItem.Text = "Login Hotmail";
            this.loginHotmailToolStripMenuItem.Click += new System.EventHandler(this.loginHotmailToolStripMenuItem_Click);
            // 
            // loginYandexToolStripMenuItem
            // 
            this.loginYandexToolStripMenuItem.Name = "loginYandexToolStripMenuItem";
            this.loginYandexToolStripMenuItem.Size = new System.Drawing.Size(215, 22);
            this.loginYandexToolStripMenuItem.Text = "Login Yandex";
            this.loginYandexToolStripMenuItem.Click += new System.EventHandler(this.loginYandexToolStripMenuItem_Click);
            // 
            // toolStripMenuItem1
            // 
            this.toolStripMenuItem1.Name = "toolStripMenuItem1";
            this.toolStripMenuItem1.Size = new System.Drawing.Size(215, 22);
            this.toolStripMenuItem1.Text = "Login Gmail";
            this.toolStripMenuItem1.Click += new System.EventHandler(this.toolStripMenuItem1_Click);
            // 
            // loginGmailToolStripMenuItem
            // 
            this.loginGmailToolStripMenuItem.Name = "loginGmailToolStripMenuItem";
            this.loginGmailToolStripMenuItem.Size = new System.Drawing.Size(215, 22);
            this.loginGmailToolStripMenuItem.Text = "Login Gmail (Dùng Profile)";
            this.loginGmailToolStripMenuItem.Click += new System.EventHandler(this.loginGmailToolStripMenuItem_Click);
            // 
            // lToolStripMenuItem
            // 
            this.lToolStripMenuItem.Name = "lToolStripMenuItem";
            this.lToolStripMenuItem.Size = new System.Drawing.Size(215, 22);
            this.lToolStripMenuItem.Text = "Lọc danh sách theo UID";
            this.lToolStripMenuItem.Click += new System.EventHandler(this.lToolStripMenuItem_Click);
            // 
            // mởFormQuảnLýTinNhắnToolStripMenuItem
            // 
            this.mởFormQuảnLýTinNhắnToolStripMenuItem.Name = "mởFormQuảnLýTinNhắnToolStripMenuItem";
            this.mởFormQuảnLýTinNhắnToolStripMenuItem.Size = new System.Drawing.Size(215, 22);
            this.mởFormQuảnLýTinNhắnToolStripMenuItem.Text = "Mở form quản lý tin nhắn";
            this.mởFormQuảnLýTinNhắnToolStripMenuItem.Click += new System.EventHandler(this.mởFormQuảnLýTinNhắnToolStripMenuItem_Click);
            // 
            // khôiPhụcMậtKhẩuToolStripMenuItem
            // 
            this.khôiPhụcMậtKhẩuToolStripMenuItem.Name = "khôiPhụcMậtKhẩuToolStripMenuItem";
            this.khôiPhụcMậtKhẩuToolStripMenuItem.Size = new System.Drawing.Size(215, 22);
            this.khôiPhụcMậtKhẩuToolStripMenuItem.Text = "Khôi phục mật khẩu";
            this.khôiPhụcMậtKhẩuToolStripMenuItem.Click += new System.EventHandler(this.khôiPhụcMậtKhẩuToolStripMenuItem_Click);
            // 
            // đổiPassHotmailToolStripMenuItem
            // 
            this.đổiPassHotmailToolStripMenuItem.Name = "đổiPassHotmailToolStripMenuItem";
            this.đổiPassHotmailToolStripMenuItem.Size = new System.Drawing.Size(215, 22);
            this.đổiPassHotmailToolStripMenuItem.Text = "Đổi pass hotmail";
            this.đổiPassHotmailToolStripMenuItem.Click += new System.EventHandler(this.đổiPassHotmailToolStripMenuItem_Click);
            // 
            // profileToolStripMenuItem
            // 
            this.profileToolStripMenuItem.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.tạoProfileToolStripMenuItem,
            this.checkProfileToolStripMenuItem,
            this.xóaProfileToolStripMenuItem,
            this.donDepProfileToolStripMenuItem,
            this.xóaCacheToolStripMenuItem,
            this.copyProfileToolStripMenuItem});
            this.profileToolStripMenuItem.Name = "profileToolStripMenuItem";
            this.profileToolStripMenuItem.Size = new System.Drawing.Size(174, 22);
            this.profileToolStripMenuItem.Text = "Profile Chrome";
            // 
            // tạoProfileToolStripMenuItem
            // 
            this.tạoProfileToolStripMenuItem.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.đăngNhâpBăngUidpassToolStripMenuItem,
            this.đăngNhâpBăngCookieToolStripMenuItem});
            this.tạoProfileToolStripMenuItem.Name = "tạoProfileToolStripMenuItem";
            this.tạoProfileToolStripMenuItem.Size = new System.Drawing.Size(167, 22);
            this.tạoProfileToolStripMenuItem.Text = "Tạo profile";
            this.tạoProfileToolStripMenuItem.Click += new System.EventHandler(this.TạoProfileToolStripMenuItem_Click);
            // 
            // đăngNhâpBăngUidpassToolStripMenuItem
            // 
            this.đăngNhâpBăngUidpassToolStripMenuItem.Name = "đăngNhâpBăngUidpassToolStripMenuItem";
            this.đăngNhâpBăngUidpassToolStripMenuItem.Size = new System.Drawing.Size(233, 22);
            this.đăngNhâpBăngUidpassToolStripMenuItem.Text = "Đăng nhập bằng uid|pass (bỏ)";
            this.đăngNhâpBăngUidpassToolStripMenuItem.Visible = false;
            this.đăngNhâpBăngUidpassToolStripMenuItem.Click += new System.EventHandler(this.đăngNhâpBăngUidpassToolStripMenuItem_Click);
            // 
            // đăngNhâpBăngCookieToolStripMenuItem
            // 
            this.đăngNhâpBăngCookieToolStripMenuItem.Name = "đăngNhâpBăngCookieToolStripMenuItem";
            this.đăngNhâpBăngCookieToolStripMenuItem.Size = new System.Drawing.Size(233, 22);
            this.đăngNhâpBăngCookieToolStripMenuItem.Text = "Đăng nhập bằng cookie (bỏ)";
            this.đăngNhâpBăngCookieToolStripMenuItem.Visible = false;
            this.đăngNhâpBăngCookieToolStripMenuItem.Click += new System.EventHandler(this.đăngNhâpBăngCookieToolStripMenuItem_Click);
            // 
            // checkProfileToolStripMenuItem
            // 
            this.checkProfileToolStripMenuItem.Name = "checkProfileToolStripMenuItem";
            this.checkProfileToolStripMenuItem.Size = new System.Drawing.Size(167, 22);
            this.checkProfileToolStripMenuItem.Text = "Check profile";
            this.checkProfileToolStripMenuItem.Click += new System.EventHandler(this.checkProfileToolStripMenuItem_Click);
            // 
            // xóaProfileToolStripMenuItem
            // 
            this.xóaProfileToolStripMenuItem.Name = "xóaProfileToolStripMenuItem";
            this.xóaProfileToolStripMenuItem.Size = new System.Drawing.Size(167, 22);
            this.xóaProfileToolStripMenuItem.Text = "Xóa profile";
            this.xóaProfileToolStripMenuItem.Click += new System.EventHandler(this.xóaProfileToolStripMenuItem_Click);
            // 
            // donDepProfileToolStripMenuItem
            // 
            this.donDepProfileToolStripMenuItem.Name = "donDepProfileToolStripMenuItem";
            this.donDepProfileToolStripMenuItem.Size = new System.Drawing.Size(167, 22);
            this.donDepProfileToolStripMenuItem.Text = "Dọn dẹp profile";
            this.donDepProfileToolStripMenuItem.Click += new System.EventHandler(this.donDepProfileToolStripMenuItem_Click);
            // 
            // xóaCacheToolStripMenuItem
            // 
            this.xóaCacheToolStripMenuItem.Name = "xóaCacheToolStripMenuItem";
            this.xóaCacheToolStripMenuItem.Size = new System.Drawing.Size(167, 22);
            this.xóaCacheToolStripMenuItem.Text = "Xóa Cache Profile";
            this.xóaCacheToolStripMenuItem.Click += new System.EventHandler(this.xóaCacheToolStripMenuItem_Click);
            // 
            // copyProfileToolStripMenuItem
            // 
            this.copyProfileToolStripMenuItem.Name = "copyProfileToolStripMenuItem";
            this.copyProfileToolStripMenuItem.Size = new System.Drawing.Size(167, 22);
            this.copyProfileToolStripMenuItem.Text = "Copy Profile";
            this.copyProfileToolStripMenuItem.Click += new System.EventHandler(this.copyProfileToolStripMenuItem_Click_1);
            // 
            // backupToolStripMenuItem
            // 
            this.backupToolStripMenuItem.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.backupCookieToolStripMenuItem,
            this.taoFileHTMLToolStripMenuItem,
            this.checkBackupToolStripMenuItem,
            this.mởThưMụcBackupToolStripMenuItem,
            this.backupToolStripMenuItem1,
            this.xóaDữLiệuBackupToolStripMenuItem,
            this.dọnDẹpBackupToolStripMenuItem});
            this.backupToolStripMenuItem.Name = "backupToolStripMenuItem";
            this.backupToolStripMenuItem.Size = new System.Drawing.Size(174, 22);
            this.backupToolStripMenuItem.Text = "Backup dữ liệu";
            // 
            // backupCookieToolStripMenuItem
            // 
            this.backupCookieToolStripMenuItem.Name = "backupCookieToolStripMenuItem";
            this.backupCookieToolStripMenuItem.Size = new System.Drawing.Size(183, 22);
            this.backupCookieToolStripMenuItem.Text = "Tiến hành Backup";
            this.backupCookieToolStripMenuItem.Click += new System.EventHandler(this.BackupCookieToolStripMenuItem_Click);
            // 
            // taoFileHTMLToolStripMenuItem
            // 
            this.taoFileHTMLToolStripMenuItem.Name = "taoFileHTMLToolStripMenuItem";
            this.taoFileHTMLToolStripMenuItem.Size = new System.Drawing.Size(183, 22);
            this.taoFileHTMLToolStripMenuItem.Text = "Tạo File HTML";
            this.taoFileHTMLToolStripMenuItem.Click += new System.EventHandler(this.taoFileHTMLToolStripMenuItem_Click);
            // 
            // checkBackupToolStripMenuItem
            // 
            this.checkBackupToolStripMenuItem.Name = "checkBackupToolStripMenuItem";
            this.checkBackupToolStripMenuItem.Size = new System.Drawing.Size(183, 22);
            this.checkBackupToolStripMenuItem.Text = "Check Backup";
            this.checkBackupToolStripMenuItem.Click += new System.EventHandler(this.checkBackupToolStripMenuItem_Click);
            // 
            // mởThưMụcBackupToolStripMenuItem
            // 
            this.mởThưMụcBackupToolStripMenuItem.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.mởFileHTMLToolStripMenuItem,
            this.mởFolderBackupToolStripMenuItem});
            this.mởThưMụcBackupToolStripMenuItem.Name = "mởThưMụcBackupToolStripMenuItem";
            this.mởThưMụcBackupToolStripMenuItem.Size = new System.Drawing.Size(183, 22);
            this.mởThưMụcBackupToolStripMenuItem.Text = "Mở dữ liêu Backup";
            // 
            // mởFileHTMLToolStripMenuItem
            // 
            this.mởFileHTMLToolStripMenuItem.Name = "mởFileHTMLToolStripMenuItem";
            this.mởFileHTMLToolStripMenuItem.Size = new System.Drawing.Size(149, 22);
            this.mởFileHTMLToolStripMenuItem.Text = "File HTML";
            this.mởFileHTMLToolStripMenuItem.Click += new System.EventHandler(this.mơFileHTMLToolStripMenuItem_Click);
            // 
            // mởFolderBackupToolStripMenuItem
            // 
            this.mởFolderBackupToolStripMenuItem.Name = "mởFolderBackupToolStripMenuItem";
            this.mởFolderBackupToolStripMenuItem.Size = new System.Drawing.Size(149, 22);
            this.mởFolderBackupToolStripMenuItem.Text = "Folder Backup";
            this.mởFolderBackupToolStripMenuItem.Click += new System.EventHandler(this.mởThưMụcBackupToolStripMenuItem_Click);
            // 
            // backupToolStripMenuItem1
            // 
            this.backupToolStripMenuItem1.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.htmlToolStripMenuItem,
            this.fileTxtToolStripMenuItem,
            this.thưMụcToolStripMenuItem});
            this.backupToolStripMenuItem1.Name = "backupToolStripMenuItem1";
            this.backupToolStripMenuItem1.Size = new System.Drawing.Size(183, 22);
            this.backupToolStripMenuItem1.Text = "Copy dữ liệu Backup";
            this.backupToolStripMenuItem1.Click += new System.EventHandler(this.backupToolStripMenuItem1_Click);
            // 
            // htmlToolStripMenuItem
            // 
            this.htmlToolStripMenuItem.Name = "htmlToolStripMenuItem";
            this.htmlToolStripMenuItem.Size = new System.Drawing.Size(149, 22);
            this.htmlToolStripMenuItem.Text = "File html";
            this.htmlToolStripMenuItem.Click += new System.EventHandler(this.htmlToolStripMenuItem_Click);
            // 
            // fileTxtToolStripMenuItem
            // 
            this.fileTxtToolStripMenuItem.Name = "fileTxtToolStripMenuItem";
            this.fileTxtToolStripMenuItem.Size = new System.Drawing.Size(149, 22);
            this.fileTxtToolStripMenuItem.Text = "File txt";
            this.fileTxtToolStripMenuItem.Click += new System.EventHandler(this.fileTxtToolStripMenuItem_Click);
            // 
            // thưMụcToolStripMenuItem
            // 
            this.thưMụcToolStripMenuItem.Name = "thưMụcToolStripMenuItem";
            this.thưMụcToolStripMenuItem.Size = new System.Drawing.Size(149, 22);
            this.thưMụcToolStripMenuItem.Text = "Folder Backup";
            this.thưMụcToolStripMenuItem.Click += new System.EventHandler(this.thưMụcToolStripMenuItem_Click_1);
            // 
            // xóaDữLiệuBackupToolStripMenuItem
            // 
            this.xóaDữLiệuBackupToolStripMenuItem.Name = "xóaDữLiệuBackupToolStripMenuItem";
            this.xóaDữLiệuBackupToolStripMenuItem.Size = new System.Drawing.Size(183, 22);
            this.xóaDữLiệuBackupToolStripMenuItem.Text = "Xóa dữ liệu Backup";
            this.xóaDữLiệuBackupToolStripMenuItem.Click += new System.EventHandler(this.xóaDữLiệuBackupToolStripMenuItem_Click);
            // 
            // dọnDẹpBackupToolStripMenuItem
            // 
            this.dọnDẹpBackupToolStripMenuItem.Name = "dọnDẹpBackupToolStripMenuItem";
            this.dọnDẹpBackupToolStripMenuItem.Size = new System.Drawing.Size(183, 22);
            this.dọnDẹpBackupToolStripMenuItem.Text = "Dọn dẹp Backup";
            this.dọnDẹpBackupToolStripMenuItem.Click += new System.EventHandler(this.dọnDẹpBackupToolStripMenuItem_Click);
            // 
            // giaiCheckpointToolStripMenuItem
            // 
            this.giaiCheckpointToolStripMenuItem.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.giảiCheckpintNgàySinhToolStripMenuItem,
            this.gửiOTPVềMailGiaoDiệnMớiToolStripMenuItem,
            this.gửiOTPVềMailMbasicbetaToolStripMenuItem,
            this.giảiCP282ToolStripMenuItem});
            this.giaiCheckpointToolStripMenuItem.Name = "giaiCheckpointToolStripMenuItem";
            this.giaiCheckpointToolStripMenuItem.Size = new System.Drawing.Size(174, 22);
            this.giaiCheckpointToolStripMenuItem.Text = "Giải Checkpoint";
            // 
            // giảiCheckpintNgàySinhToolStripMenuItem
            // 
            this.giảiCheckpintNgàySinhToolStripMenuItem.Name = "giảiCheckpintNgàySinhToolStripMenuItem";
            this.giảiCheckpintNgàySinhToolStripMenuItem.Size = new System.Drawing.Size(252, 22);
            this.giảiCheckpintNgàySinhToolStripMenuItem.Text = "Ngày sinh (Giao diện cũ)";
            this.giảiCheckpintNgàySinhToolStripMenuItem.Click += new System.EventHandler(this.giảiCheckpintNgàySinhToolStripMenuItem_Click);
            // 
            // gửiOTPVềMailGiaoDiệnMớiToolStripMenuItem
            // 
            this.gửiOTPVềMailGiaoDiệnMớiToolStripMenuItem.Name = "gửiOTPVềMailGiaoDiệnMớiToolStripMenuItem";
            this.gửiOTPVềMailGiaoDiệnMớiToolStripMenuItem.Size = new System.Drawing.Size(252, 22);
            this.gửiOTPVềMailGiaoDiệnMớiToolStripMenuItem.Text = "Gửi OTP về mail (hotmail/yandex)";
            this.gửiOTPVềMailGiaoDiệnMớiToolStripMenuItem.Click += new System.EventHandler(this.gửiOTPVềMailGiaoDiệnMớiToolStripMenuItem_Click);
            // 
            // gửiOTPVềMailMbasicbetaToolStripMenuItem
            // 
            this.gửiOTPVềMailMbasicbetaToolStripMenuItem.Name = "gửiOTPVềMailMbasicbetaToolStripMenuItem";
            this.gửiOTPVềMailMbasicbetaToolStripMenuItem.Size = new System.Drawing.Size(252, 22);
            this.gửiOTPVềMailMbasicbetaToolStripMenuItem.Text = "Gửi OTP về mail mbasic";
            this.gửiOTPVềMailMbasicbetaToolStripMenuItem.Click += new System.EventHandler(this.gửiOTPVềMailMbasicbetaToolStripMenuItem_Click);
            // 
            // giảiCP282ToolStripMenuItem
            // 
            this.giảiCP282ToolStripMenuItem.Name = "giảiCP282ToolStripMenuItem";
            this.giảiCP282ToolStripMenuItem.Size = new System.Drawing.Size(252, 22);
            this.giảiCP282ToolStripMenuItem.Text = "Giải CP 282";
            this.giảiCP282ToolStripMenuItem.Click += new System.EventHandler(this.giảiCP282ToolStripMenuItem_Click);
            // 
            // tảiLạiDanhSáchToolStripMenuItem
            // 
            this.tảiLạiDanhSáchToolStripMenuItem.Name = "tảiLạiDanhSáchToolStripMenuItem";
            this.tảiLạiDanhSáchToolStripMenuItem.Size = new System.Drawing.Size(174, 22);
            this.tảiLạiDanhSáchToolStripMenuItem.Text = "Tải lại danh sách";
            this.tảiLạiDanhSáchToolStripMenuItem.Click += new System.EventHandler(this.TảiLạiDanhSáchToolStripMenuItem_Click);
            // 
            // pnlHeader
            // 
            this.pnlHeader.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Left | System.Windows.Forms.AnchorStyles.Right)));
            this.pnlHeader.BackColor = System.Drawing.Color.White;
            this.pnlHeader.Controls.Add(this.lblNotify);
            this.pnlHeader.Controls.Add(this.pictureBox1);
            this.pnlHeader.Controls.Add(this.button2);
            this.pnlHeader.Controls.Add(this.button1);
            this.pnlHeader.Controls.Add(this.btnMinimize);
            this.pnlHeader.Controls.Add(this.bunifuCustomLabel1);
            this.pnlHeader.Cursor = System.Windows.Forms.Cursors.SizeAll;
            this.pnlHeader.Location = new System.Drawing.Point(2, 5);
            this.pnlHeader.Name = "pnlHeader";
            this.pnlHeader.Size = new System.Drawing.Size(1241, 29);
            this.pnlHeader.TabIndex = 0;
            this.pnlHeader.Paint += new System.Windows.Forms.PaintEventHandler(this.pnlHeader_Paint);
            // 
            // lblNotify
            // 
            this.lblNotify.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right)));
            this.lblNotify.AutoSize = true;
            this.lblNotify.Cursor = System.Windows.Forms.Cursors.Hand;
            this.lblNotify.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.lblNotify.ImageAlign = System.Drawing.ContentAlignment.MiddleRight;
            this.lblNotify.LinkColor = System.Drawing.Color.Red;
            this.lblNotify.Location = new System.Drawing.Point(715, 6);
            this.lblNotify.Name = "lblNotify";
            this.lblNotify.Size = new System.Drawing.Size(428, 16);
            this.lblNotify.TabIndex = 13;
            this.lblNotify.TabStop = true;
            this.lblNotify.Text = "Hiện tại MIN SOFTWARE đã có phần mềm nuôi nick trên giả lập LDPlayer!";
            this.lblNotify.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
            this.lblNotify.Visible = false;
            this.lblNotify.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLabel1_LinkClicked);
            // 
            // pictureBox1
            // 
            this.pictureBox1.Cursor = System.Windows.Forms.Cursors.Arrow;
            this.pictureBox1.Image = global::MaxCare.Properties.Resources.logo_minsoftware_new;
            this.pictureBox1.Location = new System.Drawing.Point(6, 1);
            this.pictureBox1.Name = "pictureBox1";
            this.pictureBox1.Size = new System.Drawing.Size(34, 27);
            this.pictureBox1.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;
            this.pictureBox1.TabIndex = 12;
            this.pictureBox1.TabStop = false;
            this.pictureBox1.Click += new System.EventHandler(this.pictureBox1_Click);
            this.pictureBox1.DoubleClick += new System.EventHandler(this.pictureBox1_DoubleClick);
            // 
            // button2
            // 
            this.button2.Cursor = System.Windows.Forms.Cursors.Hand;
            this.button2.Dock = System.Windows.Forms.DockStyle.Right;
            this.button2.FlatAppearance.BorderSize = 0;
            this.button2.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.button2.Font = new System.Drawing.Font("Microsoft Sans Serif", 11.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.button2.ForeColor = System.Drawing.Color.White;
            this.button2.Image = global::MaxCare.Properties.Resources.minimize_window_25px;
            this.button2.Location = new System.Drawing.Point(1145, 0);
            this.button2.Name = "button2";
            this.button2.Size = new System.Drawing.Size(32, 29);
            this.button2.TabIndex = 0;
            this.button2.TextImageRelation = System.Windows.Forms.TextImageRelation.ImageBeforeText;
            this.button2.UseVisualStyleBackColor = true;
            this.button2.Click += new System.EventHandler(this.Button2_Click);
            // 
            // button1
            // 
            this.button1.Cursor = System.Windows.Forms.Cursors.Hand;
            this.button1.Dock = System.Windows.Forms.DockStyle.Right;
            this.button1.FlatAppearance.BorderSize = 0;
            this.button1.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.button1.Font = new System.Drawing.Font("Microsoft Sans Serif", 11.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.button1.ForeColor = System.Drawing.Color.White;
            this.button1.Image = global::MaxCare.Properties.Resources.maximize_window_25px;
            this.button1.Location = new System.Drawing.Point(1177, 0);
            this.button1.Name = "button1";
            this.button1.Size = new System.Drawing.Size(32, 29);
            this.button1.TabIndex = 1;
            this.button1.TextImageRelation = System.Windows.Forms.TextImageRelation.ImageBeforeText;
            this.button1.UseVisualStyleBackColor = true;
            this.button1.Click += new System.EventHandler(this.Button1_Click);
            // 
            // btnMinimize
            // 
            this.btnMinimize.Cursor = System.Windows.Forms.Cursors.Hand;
            this.btnMinimize.Dock = System.Windows.Forms.DockStyle.Right;
            this.btnMinimize.FlatAppearance.BorderSize = 0;
            this.btnMinimize.FlatStyle = System.Windows.Forms.FlatStyle.Flat;
            this.btnMinimize.Font = new System.Drawing.Font("Microsoft Sans Serif", 11.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.btnMinimize.ForeColor = System.Drawing.Color.White;
            this.btnMinimize.Image = global::MaxCare.Properties.Resources.close_window_25px;
            this.btnMinimize.Location = new System.Drawing.Point(1209, 0);
            this.btnMinimize.Name = "btnMinimize";
            this.btnMinimize.Size = new System.Drawing.Size(32, 29);
            this.btnMinimize.TabIndex = 2;
            this.btnMinimize.TextImageRelation = System.Windows.Forms.TextImageRelation.ImageBeforeText;
            this.btnMinimize.UseVisualStyleBackColor = true;
            this.btnMinimize.Click += new System.EventHandler(this.BtnMinimize_Click);
            // 
            // bunifuCustomLabel1
            // 
            this.bunifuCustomLabel1.AutoSize = true;
            this.bunifuCustomLabel1.BackColor = System.Drawing.Color.Transparent;
            this.bunifuCustomLabel1.Cursor = System.Windows.Forms.Cursors.SizeAll;
            this.bunifuCustomLabel1.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.bunifuCustomLabel1.ForeColor = System.Drawing.Color.Black;
            this.bunifuCustomLabel1.Location = new System.Drawing.Point(43, 6);
            this.bunifuCustomLabel1.Name = "bunifuCustomLabel1";
            this.bunifuCustomLabel1.Size = new System.Drawing.Size(576, 16);
            this.bunifuCustomLabel1.TabIndex = 3;
            this.bunifuCustomLabel1.Text = "MAX CARE 4.8.2 - Phần Mềm Quản Lý Và Chăm Sóc Tài Khoản Facebook - MIN SOFTWARE" +
    "";
            // 
            // bunifuCards1
            // 
            this.bunifuCards1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) 
            | System.Windows.Forms.AnchorStyles.Right)));
            this.bunifuCards1.BackColor = System.Drawing.Color.White;
            this.bunifuCards1.BorderRadius = 0;
            this.bunifuCards1.BottomSahddow = true;
            this.bunifuCards1.color = System.Drawing.Color.RoyalBlue;
            this.bunifuCards1.Controls.Add(this.pnlHeader);
            this.bunifuCards1.LeftSahddow = false;
            this.bunifuCards1.Location = new System.Drawing.Point(1, 0);
            this.bunifuCards1.Name = "bunifuCards1";
            this.bunifuCards1.RightSahddow = true;
            this.bunifuCards1.ShadowDepth = 20;
            this.bunifuCards1.Size = new System.Drawing.Size(1243, 38);
            this.bunifuCards1.TabIndex = 0;
            // 
            // grQuanLyThuMuc
            // 
            this.grQuanLyThuMuc.Controls.Add(this.btnLoadAcc);
            this.grQuanLyThuMuc.Controls.Add(this.btnEditFile);
            this.grQuanLyThuMuc.Controls.Add(this.btnDeleteFile);
            this.grQuanLyThuMuc.Controls.Add(this.AddFileAccount);
            this.grQuanLyThuMuc.Controls.Add(this.cbbTinhTrang);
            this.grQuanLyThuMuc.Controls.Add(this.cbbThuMuc);
            this.grQuanLyThuMuc.Controls.Add(this.label2);
            this.grQuanLyThuMuc.Controls.Add(this.label1);
            this.grQuanLyThuMuc.Controls.Add(this.button9);
            this.grQuanLyThuMuc.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.grQuanLyThuMuc.Location = new System.Drawing.Point(572, 65);
            this.grQuanLyThuMuc.Name = "grQuanLyThuMuc";
            this.grQuanLyThuMuc.Size = new System.Drawing.Size(662, 53);
            this.grQuanLyThuMuc.TabIndex = 5;
            this.grQuanLyThuMuc.TabStop = false;
            this.grQuanLyThuMuc.Text = "Quản lý thư mục";
            // 
            // btnLoadAcc
            // 
            this.btnLoadAcc.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Center;
            this.btnLoadAcc.Cursor = System.Windows.Forms.Cursors.Hand;
            this.btnLoadAcc.Location = new System.Drawing.Point(498, 19);
            this.btnLoadAcc.Name = "btnLoadAcc";
            this.btnLoadAcc.Size = new System.Drawing.Size(25, 25);
            this.btnLoadAcc.TabIndex = 6;
            this.toolTip1.SetToolTip(this.btnLoadAcc, "Load lại danh sách");
            this.btnLoadAcc.UseSelectable = true;
            this.btnLoadAcc.Click += new System.EventHandler(this.BtnLoadAcc_Click);
            // 
            // btnEditFile
            // 
            this.btnEditFile.BackColor = System.Drawing.Color.Gray;
            this.btnEditFile.BackgroundImageLayout = System.Windows.Forms.ImageLayout.None;
            this.btnEditFile.Cursor = System.Windows.Forms.Cursors.Hand;
            this.btnEditFile.Enabled = false;
            this.btnEditFile.Location = new System.Drawing.Point(435, 19);
            this.btnEditFile.Name = "btnEditFile";
            this.btnEditFile.Size = new System.Drawing.Size(25, 25);
            this.btnEditFile.TabIndex = 5;
            this.toolTip1.SetToolTip(this.btnEditFile, "Sửa tên thư mục");
            this.btnEditFile.UseSelectable = true;
            this.btnEditFile.UseVisualStyleBackColor = false;
            this.btnEditFile.Click += new System.EventHandler(this.metroButton2_Click_1);
            // 
            // btnDeleteFile
            // 
            this.btnDeleteFile.BackColor = System.Drawing.Color.Gray;
            this.btnDeleteFile.BackgroundImageLayout = System.Windows.Forms.ImageLayout.None;
            this.btnDeleteFile.Cursor = System.Windows.Forms.Cursors.Hand;
            this.btnDeleteFile.Enabled = false;
            this.btnDeleteFile.Location = new System.Drawing.Point(466, 19);
            this.btnDeleteFile.Name = "btnDeleteFile";
            this.btnDeleteFile.Size = new System.Drawing.Size(25, 25);
            this.btnDeleteFile.TabIndex = 5;
            this.toolTip1.SetToolTip(this.btnDeleteFile, "Xóa thư mục");
            this.btnDeleteFile.UseSelectable = true;
            this.btnDeleteFile.UseVisualStyleBackColor = false;
            this.btnDeleteFile.Click += new System.EventHandler(this.BtnDeleteFile_Click);
            // 
            // AddFileAccount
            // 
            this.AddFileAccount.BackgroundImageLayout = System.Windows.Forms.ImageLayout.None;
            this.AddFileAccount.Cursor = System.Windows.Forms.Cursors.Hand;
            this.AddFileAccount.Location = new System.Drawing.Point(404, 19);
            this.AddFileAccount.Name = "AddFileAccount";
            this.AddFileAccount.Size = new System.Drawing.Size(25, 25);
            this.AddFileAccount.TabIndex = 4;
            this.toolTip1.SetToolTip(this.AddFileAccount, "Thêm thư mục");
            this.AddFileAccount.UseSelectable = true;
            this.AddFileAccount.Click += new System.EventHandler(this.AddFileAccount_Click_1);
            // 
            // cbbTinhTrang
            // 
            this.cbbTinhTrang.Cursor = System.Windows.Forms.Cursors.Hand;
            this.cbbTinhTrang.DropDownWidth = 300;
            this.cbbTinhTrang.FontSize = MetroFramework.MetroComboBoxSize.Small;
            this.cbbTinhTrang.FormattingEnabled = true;
            this.cbbTinhTrang.ItemHeight = 19;
            this.cbbTinhTrang.Items.AddRange(new object[] {
            "[Tất cả tình trạng]"});
            this.cbbTinhTrang.Location = new System.Drawing.Point(277, 19);
            this.cbbTinhTrang.Name = "cbbTinhTrang";
            this.cbbTinhTrang.Size = new System.Drawing.Size(121, 25);
            this.cbbTinhTrang.TabIndex = 3;
            this.cbbTinhTrang.UseSelectable = true;
            this.cbbTinhTrang.SelectedIndexChanged += new System.EventHandler(this.cbbTinhTrang_SelectedIndexChanged);
            // 
            // cbbThuMuc
            // 
            this.cbbThuMuc.Cursor = System.Windows.Forms.Cursors.Hand;
            this.cbbThuMuc.DropDownWidth = 350;
            this.cbbThuMuc.FontSize = MetroFramework.MetroComboBoxSize.Small;
            this.cbbThuMuc.FormattingEnabled = true;
            this.cbbThuMuc.ItemHeight = 19;
            this.cbbThuMuc.Location = new System.Drawing.Point(72, 19);
            this.cbbThuMuc.Name = "cbbThuMuc";
            this.cbbThuMuc.Size = new System.Drawing.Size(167, 25);
            this.cbbThuMuc.TabIndex = 1;
            this.cbbThuMuc.UseSelectable = true;
            this.cbbThuMuc.SelectedIndexChanged += new System.EventHandler(this.CbbThuMuc_SelectedIndexChanged);
            // 
            // label2
            // 
            this.label2.AutoSize = true;
            this.label2.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label2.Location = new System.Drawing.Point(241, 22);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(32, 16);
            this.label2.TabIndex = 2;
            this.label2.Text = "Lọc:";
            // 
            // label1
            // 
            this.label1.AutoSize = true;
            this.label1.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label1.Location = new System.Drawing.Point(8, 23);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(64, 16);
            this.label1.TabIndex = 0;
            this.label1.Text = "Thư mục:";
            // 
            // button9
            // 
            this.button9.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right)));
            this.button9.BackColor = System.Drawing.Color.White;
            this.button9.Cursor = System.Windows.Forms.Cursors.Hand;
            this.button9.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.button9.Image = global::MaxCare.Properties.Resources.upload_to_ftp_25px;
            this.button9.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button9.Location = new System.Drawing.Point(530, 18);
            this.button9.Name = "button9";
            this.button9.Size = new System.Drawing.Size(130, 27);
            this.button9.TabIndex = 7;
            this.button9.Text = "Nhập tài khoản";
            this.button9.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
            this.button9.UseVisualStyleBackColor = true;
            this.button9.Click += new System.EventHandler(this.Button3_Click);
            // 
            // grTimKiem
            // 
            this.grTimKiem.Controls.Add(this.BtnSearch);
            this.grTimKiem.Controls.Add(this.cbbSearch);
            this.grTimKiem.Controls.Add(this.txbSearch);
            this.grTimKiem.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.grTimKiem.Location = new System.Drawing.Point(282, 65);
            this.grTimKiem.Name = "grTimKiem";
            this.grTimKiem.Size = new System.Drawing.Size(284, 53);
            this.grTimKiem.TabIndex = 4;
            this.grTimKiem.TabStop = false;
            this.grTimKiem.Text = "Tìm kiếm";
            // 
            // BtnSearch
            // 
            this.BtnSearch.BackgroundImageLayout = System.Windows.Forms.ImageLayout.None;
            this.BtnSearch.Cursor = System.Windows.Forms.Cursors.Hand;
            this.BtnSearch.Location = new System.Drawing.Point(253, 18);
            this.BtnSearch.Name = "BtnSearch";
            this.BtnSearch.Size = new System.Drawing.Size(24, 24);
            this.BtnSearch.TabIndex = 2;
            this.BtnSearch.UseSelectable = true;
            this.BtnSearch.Click += new System.EventHandler(this.BtnSearch_Click);
            // 
            // cbbSearch
            // 
            this.cbbSearch.Cursor = System.Windows.Forms.Cursors.Hand;
            this.cbbSearch.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cbbSearch.DropDownWidth = 100;
            this.cbbSearch.FormattingEnabled = true;
            this.cbbSearch.Location = new System.Drawing.Point(12, 18);
            this.cbbSearch.Name = "cbbSearch";
            this.cbbSearch.Size = new System.Drawing.Size(86, 24);
            this.cbbSearch.TabIndex = 0;
            // 
            // txbSearch
            // 
            this.txbSearch.BorderColor = System.Drawing.Color.SeaGreen;
            this.txbSearch.Location = new System.Drawing.Point(104, 19);
            this.txbSearch.Name = "txbSearch";
            this.txbSearch.Size = new System.Drawing.Size(143, 23);
            this.txbSearch.TabIndex = 1;
            // 
            // btnViewLivestream
            // 
            this.btnViewLivestream.Cursor = System.Windows.Forms.Cursors.Hand;
            this.btnViewLivestream.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.btnViewLivestream.ImageAlign = System.Drawing.ContentAlignment.MiddleRight;
            this.btnViewLivestream.Location = new System.Drawing.Point(275, 1);
            this.btnViewLivestream.Name = "btnViewLivestream";
            this.btnViewLivestream.Size = new System.Drawing.Size(128, 29);
            this.btnViewLivestream.TabIndex = 4;
            this.btnViewLivestream.Text = "Auto xem live";
            this.btnViewLivestream.TextAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btnViewLivestream.UseVisualStyleBackColor = false;
            this.btnViewLivestream.Click += new System.EventHandler(this.BtnViewLivestream_Click);
            // 
            // btnShare
            // 
            this.btnShare.Cursor = System.Windows.Forms.Cursors.Hand;
            this.btnShare.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.btnShare.ImageAlign = System.Drawing.ContentAlignment.MiddleRight;
            this.btnShare.Location = new System.Drawing.Point(139, 1);
            this.btnShare.Name = "btnShare";
            this.btnShare.Size = new System.Drawing.Size(128, 29);
            this.btnShare.TabIndex = 1;
            this.btnShare.Text = "Auto chia sẻ";
            this.btnShare.TextAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btnShare.UseVisualStyleBackColor = false;
            this.btnShare.Click += new System.EventHandler(this.BtnShare_Click);
            // 
            // btnPost
            // 
            this.btnPost.Cursor = System.Windows.Forms.Cursors.Hand;
            this.btnPost.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.btnPost.ImageAlign = System.Drawing.ContentAlignment.MiddleRight;
            this.btnPost.Location = new System.Drawing.Point(3, 1);
            this.btnPost.Name = "btnPost";
            this.btnPost.Size = new System.Drawing.Size(128, 29);
            this.btnPost.TabIndex = 0;
            this.btnPost.Text = "Auto đăng bài";
            this.btnPost.TextAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btnPost.UseVisualStyleBackColor = false;
            this.btnPost.Click += new System.EventHandler(this.BtnPost_Click);
            // 
            // plChucNang
            // 
            this.plChucNang.Controls.Add(this.button8);
            this.plChucNang.Controls.Add(this.button4);
            this.plChucNang.Controls.Add(this.button7);
            this.plChucNang.Controls.Add(this.btnViewLivestream);
            this.plChucNang.Controls.Add(this.button6);
            this.plChucNang.Controls.Add(this.btnShare);
            this.plChucNang.Controls.Add(this.btnPost);
            this.plChucNang.Location = new System.Drawing.Point(6, 120);
            this.plChucNang.Name = "plChucNang";
            this.plChucNang.Size = new System.Drawing.Size(805, 30);
            this.plChucNang.TabIndex = 6;
            // 
            // button8
            // 
            this.button8.Cursor = System.Windows.Forms.Cursors.Hand;
            this.button8.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.button8.ImageAlign = System.Drawing.ContentAlignment.MiddleRight;
            this.button8.Location = new System.Drawing.Point(997, 1);
            this.button8.Name = "button8";
            this.button8.Size = new System.Drawing.Size(128, 29);
            this.button8.TabIndex = 8;
            this.button8.Text = "Marketplace";
            this.button8.TextAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button8.UseVisualStyleBackColor = false;
            this.button8.Click += new System.EventHandler(this.button4_Click);
            // 
            // button4
            // 
            this.button4.Cursor = System.Windows.Forms.Cursors.Hand;
            this.button4.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.button4.ImageAlign = System.Drawing.ContentAlignment.MiddleRight;
            this.button4.Location = new System.Drawing.Point(411, 1);
            this.button4.Name = "button4";
            this.button4.Size = new System.Drawing.Size(128, 29);
            this.button4.TabIndex = 5;
            this.button4.Text = "Đổi thông tin";
            this.button4.TextAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button4.UseVisualStyleBackColor = false;
            this.button4.Click += new System.EventHandler(this.button4_Click);
            // 
            // button7
            // 
            this.button7.Cursor = System.Windows.Forms.Cursors.Hand;
            this.button7.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(163)));
            this.button7.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button7.Location = new System.Drawing.Point(686, 1);
            this.button7.Name = "button7";
            this.button7.Size = new System.Drawing.Size(105, 29);
            this.button7.TabIndex = 7;
            this.button7.Text = "Nhập Proxy";
            this.button7.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
            this.button7.UseVisualStyleBackColor = false;
            this.button7.Click += new System.EventHandler(this.button7_Click);
            // 
            // button6
            // 
            this.button6.Cursor = System.Windows.Forms.Cursors.Hand;
            this.button6.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(163)));
            this.button6.ImageAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.button6.Location = new System.Drawing.Point(547, 1);
            this.button6.Name = "button6";
            this.button6.Size = new System.Drawing.Size(131, 29);
            this.button6.TabIndex = 6;
            this.button6.Text = "Nhập Useragent";
            this.button6.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
            this.button6.UseVisualStyleBackColor = false;
            this.button6.Click += new System.EventHandler(this.button6_Click);
            // 
            // plTrangThai
            // 
            this.plTrangThai.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right)));
            this.plTrangThai.BackColor = System.Drawing.Color.Gainsboro;
            this.plTrangThai.Controls.Add(this.lblTrangThai);
            this.plTrangThai.Location = new System.Drawing.Point(868, 36);
            this.plTrangThai.Name = "plTrangThai";
            this.plTrangThai.Size = new System.Drawing.Size(373, 26);
            this.plTrangThai.TabIndex = 10;
            this.plTrangThai.Visible = false;
            // 
            // lblTrangThai
            // 
            this.lblTrangThai.Dock = System.Windows.Forms.DockStyle.Fill;
            this.lblTrangThai.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.lblTrangThai.Location = new System.Drawing.Point(0, 0);
            this.lblTrangThai.Name = "lblTrangThai";
            this.lblTrangThai.Size = new System.Drawing.Size(373, 26);
            this.lblTrangThai.TabIndex = 0;
            this.lblTrangThai.TextAlign = System.Drawing.ContentAlignment.MiddleRight;
            // 
            // panel1
            // 
            this.panel1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            this.panel1.Controls.Add(this.statusStrip1);
            this.panel1.Location = new System.Drawing.Point(0, 0);
            this.panel1.Name = "panel1";
            this.panel1.Size = new System.Drawing.Size(1244, 610);
            this.panel1.TabIndex = 11;
            this.panel1.Paint += new System.Windows.Forms.PaintEventHandler(this.panel1_Paint);
            // 
            // statusStrip1
            // 
            this.statusStrip1.BackColor = System.Drawing.SystemColors.Control;
            this.statusStrip1.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.statusStrip1.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.toolStripStatusLabel1,
            this.lblStatus,
            this.toolStripStatusLabel3,
            this.lblKey,
            this.toolStripStatusLabel8,
            this.txbUid,
            this.lblUser,
            this.toolStripStatusLabel9,
            this.toolStripStatusLabel10,
            this.lblDateExpried,
            this.toolStripStatusLabel5,
            this.lblCountSelect,
            this.toolStripStatusLabel7,
            this.lblCountTotal});
            this.statusStrip1.Location = new System.Drawing.Point(0, 586);
            this.statusStrip1.Name = "statusStrip1";
            this.statusStrip1.Size = new System.Drawing.Size(1242, 22);
            this.statusStrip1.SizingGrip = false;
            this.statusStrip1.TabIndex = 9;
            this.statusStrip1.Text = "statusStrip1";
            this.statusStrip1.ItemClicked += new System.Windows.Forms.ToolStripItemClickedEventHandler(this.statusStrip1_ItemClicked);
            // 
            // toolStripStatusLabel1
            // 
            this.toolStripStatusLabel1.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.toolStripStatusLabel1.Name = "toolStripStatusLabel1";
            this.toolStripStatusLabel1.Size = new System.Drawing.Size(79, 17);
            this.toolStripStatusLabel1.Text = "Trạng thái:";
            // 
            // lblStatus
            // 
            this.lblStatus.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.lblStatus.ForeColor = System.Drawing.Color.Green;
            this.lblStatus.Name = "lblStatus";
            this.lblStatus.Size = new System.Drawing.Size(78, 17);
            this.lblStatus.Text = "Đã kích hoạt";
            // 
            // toolStripStatusLabel3
            // 
            this.toolStripStatusLabel3.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.toolStripStatusLabel3.Name = "toolStripStatusLabel3";
            this.toolStripStatusLabel3.Size = new System.Drawing.Size(82, 17);
            this.toolStripStatusLabel3.Text = "Mã thiết bị:";
            // 
            // lblKey
            // 
            this.lblKey.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.lblKey.ForeColor = System.Drawing.Color.Teal;
            this.lblKey.Name = "lblKey";
            this.lblKey.Size = new System.Drawing.Size(49, 17);
            this.lblKey.Text = "******";
            // 
            // toolStripStatusLabel8
            // 
            this.toolStripStatusLabel8.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.toolStripStatusLabel8.Name = "toolStripStatusLabel8";
            this.toolStripStatusLabel8.Size = new System.Drawing.Size(42, 17);
            this.toolStripStatusLabel8.Text = "User:";
            // 
            // txbUid
            // 
            this.txbUid.Name = "txbUid";
            this.txbUid.Size = new System.Drawing.Size(0, 17);
            // 
            // lblUser
            // 
            this.lblUser.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Bold);
            this.lblUser.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(192)))), ((int)(((byte)(0)))), ((int)(((byte)(192)))));
            this.lblUser.Name = "lblUser";
            this.lblUser.Size = new System.Drawing.Size(86, 17);
            this.lblUser.Text = "Dân UnPacker";
            // 
            // toolStripStatusLabel9
            // 
            this.toolStripStatusLabel9.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.toolStripStatusLabel9.IsLink = true;
            this.toolStripStatusLabel9.Name = "toolStripStatusLabel9";
            this.toolStripStatusLabel9.Size = new System.Drawing.Size(66, 17);
            this.toolStripStatusLabel9.Text = "Đăng xuất";
            this.toolStripStatusLabel9.Click += new System.EventHandler(this.ToolStripStatusLabel9_Click);
            // 
            // toolStripStatusLabel10
            // 
            this.toolStripStatusLabel10.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.toolStripStatusLabel10.Name = "toolStripStatusLabel10";
            this.toolStripStatusLabel10.Size = new System.Drawing.Size(99, 17);
            this.toolStripStatusLabel10.Text = "Ngày hết hạn:";
            // 
            // lblDateExpried
            // 
            this.lblDateExpried.Font = new System.Drawing.Font("Tahoma", 8.75F, System.Drawing.FontStyle.Bold);
            this.lblDateExpried.ForeColor = System.Drawing.Color.Red;
            this.lblDateExpried.Name = "lblDateExpried";
            this.lblDateExpried.Size = new System.Drawing.Size(64, 17);
            this.lblDateExpried.Text = "Vĩnh Viễn";
            // 
            // toolStripStatusLabel5
            // 
            this.toolStripStatusLabel5.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.toolStripStatusLabel5.Name = "toolStripStatusLabel5";
            this.toolStripStatusLabel5.Size = new System.Drawing.Size(66, 17);
            this.toolStripStatusLabel5.Text = "Đã chọn:";
            // 
            // lblCountSelect
            // 
            this.lblCountSelect.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.lblCountSelect.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(64)))), ((int)(((byte)(0)))));
            this.lblCountSelect.Name = "lblCountSelect";
            this.lblCountSelect.Size = new System.Drawing.Size(16, 17);
            this.lblCountSelect.Text = "0";
            // 
            // toolStripStatusLabel7
            // 
            this.toolStripStatusLabel7.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.toolStripStatusLabel7.Name = "toolStripStatusLabel7";
            this.toolStripStatusLabel7.Size = new System.Drawing.Size(53, 17);
            this.toolStripStatusLabel7.Text = "Tất cả:";
            // 
            // lblCountTotal
            // 
            this.lblCountTotal.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.lblCountTotal.ForeColor = System.Drawing.Color.Maroon;
            this.lblCountTotal.Name = "lblCountTotal";
            this.lblCountTotal.Size = new System.Drawing.Size(16, 17);
            this.lblCountTotal.Text = "0";
            // 
            // toolTip1
            // 
            this.toolTip1.AutomaticDelay = 0;
            this.toolTip1.AutoPopDelay = 30000;
            this.toolTip1.InitialDelay = 0;
            this.toolTip1.ReshowDelay = 40;
            // 
            // bunifuDragControl1
            // 
            this.bunifuDragControl1.Fixed = true;
            this.bunifuDragControl1.Horizontal = true;
            this.bunifuDragControl1.TargetControl = this.pnlHeader;
            this.bunifuDragControl1.Vertical = true;
            // 
            // liênHệToolStripMenuItem
            // 
            this.liênHệToolStripMenuItem.Image = global::MaxCare.Properties.Resources._870175__1_1;
            this.liênHệToolStripMenuItem.Name = "liênHệToolStripMenuItem";
            this.liênHệToolStripMenuItem.Size = new System.Drawing.Size(77, 21);
            this.liênHệToolStripMenuItem.Text = "Liên hệ";
            this.liênHệToolStripMenuItem.Click += new System.EventHandler(this.liênHệToolStripMenuItem_Click);
            // 
            // menuStrip1
            // 
            this.menuStrip1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) 
            | System.Windows.Forms.AnchorStyles.Right)));
            this.menuStrip1.AutoSize = false;
            this.menuStrip1.Dock = System.Windows.Forms.DockStyle.None;
            this.menuStrip1.Font = new System.Drawing.Font("Tahoma", 9.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.menuStrip1.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.hệThốngToolStripMenuItem,
            this.càiĐặtToolStripMenuItem,
            this.thoátToolStripMenuItem,
            this.taiKhoanĐaXoaToolStripMenuItem,
            this.tiệnÍchToolStripMenuItem,
            this.liênHệToolStripMenuItem});
            this.menuStrip1.Location = new System.Drawing.Point(1, 37);
            this.menuStrip1.Name = "menuStrip1";
            this.menuStrip1.RenderMode = System.Windows.Forms.ToolStripRenderMode.Professional;
            this.menuStrip1.Size = new System.Drawing.Size(1062, 25);
            this.menuStrip1.Stretch = false;
            this.menuStrip1.TabIndex = 1;
            this.menuStrip1.Text = "menuStrip1";
            this.menuStrip1.ItemClicked += new System.Windows.Forms.ToolStripItemClickedEventHandler(this.menuStrip1_ItemClicked);
            // 
            // hệThốngToolStripMenuItem
            // 
            this.hệThốngToolStripMenuItem.Image = global::MaxCare.Properties.Resources.settings__1_;
            this.hệThốngToolStripMenuItem.Name = "hệThốngToolStripMenuItem";
            this.hệThốngToolStripMenuItem.Size = new System.Drawing.Size(124, 21);
            this.hệThốngToolStripMenuItem.Text = "Cấu hình chung";
            this.hệThốngToolStripMenuItem.Click += new System.EventHandler(this.mnuCauHinhChung_Click);
            // 
            // càiĐặtToolStripMenuItem
            // 
            this.càiĐặtToolStripMenuItem.Image = global::MaxCare.Properties.Resources._1589513__1_;
            this.càiĐặtToolStripMenuItem.Name = "càiĐặtToolStripMenuItem";
            this.càiĐặtToolStripMenuItem.Size = new System.Drawing.Size(144, 21);
            this.càiĐặtToolStripMenuItem.Text = "Cấu hình tương tác";
            this.càiĐặtToolStripMenuItem.TextDirection = System.Windows.Forms.ToolStripTextDirection.Horizontal;
            this.càiĐặtToolStripMenuItem.Click += new System.EventHandler(this.càiĐặtToolStripMenuItem_Click_1);
            // 
            // thoátToolStripMenuItem
            // 
            this.thoátToolStripMenuItem.Image = global::MaxCare.Properties.Resources._3d_graphics__1_;
            this.thoátToolStripMenuItem.Name = "thoátToolStripMenuItem";
            this.thoátToolStripMenuItem.Size = new System.Drawing.Size(132, 21);
            this.thoátToolStripMenuItem.Text = "Cấu hình hiển thị";
            this.thoátToolStripMenuItem.Click += new System.EventHandler(this.câuHinhHiênThiToolStripMenuItem_Click);
            // 
            // taiKhoanĐaXoaToolStripMenuItem
            // 
            this.taiKhoanĐaXoaToolStripMenuItem.Image = global::MaxCare.Properties.Resources.delete__1_;
            this.taiKhoanĐaXoaToolStripMenuItem.Name = "taiKhoanĐaXoaToolStripMenuItem";
            this.taiKhoanĐaXoaToolStripMenuItem.Size = new System.Drawing.Size(134, 21);
            this.taiKhoanĐaXoaToolStripMenuItem.Text = "Tài khoản đã xóa";
            this.taiKhoanĐaXoaToolStripMenuItem.Click += new System.EventHandler(this.taiKhoanĐaXoaToolStripMenuItem_Click);
            // 
            // tiệnÍchToolStripMenuItem
            // 
            this.tiệnÍchToolStripMenuItem.DropDownItems.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.checkLiveUidToolStripMenuItem,
            this.checkProxyToolStripMenuItem1,
            this.checkHotmailToolStripMenuItem,
            this.lọcTrùngDữLiệuToolStripMenuItem,
            this.xửLýChuỗiOnlineToolStripMenuItem});
            this.tiệnÍchToolStripMenuItem.Image = global::MaxCare.Properties.Resources.recovery__1_1;
            this.tiệnÍchToolStripMenuItem.Name = "tiệnÍchToolStripMenuItem";
            this.tiệnÍchToolStripMenuItem.Size = new System.Drawing.Size(81, 21);
            this.tiệnÍchToolStripMenuItem.Text = "Tiện ích";
            // 
            // checkLiveUidToolStripMenuItem
            // 
            this.checkLiveUidToolStripMenuItem.Name = "checkLiveUidToolStripMenuItem";
            this.checkLiveUidToolStripMenuItem.Size = new System.Drawing.Size(260, 22);
            this.checkLiveUidToolStripMenuItem.Text = "Check Live Uid";
            this.checkLiveUidToolStripMenuItem.Click += new System.EventHandler(this.checkLiveUidToolStripMenuItem_Click);
            // 
            // checkProxyToolStripMenuItem1
            // 
            this.checkProxyToolStripMenuItem1.Name = "checkProxyToolStripMenuItem1";
            this.checkProxyToolStripMenuItem1.Size = new System.Drawing.Size(260, 22);
            this.checkProxyToolStripMenuItem1.Text = "Check Proxy";
            this.checkProxyToolStripMenuItem1.Click += new System.EventHandler(this.checkProxyToolStripMenuItem1_Click);
            // 
            // checkHotmailToolStripMenuItem
            // 
            this.checkHotmailToolStripMenuItem.Name = "checkHotmailToolStripMenuItem";
            this.checkHotmailToolStripMenuItem.Size = new System.Drawing.Size(260, 22);
            this.checkHotmailToolStripMenuItem.Text = "Check Connect email bằng Imap";
            this.checkHotmailToolStripMenuItem.Click += new System.EventHandler(this.checkHotmailToolStripMenuItem_Click);
            // 
            // lọcTrùngDữLiệuToolStripMenuItem
            // 
            this.lọcTrùngDữLiệuToolStripMenuItem.Name = "lọcTrùngDữLiệuToolStripMenuItem";
            this.lọcTrùngDữLiệuToolStripMenuItem.Size = new System.Drawing.Size(260, 22);
            this.lọcTrùngDữLiệuToolStripMenuItem.Text = "Lọc trùng dữ liệu";
            this.lọcTrùngDữLiệuToolStripMenuItem.Click += new System.EventHandler(this.lọcTrùngDữLiệuToolStripMenuItem_Click);
            // 
            // xửLýChuỗiOnlineToolStripMenuItem
            // 
            this.xửLýChuỗiOnlineToolStripMenuItem.Name = "xửLýChuỗiOnlineToolStripMenuItem";
            this.xửLýChuỗiOnlineToolStripMenuItem.Size = new System.Drawing.Size(260, 22);
            this.xửLýChuỗiOnlineToolStripMenuItem.Text = "Xử lý chuỗi cơ bản";
            this.xửLýChuỗiOnlineToolStripMenuItem.Click += new System.EventHandler(this.xửLýChuỗiOnlineToolStripMenuItem_Click);
            // 
            // bunifuDragControl2
            // 
            this.bunifuDragControl2.Fixed = true;
            this.bunifuDragControl2.Horizontal = true;
            this.bunifuDragControl2.TargetControl = this.bunifuCustomLabel1;
            this.bunifuDragControl2.Vertical = true;
            // 
            // timer1
            // 
            this.timer1.Enabled = true;
            this.timer1.Interval = 1800000;
            this.timer1.Tick += new System.EventHandler(this.timer1_Tick);
            // 
            // btnRandomIndexRow
            // 
            this.btnRandomIndexRow.BackgroundImageLayout = System.Windows.Forms.ImageLayout.None;
            this.btnRandomIndexRow.Cursor = System.Windows.Forms.Cursors.Hand;
            this.btnRandomIndexRow.Location = new System.Drawing.Point(1015, 121);
            this.btnRandomIndexRow.Name = "btnRandomIndexRow";
            this.btnRandomIndexRow.Size = new System.Drawing.Size(88, 29);
            this.btnRandomIndexRow.TabIndex = 7;
            this.btnRandomIndexRow.Text = "Random";
            this.btnRandomIndexRow.UseSelectable = true;
            this.btnRandomIndexRow.Click += new System.EventHandler(this.metroButton2_Click);
            // 
            // metroButton1
            // 
            this.metroButton1.Cursor = System.Windows.Forms.Cursors.Hand;
            this.metroButton1.Location = new System.Drawing.Point(1112, 121);
            this.metroButton1.Name = "metroButton1";
            this.metroButton1.Size = new System.Drawing.Size(122, 29);
            this.metroButton1.TabIndex = 7;
            this.metroButton1.Text = "Close Chromedriver";
            this.metroButton1.UseSelectable = true;
            this.metroButton1.Click += new System.EventHandler(this.metroButton1_Click);
            // 
            // btnPause
            // 
            this.btnPause.BackColor = System.Drawing.Color.White;
            this.btnPause.Cursor = System.Windows.Forms.Cursors.Hand;
            this.btnPause.Enabled = false;
            this.btnPause.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.btnPause.Image = global::MaxCare.Properties.Resources.icons8_stop_21px;
            this.btnPause.ImageAlign = System.Drawing.ContentAlignment.MiddleRight;
            this.btnPause.Location = new System.Drawing.Point(145, 79);
            this.btnPause.Name = "btnPause";
            this.btnPause.Size = new System.Drawing.Size(128, 32);
            this.btnPause.TabIndex = 3;
            this.btnPause.Text = "Dừng Tương Tác";
            this.btnPause.TextAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btnPause.UseVisualStyleBackColor = true;
            this.btnPause.Click += new System.EventHandler(this.BtnPause_Click);
            // 
            // btnInteract
            // 
            this.btnInteract.Cursor = System.Windows.Forms.Cursors.Hand;
            this.btnInteract.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.btnInteract.Image = global::MaxCare.Properties.Resources.icons8_play_23px;
            this.btnInteract.ImageAlign = System.Drawing.ContentAlignment.MiddleRight;
            this.btnInteract.Location = new System.Drawing.Point(9, 79);
            this.btnInteract.Name = "btnInteract";
            this.btnInteract.Size = new System.Drawing.Size(128, 32);
            this.btnInteract.TabIndex = 2;
            this.btnInteract.Text = "Chạy Tương Tác";
            this.btnInteract.TextAlign = System.Drawing.ContentAlignment.MiddleLeft;
            this.btnInteract.UseVisualStyleBackColor = false;
            this.btnInteract.Click += new System.EventHandler(this.BtnInteract_Click);
            // 
            // fmain
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.BackColor = System.Drawing.Color.White;
            this.ClientSize = new System.Drawing.Size(1244, 610);
            this.Controls.Add(this.plTrangThai);
            this.Controls.Add(this.btnRandomIndexRow);
            this.Controls.Add(this.metroButton1);
            this.Controls.Add(this.plChucNang);
            this.Controls.Add(this.grTimKiem);
            this.Controls.Add(this.btnPause);
            this.Controls.Add(this.btnInteract);
            this.Controls.Add(this.grQuanLyThuMuc);
            this.Controls.Add(this.bunifuCards1);
            this.Controls.Add(this.menuStrip1);
            this.Controls.Add(this.dtgvAcc);
            this.Controls.Add(this.panel1);
            this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.None;
            this.MainMenuStrip = this.menuStrip1;
            this.Name = "fmain";
            this.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen;
            this.Text = "MAX CARE";
            this.Load += new System.EventHandler(this.FMain_Load);
            ((System.ComponentModel.ISupportInitialize)(this.dtgvAcc)).EndInit();
            this.ctmsAcc.ResumeLayout(false);
            this.pnlHeader.ResumeLayout(false);
            this.pnlHeader.PerformLayout();
            ((System.ComponentModel.ISupportInitialize)(this.pictureBox1)).EndInit();
            this.bunifuCards1.ResumeLayout(false);
            this.grQuanLyThuMuc.ResumeLayout(false);
            this.grQuanLyThuMuc.PerformLayout();
            this.grTimKiem.ResumeLayout(false);
            this.grTimKiem.PerformLayout();
            this.plChucNang.ResumeLayout(false);
            this.plTrangThai.ResumeLayout(false);
            this.panel1.ResumeLayout(false);
            this.panel1.PerformLayout();
            this.statusStrip1.ResumeLayout(false);
            this.statusStrip1.PerformLayout();
            this.menuStrip1.ResumeLayout(false);
            this.menuStrip1.PerformLayout();
            this.ResumeLayout(false);

		}

        private void pnlHeader_Paint(object sender, PaintEventArgs e)
        {

        }

        private MetroContextMenu ctmsAcc;
        private ToolStripMenuItem chọnLiveToolStripMenuItem;
        private ToolStripMenuItem tấtCảToolStripMenuItem;
        private ToolStripMenuItem liveToolStripMenuItem;
        private ToolStripMenuItem tinhTrangToolStripMenuItem;
        private ToolStripMenuItem trạngTháiToolStripMenuItem;
        private ToolStripMenuItem bỏChọnTấtCảToolStripMenuItem;
        private ToolStripMenuItem copyToolStripMenuItem;
        private ToolStripMenuItem uidToolStripMenuItem;
        private ToolStripMenuItem passToolStripMenuItem;
        private ToolStripMenuItem tokenToolStripMenuItem;
        private ToolStripMenuItem cookieToolStripMenuItem;
        private ToolStripMenuItem mailToolStripMenuItem;
        private ToolStripMenuItem fAToolStripMenuItem;
        private ToolStripMenuItem maBaoMât6SôToolStripMenuItem;
        private ToolStripMenuItem uidPassToolStripMenuItem;
        private ToolStripMenuItem uidPass2FaToolStripMenuItem;
        private ToolStripMenuItem mailPassMailToolStripMenuItem;
        private ToolStripMenuItem uidPassTokenCookieToolStripMenuItem;
        private ToolStripMenuItem uidPassTokenCookieMailPassMailToolStripMenuItem;
        private ToolStripMenuItem uidPassTokenCookieMailPassMail2faToolStripMenuItem;
        private ToolStripMenuItem useragentToolStripMenuItem1;
        private ToolStripMenuItem proxyToolStripMenuItem1;
        private ToolStripMenuItem đinhDangKhacToolStripMenuItem;
        private ToolStripMenuItem mởTrìnhDuyệtToolStripMenuItem;
        private ToolStripMenuItem mởLuônToolStripMenuItem;
        private ToolStripMenuItem càiĐặtCấuHìnhMởToolStripMenuItem;
        private ToolStripMenuItem xóaTàiKhoảnToolStripMenuItem;
        private ToolStripMenuItem checkCookieToolStripMenuItem;
        private ToolStripMenuItem kiểmTraWallToolStripMenuItem;
        private ToolStripMenuItem checkInfoUIDToolStripMenuItem;
        private ToolStripMenuItem kiểmTraTokenToolStripMenuItem;
        private ToolStripMenuItem kiểmTraCookieToolStripMenuItem;
        private ToolStripMenuItem checkAvatarToolStripMenuItem;
        private ToolStripMenuItem checkProfileToolStripMenuItem1;
        private ToolStripMenuItem checkBackupToolStripMenuItem1;
        private ToolStripMenuItem kiểmTraMailpassMailToolStripMenuItem;
        private ToolStripMenuItem checkProxyToolStripMenuItem;
        private ToolStripMenuItem câpNhâtThôngTinCaNhânToolStripMenuItem;
        private ToolStripMenuItem sưDungTokenTrungGianToolStripMenuItem;
        private ToolStripMenuItem sửDụngCookieTrungGianToolStripMenuItem;
        private ToolStripMenuItem cậpNhậtDữLiệuToolStripMenuItem;
        private ToolStripMenuItem cậpToolStripMenuItem;
        private ToolStripMenuItem mậtKhẩuToolStripMenuItem1;
        private ToolStripMenuItem tokenToolStripMenuItem2;
        private ToolStripMenuItem tựĐộngLấyToolStripMenuItem1;
        private ToolStripMenuItem tokenEAAAAZToolStripMenuItem;
        private ToolStripMenuItem tokenBussinessToolStripMenuItem;
        private ToolStripMenuItem nhậpDữLiệuToolStripMenuItem2;
        private ToolStripMenuItem cookieToolStripMenuItem3;
        private ToolStripMenuItem mailKhôiPhụcToolStripMenuItem;
        private ToolStripMenuItem passMailToolStripMenuItem;
        private ToolStripMenuItem mã2FAToolStripMenuItem;
        private ToolStripMenuItem useragentToolStripMenuItem;
        private ToolStripMenuItem proxyToolStripMenuItem;
        private ToolStripMenuItem ghiChuToolStripMenuItem;
        private ToolStripMenuItem ngàySinhToolStripMenuItem;
        private ToolStripMenuItem chuyểnThưMụcToolStripMenuItem;
        private ToolStripMenuItem chứcNăngToolStripMenuItem1;
        private ToolStripMenuItem locTrungToolStripMenuItem;
        private ToolStripMenuItem taoShortcutChromeToolStripMenuItem;
        private ToolStripMenuItem tảiXuốngAvatarToolStripMenuItem;
        private ToolStripMenuItem loginHotmailToolStripMenuItem;
        private ToolStripMenuItem loginYandexToolStripMenuItem;
        private ToolStripMenuItem toolStripMenuItem1;
        private ToolStripMenuItem loginGmailToolStripMenuItem;
        private ToolStripMenuItem lToolStripMenuItem;
        private ToolStripMenuItem mởFormQuảnLýTinNhắnToolStripMenuItem;
        private ToolStripMenuItem khôiPhụcMậtKhẩuToolStripMenuItem;
        private ToolStripMenuItem đổiPassHotmailToolStripMenuItem;
        private ToolStripMenuItem profileToolStripMenuItem;
        private ToolStripMenuItem tạoProfileToolStripMenuItem;
        private ToolStripMenuItem đăngNhâpBăngUidpassToolStripMenuItem;
        private ToolStripMenuItem đăngNhâpBăngCookieToolStripMenuItem;
        private ToolStripMenuItem checkProfileToolStripMenuItem;
        private ToolStripMenuItem xóaProfileToolStripMenuItem;
        private ToolStripMenuItem donDepProfileToolStripMenuItem;
        private ToolStripMenuItem xóaCacheToolStripMenuItem;
        private ToolStripMenuItem copyProfileToolStripMenuItem;
        private ToolStripMenuItem backupToolStripMenuItem;
        private ToolStripMenuItem backupCookieToolStripMenuItem;
        private ToolStripMenuItem taoFileHTMLToolStripMenuItem;
        private ToolStripMenuItem checkBackupToolStripMenuItem;
        private ToolStripMenuItem mởThưMụcBackupToolStripMenuItem;
        private ToolStripMenuItem mởFileHTMLToolStripMenuItem;
        private ToolStripMenuItem mởFolderBackupToolStripMenuItem;
        private ToolStripMenuItem backupToolStripMenuItem1;
        private ToolStripMenuItem htmlToolStripMenuItem;
        private ToolStripMenuItem fileTxtToolStripMenuItem;
        private ToolStripMenuItem thưMụcToolStripMenuItem;
        private ToolStripMenuItem xóaDữLiệuBackupToolStripMenuItem;
        private ToolStripMenuItem dọnDẹpBackupToolStripMenuItem;
        private ToolStripMenuItem giaiCheckpointToolStripMenuItem;
        private ToolStripMenuItem giảiCheckpintNgàySinhToolStripMenuItem;
        private ToolStripMenuItem gửiOTPVềMailGiaoDiệnMớiToolStripMenuItem;
        private ToolStripMenuItem gửiOTPVềMailMbasicbetaToolStripMenuItem;
        private ToolStripMenuItem giảiCP282ToolStripMenuItem;
        private ToolStripMenuItem tảiLạiDanhSáchToolStripMenuItem;
        private MetroButton btnLoadAcc;
        private ToolTip toolTip1;
        private MetroButton btnEditFile;
        private MetroButton btnDeleteFile;
        private MetroButton AddFileAccount;
        private MetroButton BtnSearch;
        private StatusStrip statusStrip1;
        private ToolStripStatusLabel toolStripStatusLabel1;
        private ToolStripStatusLabel lblStatus;
        private ToolStripStatusLabel toolStripStatusLabel3;
        private ToolStripStatusLabel lblKey;
        private ToolStripStatusLabel toolStripStatusLabel8;
        private ToolStripStatusLabel txbUid;
        private ToolStripStatusLabel lblUser;
        private ToolStripStatusLabel toolStripStatusLabel9;
        private ToolStripStatusLabel toolStripStatusLabel10;
        public ToolStripStatusLabel lblDateExpried;
        private ToolStripStatusLabel toolStripStatusLabel5;
        private ToolStripStatusLabel lblCountSelect;
        private ToolStripStatusLabel toolStripStatusLabel7;
        private ToolStripStatusLabel lblCountTotal;
        private BunifuDragControl bunifuDragControl1;
        private ToolStripMenuItem hệThốngToolStripMenuItem;
        private ToolStripMenuItem càiĐặtToolStripMenuItem;
        private ToolStripMenuItem thoátToolStripMenuItem;
        private ToolStripMenuItem taiKhoanĐaXoaToolStripMenuItem;
        private ToolStripMenuItem tiệnÍchToolStripMenuItem;
        private ToolStripMenuItem checkLiveUidToolStripMenuItem;
        private ToolStripMenuItem checkProxyToolStripMenuItem1;
        private ToolStripMenuItem checkHotmailToolStripMenuItem;
        private ToolStripMenuItem lọcTrùngDữLiệuToolStripMenuItem;
        private ToolStripMenuItem xửLýChuỗiOnlineToolStripMenuItem;
        private ToolStripMenuItem liênHệToolStripMenuItem;
        private MenuStrip menuStrip1;
        private BunifuDragControl bunifuDragControl2;
        private System.Windows.Forms.Timer timer1;
        private MetroButton btnRandomIndexRow;
        private MetroButton metroButton1;
    }

}